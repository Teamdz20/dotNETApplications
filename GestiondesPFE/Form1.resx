<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>