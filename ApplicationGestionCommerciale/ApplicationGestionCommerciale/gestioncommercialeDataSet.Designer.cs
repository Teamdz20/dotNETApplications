//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.269
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ApplicationGestionCommerciale {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("gestioncommercialeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class gestioncommercialeDataSet : global::System.Data.DataSet {
        
        private categorieDataTable tablecategorie;
        
        private clientDataTable tableclient;
        
        private commandeachatDataTable tablecommandeachat;
        
        private commandeventeDataTable tablecommandevente;
        
        private devisDataTable tabledevis;
        
        private factureDataTable tablefacture;
        
        private familleDataTable tablefamille;
        
        private fournisseurDataTable tablefournisseur;
        
        private lignecommandeachatDataTable tablelignecommandeachat;
        
        private lignecommandeventeDataTable tablelignecommandevente;
        
        private lignedevisDataTable tablelignedevis;
        
        private lignefactureDataTable tablelignefacture;
        
        private produitDataTable tableproduit;
        
        private global::System.Data.DataRelation relationfk_CommandeAchat_Fournisseur1;
        
        private global::System.Data.DataRelation relationfk_CommandeVente_Client1;
        
        private global::System.Data.DataRelation relationfk_Devis_Client1;
        
        private global::System.Data.DataRelation relationfk_Facture_Client;
        
        private global::System.Data.DataRelation relationfk_LigneCommandeAchat_CommandeAchat1;
        
        private global::System.Data.DataRelation relationfk_LigneCommandeAchat_Produit1;
        
        private global::System.Data.DataRelation relationfk_LigneCommandeVente_CommandeVente1;
        
        private global::System.Data.DataRelation relationfk_LigneCommandeVente_Produit1;
        
        private global::System.Data.DataRelation relationfk_ligne_Devis_Produit1;
        
        private global::System.Data.DataRelation relationfk_LigneDevis_Devis1;
        
        private global::System.Data.DataRelation relationfk_LigneFacture_Facture1;
        
        private global::System.Data.DataRelation relationfk_LigneFacture_Produit1;
        
        private global::System.Data.DataRelation relationfk_Produit_Categorie;
        
        private global::System.Data.DataRelation relationfk_Produit_Famille;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public gestioncommercialeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected gestioncommercialeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["categorie"] != null)) {
                    base.Tables.Add(new categorieDataTable(ds.Tables["categorie"]));
                }
                if ((ds.Tables["client"] != null)) {
                    base.Tables.Add(new clientDataTable(ds.Tables["client"]));
                }
                if ((ds.Tables["commandeachat"] != null)) {
                    base.Tables.Add(new commandeachatDataTable(ds.Tables["commandeachat"]));
                }
                if ((ds.Tables["commandevente"] != null)) {
                    base.Tables.Add(new commandeventeDataTable(ds.Tables["commandevente"]));
                }
                if ((ds.Tables["devis"] != null)) {
                    base.Tables.Add(new devisDataTable(ds.Tables["devis"]));
                }
                if ((ds.Tables["facture"] != null)) {
                    base.Tables.Add(new factureDataTable(ds.Tables["facture"]));
                }
                if ((ds.Tables["famille"] != null)) {
                    base.Tables.Add(new familleDataTable(ds.Tables["famille"]));
                }
                if ((ds.Tables["fournisseur"] != null)) {
                    base.Tables.Add(new fournisseurDataTable(ds.Tables["fournisseur"]));
                }
                if ((ds.Tables["lignecommandeachat"] != null)) {
                    base.Tables.Add(new lignecommandeachatDataTable(ds.Tables["lignecommandeachat"]));
                }
                if ((ds.Tables["lignecommandevente"] != null)) {
                    base.Tables.Add(new lignecommandeventeDataTable(ds.Tables["lignecommandevente"]));
                }
                if ((ds.Tables["lignedevis"] != null)) {
                    base.Tables.Add(new lignedevisDataTable(ds.Tables["lignedevis"]));
                }
                if ((ds.Tables["lignefacture"] != null)) {
                    base.Tables.Add(new lignefactureDataTable(ds.Tables["lignefacture"]));
                }
                if ((ds.Tables["produit"] != null)) {
                    base.Tables.Add(new produitDataTable(ds.Tables["produit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public categorieDataTable categorie {
            get {
                return this.tablecategorie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public clientDataTable client {
            get {
                return this.tableclient;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public commandeachatDataTable commandeachat {
            get {
                return this.tablecommandeachat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public commandeventeDataTable commandevente {
            get {
                return this.tablecommandevente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public devisDataTable devis {
            get {
                return this.tabledevis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public factureDataTable facture {
            get {
                return this.tablefacture;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public familleDataTable famille {
            get {
                return this.tablefamille;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fournisseurDataTable fournisseur {
            get {
                return this.tablefournisseur;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lignecommandeachatDataTable lignecommandeachat {
            get {
                return this.tablelignecommandeachat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lignecommandeventeDataTable lignecommandevente {
            get {
                return this.tablelignecommandevente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lignedevisDataTable lignedevis {
            get {
                return this.tablelignedevis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lignefactureDataTable lignefacture {
            get {
                return this.tablelignefacture;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public produitDataTable produit {
            get {
                return this.tableproduit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            gestioncommercialeDataSet cln = ((gestioncommercialeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["categorie"] != null)) {
                    base.Tables.Add(new categorieDataTable(ds.Tables["categorie"]));
                }
                if ((ds.Tables["client"] != null)) {
                    base.Tables.Add(new clientDataTable(ds.Tables["client"]));
                }
                if ((ds.Tables["commandeachat"] != null)) {
                    base.Tables.Add(new commandeachatDataTable(ds.Tables["commandeachat"]));
                }
                if ((ds.Tables["commandevente"] != null)) {
                    base.Tables.Add(new commandeventeDataTable(ds.Tables["commandevente"]));
                }
                if ((ds.Tables["devis"] != null)) {
                    base.Tables.Add(new devisDataTable(ds.Tables["devis"]));
                }
                if ((ds.Tables["facture"] != null)) {
                    base.Tables.Add(new factureDataTable(ds.Tables["facture"]));
                }
                if ((ds.Tables["famille"] != null)) {
                    base.Tables.Add(new familleDataTable(ds.Tables["famille"]));
                }
                if ((ds.Tables["fournisseur"] != null)) {
                    base.Tables.Add(new fournisseurDataTable(ds.Tables["fournisseur"]));
                }
                if ((ds.Tables["lignecommandeachat"] != null)) {
                    base.Tables.Add(new lignecommandeachatDataTable(ds.Tables["lignecommandeachat"]));
                }
                if ((ds.Tables["lignecommandevente"] != null)) {
                    base.Tables.Add(new lignecommandeventeDataTable(ds.Tables["lignecommandevente"]));
                }
                if ((ds.Tables["lignedevis"] != null)) {
                    base.Tables.Add(new lignedevisDataTable(ds.Tables["lignedevis"]));
                }
                if ((ds.Tables["lignefacture"] != null)) {
                    base.Tables.Add(new lignefactureDataTable(ds.Tables["lignefacture"]));
                }
                if ((ds.Tables["produit"] != null)) {
                    base.Tables.Add(new produitDataTable(ds.Tables["produit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablecategorie = ((categorieDataTable)(base.Tables["categorie"]));
            if ((initTable == true)) {
                if ((this.tablecategorie != null)) {
                    this.tablecategorie.InitVars();
                }
            }
            this.tableclient = ((clientDataTable)(base.Tables["client"]));
            if ((initTable == true)) {
                if ((this.tableclient != null)) {
                    this.tableclient.InitVars();
                }
            }
            this.tablecommandeachat = ((commandeachatDataTable)(base.Tables["commandeachat"]));
            if ((initTable == true)) {
                if ((this.tablecommandeachat != null)) {
                    this.tablecommandeachat.InitVars();
                }
            }
            this.tablecommandevente = ((commandeventeDataTable)(base.Tables["commandevente"]));
            if ((initTable == true)) {
                if ((this.tablecommandevente != null)) {
                    this.tablecommandevente.InitVars();
                }
            }
            this.tabledevis = ((devisDataTable)(base.Tables["devis"]));
            if ((initTable == true)) {
                if ((this.tabledevis != null)) {
                    this.tabledevis.InitVars();
                }
            }
            this.tablefacture = ((factureDataTable)(base.Tables["facture"]));
            if ((initTable == true)) {
                if ((this.tablefacture != null)) {
                    this.tablefacture.InitVars();
                }
            }
            this.tablefamille = ((familleDataTable)(base.Tables["famille"]));
            if ((initTable == true)) {
                if ((this.tablefamille != null)) {
                    this.tablefamille.InitVars();
                }
            }
            this.tablefournisseur = ((fournisseurDataTable)(base.Tables["fournisseur"]));
            if ((initTable == true)) {
                if ((this.tablefournisseur != null)) {
                    this.tablefournisseur.InitVars();
                }
            }
            this.tablelignecommandeachat = ((lignecommandeachatDataTable)(base.Tables["lignecommandeachat"]));
            if ((initTable == true)) {
                if ((this.tablelignecommandeachat != null)) {
                    this.tablelignecommandeachat.InitVars();
                }
            }
            this.tablelignecommandevente = ((lignecommandeventeDataTable)(base.Tables["lignecommandevente"]));
            if ((initTable == true)) {
                if ((this.tablelignecommandevente != null)) {
                    this.tablelignecommandevente.InitVars();
                }
            }
            this.tablelignedevis = ((lignedevisDataTable)(base.Tables["lignedevis"]));
            if ((initTable == true)) {
                if ((this.tablelignedevis != null)) {
                    this.tablelignedevis.InitVars();
                }
            }
            this.tablelignefacture = ((lignefactureDataTable)(base.Tables["lignefacture"]));
            if ((initTable == true)) {
                if ((this.tablelignefacture != null)) {
                    this.tablelignefacture.InitVars();
                }
            }
            this.tableproduit = ((produitDataTable)(base.Tables["produit"]));
            if ((initTable == true)) {
                if ((this.tableproduit != null)) {
                    this.tableproduit.InitVars();
                }
            }
            this.relationfk_CommandeAchat_Fournisseur1 = this.Relations["fk_CommandeAchat_Fournisseur1"];
            this.relationfk_CommandeVente_Client1 = this.Relations["fk_CommandeVente_Client1"];
            this.relationfk_Devis_Client1 = this.Relations["fk_Devis_Client1"];
            this.relationfk_Facture_Client = this.Relations["fk_Facture_Client"];
            this.relationfk_LigneCommandeAchat_CommandeAchat1 = this.Relations["fk_LigneCommandeAchat_CommandeAchat1"];
            this.relationfk_LigneCommandeAchat_Produit1 = this.Relations["fk_LigneCommandeAchat_Produit1"];
            this.relationfk_LigneCommandeVente_CommandeVente1 = this.Relations["fk_LigneCommandeVente_CommandeVente1"];
            this.relationfk_LigneCommandeVente_Produit1 = this.Relations["fk_LigneCommandeVente_Produit1"];
            this.relationfk_ligne_Devis_Produit1 = this.Relations["fk_ligne_Devis_Produit1"];
            this.relationfk_LigneDevis_Devis1 = this.Relations["fk_LigneDevis_Devis1"];
            this.relationfk_LigneFacture_Facture1 = this.Relations["fk_LigneFacture_Facture1"];
            this.relationfk_LigneFacture_Produit1 = this.Relations["fk_LigneFacture_Produit1"];
            this.relationfk_Produit_Categorie = this.Relations["fk_Produit_Categorie"];
            this.relationfk_Produit_Famille = this.Relations["fk_Produit_Famille"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "gestioncommercialeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/gestioncommercialeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecategorie = new categorieDataTable();
            base.Tables.Add(this.tablecategorie);
            this.tableclient = new clientDataTable();
            base.Tables.Add(this.tableclient);
            this.tablecommandeachat = new commandeachatDataTable();
            base.Tables.Add(this.tablecommandeachat);
            this.tablecommandevente = new commandeventeDataTable();
            base.Tables.Add(this.tablecommandevente);
            this.tabledevis = new devisDataTable();
            base.Tables.Add(this.tabledevis);
            this.tablefacture = new factureDataTable();
            base.Tables.Add(this.tablefacture);
            this.tablefamille = new familleDataTable();
            base.Tables.Add(this.tablefamille);
            this.tablefournisseur = new fournisseurDataTable();
            base.Tables.Add(this.tablefournisseur);
            this.tablelignecommandeachat = new lignecommandeachatDataTable();
            base.Tables.Add(this.tablelignecommandeachat);
            this.tablelignecommandevente = new lignecommandeventeDataTable();
            base.Tables.Add(this.tablelignecommandevente);
            this.tablelignedevis = new lignedevisDataTable();
            base.Tables.Add(this.tablelignedevis);
            this.tablelignefacture = new lignefactureDataTable();
            base.Tables.Add(this.tablelignefacture);
            this.tableproduit = new produitDataTable();
            base.Tables.Add(this.tableproduit);
            this.relationfk_CommandeAchat_Fournisseur1 = new global::System.Data.DataRelation("fk_CommandeAchat_Fournisseur1", new global::System.Data.DataColumn[] {
                        this.tablefournisseur.idFournisseurColumn}, new global::System.Data.DataColumn[] {
                        this.tablecommandeachat.fr_codeColumn}, false);
            this.Relations.Add(this.relationfk_CommandeAchat_Fournisseur1);
            this.relationfk_CommandeVente_Client1 = new global::System.Data.DataRelation("fk_CommandeVente_Client1", new global::System.Data.DataColumn[] {
                        this.tableclient.code_ClientColumn}, new global::System.Data.DataColumn[] {
                        this.tablecommandevente.cl_codeColumn}, false);
            this.Relations.Add(this.relationfk_CommandeVente_Client1);
            this.relationfk_Devis_Client1 = new global::System.Data.DataRelation("fk_Devis_Client1", new global::System.Data.DataColumn[] {
                        this.tableclient.code_ClientColumn}, new global::System.Data.DataColumn[] {
                        this.tabledevis.Client_codeClientColumn}, false);
            this.Relations.Add(this.relationfk_Devis_Client1);
            this.relationfk_Facture_Client = new global::System.Data.DataRelation("fk_Facture_Client", new global::System.Data.DataColumn[] {
                        this.tableclient.code_ClientColumn}, new global::System.Data.DataColumn[] {
                        this.tablefacture.Client_codeClientColumn}, false);
            this.Relations.Add(this.relationfk_Facture_Client);
            this.relationfk_LigneCommandeAchat_CommandeAchat1 = new global::System.Data.DataRelation("fk_LigneCommandeAchat_CommandeAchat1", new global::System.Data.DataColumn[] {
                        this.tablecommandeachat.cma_codeColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignecommandeachat.cma_codeColumn}, false);
            this.Relations.Add(this.relationfk_LigneCommandeAchat_CommandeAchat1);
            this.relationfk_LigneCommandeAchat_Produit1 = new global::System.Data.DataRelation("fk_LigneCommandeAchat_Produit1", new global::System.Data.DataColumn[] {
                        this.tableproduit.code_produitColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignecommandeachat.pr_codeColumn}, false);
            this.Relations.Add(this.relationfk_LigneCommandeAchat_Produit1);
            this.relationfk_LigneCommandeVente_CommandeVente1 = new global::System.Data.DataRelation("fk_LigneCommandeVente_CommandeVente1", new global::System.Data.DataColumn[] {
                        this.tablecommandevente.cmv_codeColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignecommandevente.cmv_codeColumn}, false);
            this.Relations.Add(this.relationfk_LigneCommandeVente_CommandeVente1);
            this.relationfk_LigneCommandeVente_Produit1 = new global::System.Data.DataRelation("fk_LigneCommandeVente_Produit1", new global::System.Data.DataColumn[] {
                        this.tableproduit.code_produitColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignecommandevente.pr_codeColumn}, false);
            this.Relations.Add(this.relationfk_LigneCommandeVente_Produit1);
            this.relationfk_ligne_Devis_Produit1 = new global::System.Data.DataRelation("fk_ligne_Devis_Produit1", new global::System.Data.DataColumn[] {
                        this.tableproduit.code_produitColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignedevis.pr_codeColumn}, false);
            this.Relations.Add(this.relationfk_ligne_Devis_Produit1);
            this.relationfk_LigneDevis_Devis1 = new global::System.Data.DataRelation("fk_LigneDevis_Devis1", new global::System.Data.DataColumn[] {
                        this.tabledevis.dv_codeColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignedevis.dv_codeColumn}, false);
            this.Relations.Add(this.relationfk_LigneDevis_Devis1);
            this.relationfk_LigneFacture_Facture1 = new global::System.Data.DataRelation("fk_LigneFacture_Facture1", new global::System.Data.DataColumn[] {
                        this.tablefacture.numero_FactureColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignefacture.Facture_numeroFactureColumn}, false);
            this.Relations.Add(this.relationfk_LigneFacture_Facture1);
            this.relationfk_LigneFacture_Produit1 = new global::System.Data.DataRelation("fk_LigneFacture_Produit1", new global::System.Data.DataColumn[] {
                        this.tableproduit.code_produitColumn}, new global::System.Data.DataColumn[] {
                        this.tablelignefacture.Produit_codeProduitColumn}, false);
            this.Relations.Add(this.relationfk_LigneFacture_Produit1);
            this.relationfk_Produit_Categorie = new global::System.Data.DataRelation("fk_Produit_Categorie", new global::System.Data.DataColumn[] {
                        this.tablecategorie.id_categorieColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduit.Categorie_idCategorieColumn}, false);
            this.Relations.Add(this.relationfk_Produit_Categorie);
            this.relationfk_Produit_Famille = new global::System.Data.DataRelation("fk_Produit_Famille", new global::System.Data.DataColumn[] {
                        this.tablefamille.id_familleColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduit.Famille_idFamilleColumn}, false);
            this.Relations.Add(this.relationfk_Produit_Famille);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecategorie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeclient() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecommandeachat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecommandevente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedevis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefacture() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefamille() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefournisseur() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializelignecommandeachat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializelignecommandevente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializelignedevis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializelignefacture() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproduit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void categorieRowChangeEventHandler(object sender, categorieRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void clientRowChangeEventHandler(object sender, clientRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void commandeachatRowChangeEventHandler(object sender, commandeachatRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void commandeventeRowChangeEventHandler(object sender, commandeventeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void devisRowChangeEventHandler(object sender, devisRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void factureRowChangeEventHandler(object sender, factureRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void familleRowChangeEventHandler(object sender, familleRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fournisseurRowChangeEventHandler(object sender, fournisseurRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void lignecommandeachatRowChangeEventHandler(object sender, lignecommandeachatRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void lignecommandeventeRowChangeEventHandler(object sender, lignecommandeventeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void lignedevisRowChangeEventHandler(object sender, lignedevisRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void lignefactureRowChangeEventHandler(object sender, lignefactureRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void produitRowChangeEventHandler(object sender, produitRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class categorieDataTable : global::System.Data.TypedTableBase<categorieRow> {
            
            private global::System.Data.DataColumn columnid_categorie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieDataTable() {
                this.TableName = "categorie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal categorieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected categorieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_categorieColumn {
                get {
                    return this.columnid_categorie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRow this[int index] {
                get {
                    return ((categorieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event categorieRowChangeEventHandler categorieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event categorieRowChangeEventHandler categorieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event categorieRowChangeEventHandler categorieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event categorieRowChangeEventHandler categorieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcategorieRow(categorieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRow AddcategorieRow(string id_categorie) {
                categorieRow rowcategorieRow = ((categorieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_categorie};
                rowcategorieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcategorieRow);
                return rowcategorieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRow FindByid_categorie(string id_categorie) {
                return ((categorieRow)(this.Rows.Find(new object[] {
                            id_categorie})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                categorieDataTable cln = ((categorieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new categorieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_categorie = base.Columns["id_categorie"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_categorie = new global::System.Data.DataColumn("id_categorie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_categorie);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_categorie}, true));
                this.columnid_categorie.AllowDBNull = false;
                this.columnid_categorie.Unique = true;
                this.columnid_categorie.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRow NewcategorieRow() {
                return ((categorieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new categorieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(categorieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.categorieRowChanged != null)) {
                    this.categorieRowChanged(this, new categorieRowChangeEvent(((categorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.categorieRowChanging != null)) {
                    this.categorieRowChanging(this, new categorieRowChangeEvent(((categorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.categorieRowDeleted != null)) {
                    this.categorieRowDeleted(this, new categorieRowChangeEvent(((categorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.categorieRowDeleting != null)) {
                    this.categorieRowDeleting(this, new categorieRowChangeEvent(((categorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecategorieRow(categorieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "categorieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class clientDataTable : global::System.Data.TypedTableBase<clientRow> {
            
            private global::System.Data.DataColumn columncode_Client;
            
            private global::System.Data.DataColumn columnnom_Client;
            
            private global::System.Data.DataColumn columnprenom_Client;
            
            private global::System.Data.DataColumn columnadresse_Client;
            
            private global::System.Data.DataColumn columncodepostal_Client;
            
            private global::System.Data.DataColumn columnville_Client;
            
            private global::System.Data.DataColumn columnpays_Client;
            
            private global::System.Data.DataColumn columntelFixe_Client;
            
            private global::System.Data.DataColumn columntelMobile_Client;
            
            private global::System.Data.DataColumn columnemail_Client;
            
            private global::System.Data.DataColumn columnsite_Client;
            
            private global::System.Data.DataColumn columnfax_Client;
            
            private global::System.Data.DataColumn columnsociete_Client;
            
            private global::System.Data.DataColumn columnetat_Client;
            
            private global::System.Data.DataColumn columnnbTransactions_Client;
            
            private global::System.Data.DataColumn columnnotes_Client;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientDataTable() {
                this.TableName = "client";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal clientDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected clientDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn code_ClientColumn {
                get {
                    return this.columncode_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nom_ClientColumn {
                get {
                    return this.columnnom_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prenom_ClientColumn {
                get {
                    return this.columnprenom_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn adresse_ClientColumn {
                get {
                    return this.columnadresse_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codepostal_ClientColumn {
                get {
                    return this.columncodepostal_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ville_ClientColumn {
                get {
                    return this.columnville_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pays_ClientColumn {
                get {
                    return this.columnpays_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telFixe_ClientColumn {
                get {
                    return this.columntelFixe_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telMobile_ClientColumn {
                get {
                    return this.columntelMobile_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn email_ClientColumn {
                get {
                    return this.columnemail_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn site_ClientColumn {
                get {
                    return this.columnsite_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fax_ClientColumn {
                get {
                    return this.columnfax_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn societe_ClientColumn {
                get {
                    return this.columnsociete_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn etat_ClientColumn {
                get {
                    return this.columnetat_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nbTransactions_ClientColumn {
                get {
                    return this.columnnbTransactions_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notes_ClientColumn {
                get {
                    return this.columnnotes_Client;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow this[int index] {
                get {
                    return ((clientRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event clientRowChangeEventHandler clientRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event clientRowChangeEventHandler clientRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event clientRowChangeEventHandler clientRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event clientRowChangeEventHandler clientRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddclientRow(clientRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow AddclientRow(
                        string code_Client, 
                        string nom_Client, 
                        string prenom_Client, 
                        string adresse_Client, 
                        short codepostal_Client, 
                        string ville_Client, 
                        string pays_Client, 
                        short telFixe_Client, 
                        short telMobile_Client, 
                        string email_Client, 
                        string site_Client, 
                        short fax_Client, 
                        string societe_Client, 
                        string etat_Client, 
                        short nbTransactions_Client, 
                        string notes_Client) {
                clientRow rowclientRow = ((clientRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code_Client,
                        nom_Client,
                        prenom_Client,
                        adresse_Client,
                        codepostal_Client,
                        ville_Client,
                        pays_Client,
                        telFixe_Client,
                        telMobile_Client,
                        email_Client,
                        site_Client,
                        fax_Client,
                        societe_Client,
                        etat_Client,
                        nbTransactions_Client,
                        notes_Client};
                rowclientRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowclientRow);
                return rowclientRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow FindBycode_Client(string code_Client) {
                return ((clientRow)(this.Rows.Find(new object[] {
                            code_Client})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                clientDataTable cln = ((clientDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new clientDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncode_Client = base.Columns["code_Client"];
                this.columnnom_Client = base.Columns["nom_Client"];
                this.columnprenom_Client = base.Columns["prenom_Client"];
                this.columnadresse_Client = base.Columns["adresse_Client"];
                this.columncodepostal_Client = base.Columns["codepostal_Client"];
                this.columnville_Client = base.Columns["ville_Client"];
                this.columnpays_Client = base.Columns["pays_Client"];
                this.columntelFixe_Client = base.Columns["telFixe_Client"];
                this.columntelMobile_Client = base.Columns["telMobile_Client"];
                this.columnemail_Client = base.Columns["email_Client"];
                this.columnsite_Client = base.Columns["site_Client"];
                this.columnfax_Client = base.Columns["fax_Client"];
                this.columnsociete_Client = base.Columns["societe_Client"];
                this.columnetat_Client = base.Columns["etat_Client"];
                this.columnnbTransactions_Client = base.Columns["nbTransactions_Client"];
                this.columnnotes_Client = base.Columns["notes_Client"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncode_Client = new global::System.Data.DataColumn("code_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode_Client);
                this.columnnom_Client = new global::System.Data.DataColumn("nom_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnom_Client);
                this.columnprenom_Client = new global::System.Data.DataColumn("prenom_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprenom_Client);
                this.columnadresse_Client = new global::System.Data.DataColumn("adresse_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadresse_Client);
                this.columncodepostal_Client = new global::System.Data.DataColumn("codepostal_Client", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodepostal_Client);
                this.columnville_Client = new global::System.Data.DataColumn("ville_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnville_Client);
                this.columnpays_Client = new global::System.Data.DataColumn("pays_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpays_Client);
                this.columntelFixe_Client = new global::System.Data.DataColumn("telFixe_Client", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelFixe_Client);
                this.columntelMobile_Client = new global::System.Data.DataColumn("telMobile_Client", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelMobile_Client);
                this.columnemail_Client = new global::System.Data.DataColumn("email_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_Client);
                this.columnsite_Client = new global::System.Data.DataColumn("site_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsite_Client);
                this.columnfax_Client = new global::System.Data.DataColumn("fax_Client", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax_Client);
                this.columnsociete_Client = new global::System.Data.DataColumn("societe_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsociete_Client);
                this.columnetat_Client = new global::System.Data.DataColumn("etat_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnetat_Client);
                this.columnnbTransactions_Client = new global::System.Data.DataColumn("nbTransactions_Client", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnbTransactions_Client);
                this.columnnotes_Client = new global::System.Data.DataColumn("notes_Client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes_Client);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode_Client}, true));
                this.columncode_Client.AllowDBNull = false;
                this.columncode_Client.Unique = true;
                this.columncode_Client.MaxLength = 15;
                this.columnnom_Client.AllowDBNull = false;
                this.columnnom_Client.MaxLength = 20;
                this.columnprenom_Client.MaxLength = 20;
                this.columnadresse_Client.AllowDBNull = false;
                this.columnadresse_Client.MaxLength = 25;
                this.columncodepostal_Client.AllowDBNull = false;
                this.columnville_Client.MaxLength = 25;
                this.columnpays_Client.MaxLength = 20;
                this.columnemail_Client.MaxLength = 30;
                this.columnsociete_Client.MaxLength = 45;
                this.columnetat_Client.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow NewclientRow() {
                return ((clientRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new clientRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(clientRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.clientRowChanged != null)) {
                    this.clientRowChanged(this, new clientRowChangeEvent(((clientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.clientRowChanging != null)) {
                    this.clientRowChanging(this, new clientRowChangeEvent(((clientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.clientRowDeleted != null)) {
                    this.clientRowDeleted(this, new clientRowChangeEvent(((clientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.clientRowDeleting != null)) {
                    this.clientRowDeleting(this, new clientRowChangeEvent(((clientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveclientRow(clientRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "clientDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class commandeachatDataTable : global::System.Data.TypedTableBase<commandeachatRow> {
            
            private global::System.Data.DataColumn columncma_code;
            
            private global::System.Data.DataColumn columnfr_code;
            
            private global::System.Data.DataColumn columncma_statut;
            
            private global::System.Data.DataColumn columncma_date;
            
            private global::System.Data.DataColumn columncma_date_liv;
            
            private global::System.Data.DataColumn columncma_adresse;
            
            private global::System.Data.DataColumn columncma_ville;
            
            private global::System.Data.DataColumn columncma_cp;
            
            private global::System.Data.DataColumn columncma_pays;
            
            private global::System.Data.DataColumn columncma_fixe;
            
            private global::System.Data.DataColumn columncma_mobile;
            
            private global::System.Data.DataColumn columncma_fax;
            
            private global::System.Data.DataColumn columncma_email;
            
            private global::System.Data.DataColumn columncma_sitew;
            
            private global::System.Data.DataColumn columncma_note;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatDataTable() {
                this.TableName = "commandeachat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal commandeachatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected commandeachatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_codeColumn {
                get {
                    return this.columncma_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fr_codeColumn {
                get {
                    return this.columnfr_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_statutColumn {
                get {
                    return this.columncma_statut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_dateColumn {
                get {
                    return this.columncma_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_date_livColumn {
                get {
                    return this.columncma_date_liv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_adresseColumn {
                get {
                    return this.columncma_adresse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_villeColumn {
                get {
                    return this.columncma_ville;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_cpColumn {
                get {
                    return this.columncma_cp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_paysColumn {
                get {
                    return this.columncma_pays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_fixeColumn {
                get {
                    return this.columncma_fixe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_mobileColumn {
                get {
                    return this.columncma_mobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_faxColumn {
                get {
                    return this.columncma_fax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_emailColumn {
                get {
                    return this.columncma_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_sitewColumn {
                get {
                    return this.columncma_sitew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_noteColumn {
                get {
                    return this.columncma_note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow this[int index] {
                get {
                    return ((commandeachatRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeachatRowChangeEventHandler commandeachatRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeachatRowChangeEventHandler commandeachatRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeachatRowChangeEventHandler commandeachatRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeachatRowChangeEventHandler commandeachatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcommandeachatRow(commandeachatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow AddcommandeachatRow(string cma_code, fournisseurRow parentfournisseurRowByfk_CommandeAchat_Fournisseur1, string cma_statut, string cma_date, string cma_date_liv, string cma_adresse, string cma_ville, int cma_cp, string cma_pays, int cma_fixe, int cma_mobile, int cma_fax, string cma_email, string cma_sitew, string cma_note) {
                commandeachatRow rowcommandeachatRow = ((commandeachatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cma_code,
                        null,
                        cma_statut,
                        cma_date,
                        cma_date_liv,
                        cma_adresse,
                        cma_ville,
                        cma_cp,
                        cma_pays,
                        cma_fixe,
                        cma_mobile,
                        cma_fax,
                        cma_email,
                        cma_sitew,
                        cma_note};
                if ((parentfournisseurRowByfk_CommandeAchat_Fournisseur1 != null)) {
                    columnValuesArray[1] = parentfournisseurRowByfk_CommandeAchat_Fournisseur1[0];
                }
                rowcommandeachatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcommandeachatRow);
                return rowcommandeachatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow FindBycma_code(string cma_code) {
                return ((commandeachatRow)(this.Rows.Find(new object[] {
                            cma_code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                commandeachatDataTable cln = ((commandeachatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new commandeachatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncma_code = base.Columns["cma_code"];
                this.columnfr_code = base.Columns["fr_code"];
                this.columncma_statut = base.Columns["cma_statut"];
                this.columncma_date = base.Columns["cma_date"];
                this.columncma_date_liv = base.Columns["cma_date_liv"];
                this.columncma_adresse = base.Columns["cma_adresse"];
                this.columncma_ville = base.Columns["cma_ville"];
                this.columncma_cp = base.Columns["cma_cp"];
                this.columncma_pays = base.Columns["cma_pays"];
                this.columncma_fixe = base.Columns["cma_fixe"];
                this.columncma_mobile = base.Columns["cma_mobile"];
                this.columncma_fax = base.Columns["cma_fax"];
                this.columncma_email = base.Columns["cma_email"];
                this.columncma_sitew = base.Columns["cma_sitew"];
                this.columncma_note = base.Columns["cma_note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncma_code = new global::System.Data.DataColumn("cma_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_code);
                this.columnfr_code = new global::System.Data.DataColumn("fr_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfr_code);
                this.columncma_statut = new global::System.Data.DataColumn("cma_statut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_statut);
                this.columncma_date = new global::System.Data.DataColumn("cma_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_date);
                this.columncma_date_liv = new global::System.Data.DataColumn("cma_date_liv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_date_liv);
                this.columncma_adresse = new global::System.Data.DataColumn("cma_adresse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_adresse);
                this.columncma_ville = new global::System.Data.DataColumn("cma_ville", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_ville);
                this.columncma_cp = new global::System.Data.DataColumn("cma_cp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_cp);
                this.columncma_pays = new global::System.Data.DataColumn("cma_pays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_pays);
                this.columncma_fixe = new global::System.Data.DataColumn("cma_fixe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_fixe);
                this.columncma_mobile = new global::System.Data.DataColumn("cma_mobile", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_mobile);
                this.columncma_fax = new global::System.Data.DataColumn("cma_fax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_fax);
                this.columncma_email = new global::System.Data.DataColumn("cma_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_email);
                this.columncma_sitew = new global::System.Data.DataColumn("cma_sitew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_sitew);
                this.columncma_note = new global::System.Data.DataColumn("cma_note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_note);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncma_code}, true));
                this.columncma_code.AllowDBNull = false;
                this.columncma_code.Unique = true;
                this.columncma_code.MaxLength = 20;
                this.columnfr_code.AllowDBNull = false;
                this.columnfr_code.MaxLength = 45;
                this.columncma_statut.AllowDBNull = false;
                this.columncma_statut.MaxLength = 20;
                this.columncma_date.AllowDBNull = false;
                this.columncma_date.MaxLength = 20;
                this.columncma_date_liv.AllowDBNull = false;
                this.columncma_date_liv.MaxLength = 20;
                this.columncma_adresse.AllowDBNull = false;
                this.columncma_adresse.MaxLength = 20;
                this.columncma_ville.AllowDBNull = false;
                this.columncma_ville.MaxLength = 20;
                this.columncma_cp.AllowDBNull = false;
                this.columncma_pays.AllowDBNull = false;
                this.columncma_pays.MaxLength = 20;
                this.columncma_email.AllowDBNull = false;
                this.columncma_email.MaxLength = 20;
                this.columncma_sitew.MaxLength = 20;
                this.columncma_note.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow NewcommandeachatRow() {
                return ((commandeachatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new commandeachatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(commandeachatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.commandeachatRowChanged != null)) {
                    this.commandeachatRowChanged(this, new commandeachatRowChangeEvent(((commandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.commandeachatRowChanging != null)) {
                    this.commandeachatRowChanging(this, new commandeachatRowChangeEvent(((commandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.commandeachatRowDeleted != null)) {
                    this.commandeachatRowDeleted(this, new commandeachatRowChangeEvent(((commandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.commandeachatRowDeleting != null)) {
                    this.commandeachatRowDeleting(this, new commandeachatRowChangeEvent(((commandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecommandeachatRow(commandeachatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "commandeachatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class commandeventeDataTable : global::System.Data.TypedTableBase<commandeventeRow> {
            
            private global::System.Data.DataColumn columncmv_code;
            
            private global::System.Data.DataColumn columncl_code;
            
            private global::System.Data.DataColumn columncmv_statut;
            
            private global::System.Data.DataColumn columncmv_date;
            
            private global::System.Data.DataColumn columncmv_date_liv;
            
            private global::System.Data.DataColumn columncmv_adresse;
            
            private global::System.Data.DataColumn columncmv_ville;
            
            private global::System.Data.DataColumn columncmv_cp;
            
            private global::System.Data.DataColumn columncmv_pays;
            
            private global::System.Data.DataColumn columncmv_fixe;
            
            private global::System.Data.DataColumn columncmv_mobile;
            
            private global::System.Data.DataColumn columncmv_fax;
            
            private global::System.Data.DataColumn columncmv_email;
            
            private global::System.Data.DataColumn columncmv_sitew;
            
            private global::System.Data.DataColumn columncmv_note;
            
            private global::System.Data.DataColumn columncmv_frais;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeDataTable() {
                this.TableName = "commandevente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal commandeventeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected commandeventeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_codeColumn {
                get {
                    return this.columncmv_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cl_codeColumn {
                get {
                    return this.columncl_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_statutColumn {
                get {
                    return this.columncmv_statut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_dateColumn {
                get {
                    return this.columncmv_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_date_livColumn {
                get {
                    return this.columncmv_date_liv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_adresseColumn {
                get {
                    return this.columncmv_adresse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_villeColumn {
                get {
                    return this.columncmv_ville;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_cpColumn {
                get {
                    return this.columncmv_cp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_paysColumn {
                get {
                    return this.columncmv_pays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_fixeColumn {
                get {
                    return this.columncmv_fixe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_mobileColumn {
                get {
                    return this.columncmv_mobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_faxColumn {
                get {
                    return this.columncmv_fax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_emailColumn {
                get {
                    return this.columncmv_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_sitewColumn {
                get {
                    return this.columncmv_sitew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_noteColumn {
                get {
                    return this.columncmv_note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_fraisColumn {
                get {
                    return this.columncmv_frais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow this[int index] {
                get {
                    return ((commandeventeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeventeRowChangeEventHandler commandeventeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeventeRowChangeEventHandler commandeventeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeventeRowChangeEventHandler commandeventeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event commandeventeRowChangeEventHandler commandeventeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcommandeventeRow(commandeventeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow AddcommandeventeRow(
                        string cmv_code, 
                        clientRow parentclientRowByfk_CommandeVente_Client1, 
                        string cmv_statut, 
                        string cmv_date, 
                        string cmv_date_liv, 
                        string cmv_adresse, 
                        string cmv_ville, 
                        int cmv_cp, 
                        string cmv_pays, 
                        int cmv_fixe, 
                        int cmv_mobile, 
                        int cmv_fax, 
                        string cmv_email, 
                        string cmv_sitew, 
                        string cmv_note, 
                        double cmv_frais) {
                commandeventeRow rowcommandeventeRow = ((commandeventeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cmv_code,
                        null,
                        cmv_statut,
                        cmv_date,
                        cmv_date_liv,
                        cmv_adresse,
                        cmv_ville,
                        cmv_cp,
                        cmv_pays,
                        cmv_fixe,
                        cmv_mobile,
                        cmv_fax,
                        cmv_email,
                        cmv_sitew,
                        cmv_note,
                        cmv_frais};
                if ((parentclientRowByfk_CommandeVente_Client1 != null)) {
                    columnValuesArray[1] = parentclientRowByfk_CommandeVente_Client1[0];
                }
                rowcommandeventeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcommandeventeRow);
                return rowcommandeventeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow FindBycmv_code(string cmv_code) {
                return ((commandeventeRow)(this.Rows.Find(new object[] {
                            cmv_code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                commandeventeDataTable cln = ((commandeventeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new commandeventeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncmv_code = base.Columns["cmv_code"];
                this.columncl_code = base.Columns["cl_code"];
                this.columncmv_statut = base.Columns["cmv_statut"];
                this.columncmv_date = base.Columns["cmv_date"];
                this.columncmv_date_liv = base.Columns["cmv_date_liv"];
                this.columncmv_adresse = base.Columns["cmv_adresse"];
                this.columncmv_ville = base.Columns["cmv_ville"];
                this.columncmv_cp = base.Columns["cmv_cp"];
                this.columncmv_pays = base.Columns["cmv_pays"];
                this.columncmv_fixe = base.Columns["cmv_fixe"];
                this.columncmv_mobile = base.Columns["cmv_mobile"];
                this.columncmv_fax = base.Columns["cmv_fax"];
                this.columncmv_email = base.Columns["cmv_email"];
                this.columncmv_sitew = base.Columns["cmv_sitew"];
                this.columncmv_note = base.Columns["cmv_note"];
                this.columncmv_frais = base.Columns["cmv_frais"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncmv_code = new global::System.Data.DataColumn("cmv_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_code);
                this.columncl_code = new global::System.Data.DataColumn("cl_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncl_code);
                this.columncmv_statut = new global::System.Data.DataColumn("cmv_statut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_statut);
                this.columncmv_date = new global::System.Data.DataColumn("cmv_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_date);
                this.columncmv_date_liv = new global::System.Data.DataColumn("cmv_date_liv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_date_liv);
                this.columncmv_adresse = new global::System.Data.DataColumn("cmv_adresse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_adresse);
                this.columncmv_ville = new global::System.Data.DataColumn("cmv_ville", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_ville);
                this.columncmv_cp = new global::System.Data.DataColumn("cmv_cp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_cp);
                this.columncmv_pays = new global::System.Data.DataColumn("cmv_pays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_pays);
                this.columncmv_fixe = new global::System.Data.DataColumn("cmv_fixe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_fixe);
                this.columncmv_mobile = new global::System.Data.DataColumn("cmv_mobile", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_mobile);
                this.columncmv_fax = new global::System.Data.DataColumn("cmv_fax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_fax);
                this.columncmv_email = new global::System.Data.DataColumn("cmv_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_email);
                this.columncmv_sitew = new global::System.Data.DataColumn("cmv_sitew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_sitew);
                this.columncmv_note = new global::System.Data.DataColumn("cmv_note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_note);
                this.columncmv_frais = new global::System.Data.DataColumn("cmv_frais", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_frais);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncmv_code}, true));
                this.columncmv_code.AllowDBNull = false;
                this.columncmv_code.Unique = true;
                this.columncmv_code.MaxLength = 20;
                this.columncl_code.AllowDBNull = false;
                this.columncl_code.MaxLength = 45;
                this.columncmv_statut.AllowDBNull = false;
                this.columncmv_statut.MaxLength = 20;
                this.columncmv_date.AllowDBNull = false;
                this.columncmv_date.MaxLength = 20;
                this.columncmv_date_liv.AllowDBNull = false;
                this.columncmv_date_liv.MaxLength = 20;
                this.columncmv_adresse.AllowDBNull = false;
                this.columncmv_adresse.MaxLength = 20;
                this.columncmv_ville.AllowDBNull = false;
                this.columncmv_ville.MaxLength = 20;
                this.columncmv_cp.AllowDBNull = false;
                this.columncmv_pays.AllowDBNull = false;
                this.columncmv_pays.MaxLength = 20;
                this.columncmv_email.AllowDBNull = false;
                this.columncmv_email.MaxLength = 20;
                this.columncmv_sitew.MaxLength = 20;
                this.columncmv_note.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow NewcommandeventeRow() {
                return ((commandeventeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new commandeventeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(commandeventeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.commandeventeRowChanged != null)) {
                    this.commandeventeRowChanged(this, new commandeventeRowChangeEvent(((commandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.commandeventeRowChanging != null)) {
                    this.commandeventeRowChanging(this, new commandeventeRowChangeEvent(((commandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.commandeventeRowDeleted != null)) {
                    this.commandeventeRowDeleted(this, new commandeventeRowChangeEvent(((commandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.commandeventeRowDeleting != null)) {
                    this.commandeventeRowDeleting(this, new commandeventeRowChangeEvent(((commandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecommandeventeRow(commandeventeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "commandeventeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class devisDataTable : global::System.Data.TypedTableBase<devisRow> {
            
            private global::System.Data.DataColumn columndv_code;
            
            private global::System.Data.DataColumn columnClient_codeClient;
            
            private global::System.Data.DataColumn columndv_statut;
            
            private global::System.Data.DataColumn columndv_date;
            
            private global::System.Data.DataColumn columndv_adresse;
            
            private global::System.Data.DataColumn columndv_ville;
            
            private global::System.Data.DataColumn columndv_cp;
            
            private global::System.Data.DataColumn columndv_pays;
            
            private global::System.Data.DataColumn columndv_fixe;
            
            private global::System.Data.DataColumn columndv_fax;
            
            private global::System.Data.DataColumn columndv_mobile;
            
            private global::System.Data.DataColumn columndv_email;
            
            private global::System.Data.DataColumn columndv_sitew;
            
            private global::System.Data.DataColumn columndv_note;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisDataTable() {
                this.TableName = "devis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal devisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected devisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_codeColumn {
                get {
                    return this.columndv_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Client_codeClientColumn {
                get {
                    return this.columnClient_codeClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_statutColumn {
                get {
                    return this.columndv_statut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_dateColumn {
                get {
                    return this.columndv_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_adresseColumn {
                get {
                    return this.columndv_adresse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_villeColumn {
                get {
                    return this.columndv_ville;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_cpColumn {
                get {
                    return this.columndv_cp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_paysColumn {
                get {
                    return this.columndv_pays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_fixeColumn {
                get {
                    return this.columndv_fixe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_faxColumn {
                get {
                    return this.columndv_fax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_mobileColumn {
                get {
                    return this.columndv_mobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_emailColumn {
                get {
                    return this.columndv_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_sitewColumn {
                get {
                    return this.columndv_sitew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_noteColumn {
                get {
                    return this.columndv_note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow this[int index] {
                get {
                    return ((devisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event devisRowChangeEventHandler devisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event devisRowChangeEventHandler devisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event devisRowChangeEventHandler devisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event devisRowChangeEventHandler devisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddevisRow(devisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow AdddevisRow(string dv_code, clientRow parentclientRowByfk_Devis_Client1, string dv_statut, string dv_date, string dv_adresse, string dv_ville, int dv_cp, string dv_pays, int dv_fixe, int dv_fax, int dv_mobile, string dv_email, string dv_sitew, string dv_note) {
                devisRow rowdevisRow = ((devisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        dv_code,
                        null,
                        dv_statut,
                        dv_date,
                        dv_adresse,
                        dv_ville,
                        dv_cp,
                        dv_pays,
                        dv_fixe,
                        dv_fax,
                        dv_mobile,
                        dv_email,
                        dv_sitew,
                        dv_note};
                if ((parentclientRowByfk_Devis_Client1 != null)) {
                    columnValuesArray[1] = parentclientRowByfk_Devis_Client1[0];
                }
                rowdevisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdevisRow);
                return rowdevisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow FindBydv_code(string dv_code) {
                return ((devisRow)(this.Rows.Find(new object[] {
                            dv_code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                devisDataTable cln = ((devisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new devisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columndv_code = base.Columns["dv_code"];
                this.columnClient_codeClient = base.Columns["Client_codeClient"];
                this.columndv_statut = base.Columns["dv_statut"];
                this.columndv_date = base.Columns["dv_date"];
                this.columndv_adresse = base.Columns["dv_adresse"];
                this.columndv_ville = base.Columns["dv_ville"];
                this.columndv_cp = base.Columns["dv_cp"];
                this.columndv_pays = base.Columns["dv_pays"];
                this.columndv_fixe = base.Columns["dv_fixe"];
                this.columndv_fax = base.Columns["dv_fax"];
                this.columndv_mobile = base.Columns["dv_mobile"];
                this.columndv_email = base.Columns["dv_email"];
                this.columndv_sitew = base.Columns["dv_sitew"];
                this.columndv_note = base.Columns["dv_note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columndv_code = new global::System.Data.DataColumn("dv_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_code);
                this.columnClient_codeClient = new global::System.Data.DataColumn("Client_codeClient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient_codeClient);
                this.columndv_statut = new global::System.Data.DataColumn("dv_statut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_statut);
                this.columndv_date = new global::System.Data.DataColumn("dv_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_date);
                this.columndv_adresse = new global::System.Data.DataColumn("dv_adresse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_adresse);
                this.columndv_ville = new global::System.Data.DataColumn("dv_ville", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_ville);
                this.columndv_cp = new global::System.Data.DataColumn("dv_cp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_cp);
                this.columndv_pays = new global::System.Data.DataColumn("dv_pays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_pays);
                this.columndv_fixe = new global::System.Data.DataColumn("dv_fixe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_fixe);
                this.columndv_fax = new global::System.Data.DataColumn("dv_fax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_fax);
                this.columndv_mobile = new global::System.Data.DataColumn("dv_mobile", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_mobile);
                this.columndv_email = new global::System.Data.DataColumn("dv_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_email);
                this.columndv_sitew = new global::System.Data.DataColumn("dv_sitew", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_sitew);
                this.columndv_note = new global::System.Data.DataColumn("dv_note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_note);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndv_code}, true));
                this.columndv_code.AllowDBNull = false;
                this.columndv_code.Unique = true;
                this.columndv_code.MaxLength = 45;
                this.columnClient_codeClient.AllowDBNull = false;
                this.columnClient_codeClient.MaxLength = 15;
                this.columndv_statut.AllowDBNull = false;
                this.columndv_statut.MaxLength = 45;
                this.columndv_date.AllowDBNull = false;
                this.columndv_date.MaxLength = 45;
                this.columndv_adresse.AllowDBNull = false;
                this.columndv_adresse.MaxLength = 45;
                this.columndv_ville.AllowDBNull = false;
                this.columndv_ville.MaxLength = 45;
                this.columndv_cp.AllowDBNull = false;
                this.columndv_pays.AllowDBNull = false;
                this.columndv_pays.MaxLength = 45;
                this.columndv_fixe.AllowDBNull = false;
                this.columndv_fax.AllowDBNull = false;
                this.columndv_mobile.AllowDBNull = false;
                this.columndv_email.AllowDBNull = false;
                this.columndv_email.MaxLength = 45;
                this.columndv_sitew.AllowDBNull = false;
                this.columndv_sitew.MaxLength = 45;
                this.columndv_note.AllowDBNull = false;
                this.columndv_note.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow NewdevisRow() {
                return ((devisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new devisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(devisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.devisRowChanged != null)) {
                    this.devisRowChanged(this, new devisRowChangeEvent(((devisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.devisRowChanging != null)) {
                    this.devisRowChanging(this, new devisRowChangeEvent(((devisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.devisRowDeleted != null)) {
                    this.devisRowDeleted(this, new devisRowChangeEvent(((devisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.devisRowDeleting != null)) {
                    this.devisRowDeleting(this, new devisRowChangeEvent(((devisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedevisRow(devisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "devisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class factureDataTable : global::System.Data.TypedTableBase<factureRow> {
            
            private global::System.Data.DataColumn columnnumero_Facture;
            
            private global::System.Data.DataColumn columndate_Facture;
            
            private global::System.Data.DataColumn columntimbre_Facture;
            
            private global::System.Data.DataColumn columnremise_Facture;
            
            private global::System.Data.DataColumn columnmontantHT_Facture;
            
            private global::System.Data.DataColumn columnmontantTTC_Facture;
            
            private global::System.Data.DataColumn columnstatut_Facture;
            
            private global::System.Data.DataColumn columnClient_codeClient;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureDataTable() {
                this.TableName = "facture";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal factureDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected factureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numero_FactureColumn {
                get {
                    return this.columnnumero_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn date_FactureColumn {
                get {
                    return this.columndate_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn timbre_FactureColumn {
                get {
                    return this.columntimbre_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remise_FactureColumn {
                get {
                    return this.columnremise_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn montantHT_FactureColumn {
                get {
                    return this.columnmontantHT_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn montantTTC_FactureColumn {
                get {
                    return this.columnmontantTTC_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statut_FactureColumn {
                get {
                    return this.columnstatut_Facture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Client_codeClientColumn {
                get {
                    return this.columnClient_codeClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow this[int index] {
                get {
                    return ((factureRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event factureRowChangeEventHandler factureRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event factureRowChangeEventHandler factureRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event factureRowChangeEventHandler factureRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event factureRowChangeEventHandler factureRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfactureRow(factureRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow AddfactureRow(string date_Facture, double timbre_Facture, double remise_Facture, double montantHT_Facture, double montantTTC_Facture, string statut_Facture, clientRow parentclientRowByfk_Facture_Client) {
                factureRow rowfactureRow = ((factureRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        date_Facture,
                        timbre_Facture,
                        remise_Facture,
                        montantHT_Facture,
                        montantTTC_Facture,
                        statut_Facture,
                        null};
                if ((parentclientRowByfk_Facture_Client != null)) {
                    columnValuesArray[7] = parentclientRowByfk_Facture_Client[0];
                }
                rowfactureRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfactureRow);
                return rowfactureRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow FindBynumero_Facture(int numero_Facture) {
                return ((factureRow)(this.Rows.Find(new object[] {
                            numero_Facture})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                factureDataTable cln = ((factureDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new factureDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnumero_Facture = base.Columns["numero_Facture"];
                this.columndate_Facture = base.Columns["date_Facture"];
                this.columntimbre_Facture = base.Columns["timbre_Facture"];
                this.columnremise_Facture = base.Columns["remise_Facture"];
                this.columnmontantHT_Facture = base.Columns["montantHT_Facture"];
                this.columnmontantTTC_Facture = base.Columns["montantTTC_Facture"];
                this.columnstatut_Facture = base.Columns["statut_Facture"];
                this.columnClient_codeClient = base.Columns["Client_codeClient"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnumero_Facture = new global::System.Data.DataColumn("numero_Facture", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumero_Facture);
                this.columndate_Facture = new global::System.Data.DataColumn("date_Facture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_Facture);
                this.columntimbre_Facture = new global::System.Data.DataColumn("timbre_Facture", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntimbre_Facture);
                this.columnremise_Facture = new global::System.Data.DataColumn("remise_Facture", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremise_Facture);
                this.columnmontantHT_Facture = new global::System.Data.DataColumn("montantHT_Facture", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmontantHT_Facture);
                this.columnmontantTTC_Facture = new global::System.Data.DataColumn("montantTTC_Facture", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmontantTTC_Facture);
                this.columnstatut_Facture = new global::System.Data.DataColumn("statut_Facture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatut_Facture);
                this.columnClient_codeClient = new global::System.Data.DataColumn("Client_codeClient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient_codeClient);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnumero_Facture}, true));
                this.columnnumero_Facture.AutoIncrement = true;
                this.columnnumero_Facture.AutoIncrementSeed = -1;
                this.columnnumero_Facture.AutoIncrementStep = -1;
                this.columnnumero_Facture.AllowDBNull = false;
                this.columnnumero_Facture.Unique = true;
                this.columndate_Facture.AllowDBNull = false;
                this.columndate_Facture.MaxLength = 45;
                this.columnmontantHT_Facture.AllowDBNull = false;
                this.columnmontantTTC_Facture.AllowDBNull = false;
                this.columnstatut_Facture.AllowDBNull = false;
                this.columnstatut_Facture.MaxLength = 45;
                this.columnClient_codeClient.AllowDBNull = false;
                this.columnClient_codeClient.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow NewfactureRow() {
                return ((factureRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new factureRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(factureRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.factureRowChanged != null)) {
                    this.factureRowChanged(this, new factureRowChangeEvent(((factureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.factureRowChanging != null)) {
                    this.factureRowChanging(this, new factureRowChangeEvent(((factureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.factureRowDeleted != null)) {
                    this.factureRowDeleted(this, new factureRowChangeEvent(((factureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.factureRowDeleting != null)) {
                    this.factureRowDeleting(this, new factureRowChangeEvent(((factureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefactureRow(factureRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "factureDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class familleDataTable : global::System.Data.TypedTableBase<familleRow> {
            
            private global::System.Data.DataColumn columnid_famille;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleDataTable() {
                this.TableName = "famille";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal familleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected familleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn id_familleColumn {
                get {
                    return this.columnid_famille;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRow this[int index] {
                get {
                    return ((familleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familleRowChangeEventHandler familleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familleRowChangeEventHandler familleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familleRowChangeEventHandler familleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event familleRowChangeEventHandler familleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfamilleRow(familleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRow AddfamilleRow(string id_famille) {
                familleRow rowfamilleRow = ((familleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_famille};
                rowfamilleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfamilleRow);
                return rowfamilleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRow FindByid_famille(string id_famille) {
                return ((familleRow)(this.Rows.Find(new object[] {
                            id_famille})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                familleDataTable cln = ((familleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new familleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid_famille = base.Columns["id_famille"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid_famille = new global::System.Data.DataColumn("id_famille", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_famille);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_famille}, true));
                this.columnid_famille.AllowDBNull = false;
                this.columnid_famille.Unique = true;
                this.columnid_famille.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRow NewfamilleRow() {
                return ((familleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new familleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(familleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.familleRowChanged != null)) {
                    this.familleRowChanged(this, new familleRowChangeEvent(((familleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.familleRowChanging != null)) {
                    this.familleRowChanging(this, new familleRowChangeEvent(((familleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.familleRowDeleted != null)) {
                    this.familleRowDeleted(this, new familleRowChangeEvent(((familleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.familleRowDeleting != null)) {
                    this.familleRowDeleting(this, new familleRowChangeEvent(((familleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefamilleRow(familleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "familleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fournisseurDataTable : global::System.Data.TypedTableBase<fournisseurRow> {
            
            private global::System.Data.DataColumn columnidFournisseur;
            
            private global::System.Data.DataColumn columnnom_Fournisseur;
            
            private global::System.Data.DataColumn columnprenom_Fournisseur;
            
            private global::System.Data.DataColumn columnadresse_Fournisseur;
            
            private global::System.Data.DataColumn columncodePostal_Fournisseur;
            
            private global::System.Data.DataColumn columnville_fournisseur;
            
            private global::System.Data.DataColumn columnpays_Fournisseur;
            
            private global::System.Data.DataColumn columntel_Fournisseur;
            
            private global::System.Data.DataColumn columntelmobile_Fournisseur;
            
            private global::System.Data.DataColumn columnemail_Fournisseur;
            
            private global::System.Data.DataColumn columnfax_Fournisseur;
            
            private global::System.Data.DataColumn columnsiteInternet_Fournisseur;
            
            private global::System.Data.DataColumn columnetat_Fournisseur;
            
            private global::System.Data.DataColumn columnnb_transactions_Fournisseur;
            
            private global::System.Data.DataColumn columnnote_Fournisseur;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurDataTable() {
                this.TableName = "fournisseur";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fournisseurDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fournisseurDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idFournisseurColumn {
                get {
                    return this.columnidFournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nom_FournisseurColumn {
                get {
                    return this.columnnom_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prenom_FournisseurColumn {
                get {
                    return this.columnprenom_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn adresse_FournisseurColumn {
                get {
                    return this.columnadresse_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn codePostal_FournisseurColumn {
                get {
                    return this.columncodePostal_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ville_fournisseurColumn {
                get {
                    return this.columnville_fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pays_FournisseurColumn {
                get {
                    return this.columnpays_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tel_FournisseurColumn {
                get {
                    return this.columntel_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telmobile_FournisseurColumn {
                get {
                    return this.columntelmobile_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn email_FournisseurColumn {
                get {
                    return this.columnemail_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fax_FournisseurColumn {
                get {
                    return this.columnfax_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn siteInternet_FournisseurColumn {
                get {
                    return this.columnsiteInternet_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn etat_FournisseurColumn {
                get {
                    return this.columnetat_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nb_transactions_FournisseurColumn {
                get {
                    return this.columnnb_transactions_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn note_FournisseurColumn {
                get {
                    return this.columnnote_Fournisseur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRow this[int index] {
                get {
                    return ((fournisseurRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fournisseurRowChangeEventHandler fournisseurRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fournisseurRowChangeEventHandler fournisseurRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fournisseurRowChangeEventHandler fournisseurRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fournisseurRowChangeEventHandler fournisseurRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfournisseurRow(fournisseurRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRow AddfournisseurRow(string idFournisseur, string nom_Fournisseur, string prenom_Fournisseur, string adresse_Fournisseur, decimal codePostal_Fournisseur, string ville_fournisseur, string pays_Fournisseur, decimal tel_Fournisseur, decimal telmobile_Fournisseur, string email_Fournisseur, decimal fax_Fournisseur, string siteInternet_Fournisseur, string etat_Fournisseur, decimal nb_transactions_Fournisseur, byte[] note_Fournisseur) {
                fournisseurRow rowfournisseurRow = ((fournisseurRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idFournisseur,
                        nom_Fournisseur,
                        prenom_Fournisseur,
                        adresse_Fournisseur,
                        codePostal_Fournisseur,
                        ville_fournisseur,
                        pays_Fournisseur,
                        tel_Fournisseur,
                        telmobile_Fournisseur,
                        email_Fournisseur,
                        fax_Fournisseur,
                        siteInternet_Fournisseur,
                        etat_Fournisseur,
                        nb_transactions_Fournisseur,
                        note_Fournisseur};
                rowfournisseurRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfournisseurRow);
                return rowfournisseurRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRow FindByidFournisseur(string idFournisseur) {
                return ((fournisseurRow)(this.Rows.Find(new object[] {
                            idFournisseur})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fournisseurDataTable cln = ((fournisseurDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fournisseurDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidFournisseur = base.Columns["idFournisseur"];
                this.columnnom_Fournisseur = base.Columns["nom_Fournisseur"];
                this.columnprenom_Fournisseur = base.Columns["prenom_Fournisseur"];
                this.columnadresse_Fournisseur = base.Columns["adresse_Fournisseur"];
                this.columncodePostal_Fournisseur = base.Columns["codePostal_Fournisseur"];
                this.columnville_fournisseur = base.Columns["ville_fournisseur"];
                this.columnpays_Fournisseur = base.Columns["pays_Fournisseur"];
                this.columntel_Fournisseur = base.Columns["tel_Fournisseur"];
                this.columntelmobile_Fournisseur = base.Columns["telmobile_Fournisseur"];
                this.columnemail_Fournisseur = base.Columns["email_Fournisseur"];
                this.columnfax_Fournisseur = base.Columns["fax_Fournisseur"];
                this.columnsiteInternet_Fournisseur = base.Columns["siteInternet_Fournisseur"];
                this.columnetat_Fournisseur = base.Columns["etat_Fournisseur"];
                this.columnnb_transactions_Fournisseur = base.Columns["nb_transactions_Fournisseur"];
                this.columnnote_Fournisseur = base.Columns["note_Fournisseur"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidFournisseur = new global::System.Data.DataColumn("idFournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidFournisseur);
                this.columnnom_Fournisseur = new global::System.Data.DataColumn("nom_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnom_Fournisseur);
                this.columnprenom_Fournisseur = new global::System.Data.DataColumn("prenom_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprenom_Fournisseur);
                this.columnadresse_Fournisseur = new global::System.Data.DataColumn("adresse_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadresse_Fournisseur);
                this.columncodePostal_Fournisseur = new global::System.Data.DataColumn("codePostal_Fournisseur", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodePostal_Fournisseur);
                this.columnville_fournisseur = new global::System.Data.DataColumn("ville_fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnville_fournisseur);
                this.columnpays_Fournisseur = new global::System.Data.DataColumn("pays_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpays_Fournisseur);
                this.columntel_Fournisseur = new global::System.Data.DataColumn("tel_Fournisseur", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel_Fournisseur);
                this.columntelmobile_Fournisseur = new global::System.Data.DataColumn("telmobile_Fournisseur", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelmobile_Fournisseur);
                this.columnemail_Fournisseur = new global::System.Data.DataColumn("email_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_Fournisseur);
                this.columnfax_Fournisseur = new global::System.Data.DataColumn("fax_Fournisseur", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax_Fournisseur);
                this.columnsiteInternet_Fournisseur = new global::System.Data.DataColumn("siteInternet_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsiteInternet_Fournisseur);
                this.columnetat_Fournisseur = new global::System.Data.DataColumn("etat_Fournisseur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnetat_Fournisseur);
                this.columnnb_transactions_Fournisseur = new global::System.Data.DataColumn("nb_transactions_Fournisseur", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnb_transactions_Fournisseur);
                this.columnnote_Fournisseur = new global::System.Data.DataColumn("note_Fournisseur", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote_Fournisseur);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidFournisseur}, true));
                this.columnidFournisseur.AllowDBNull = false;
                this.columnidFournisseur.Unique = true;
                this.columnidFournisseur.MaxLength = 20;
                this.columnnom_Fournisseur.AllowDBNull = false;
                this.columnnom_Fournisseur.MaxLength = 30;
                this.columnprenom_Fournisseur.MaxLength = 20;
                this.columnadresse_Fournisseur.AllowDBNull = false;
                this.columnadresse_Fournisseur.MaxLength = 45;
                this.columncodePostal_Fournisseur.AllowDBNull = false;
                this.columnville_fournisseur.AllowDBNull = false;
                this.columnville_fournisseur.MaxLength = 45;
                this.columnpays_Fournisseur.AllowDBNull = false;
                this.columnpays_Fournisseur.MaxLength = 20;
                this.columnemail_Fournisseur.AllowDBNull = false;
                this.columnemail_Fournisseur.MaxLength = 20;
                this.columnsiteInternet_Fournisseur.MaxLength = 45;
                this.columnetat_Fournisseur.AllowDBNull = false;
                this.columnetat_Fournisseur.MaxLength = 15;
                this.columnnb_transactions_Fournisseur.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRow NewfournisseurRow() {
                return ((fournisseurRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fournisseurRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fournisseurRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fournisseurRowChanged != null)) {
                    this.fournisseurRowChanged(this, new fournisseurRowChangeEvent(((fournisseurRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fournisseurRowChanging != null)) {
                    this.fournisseurRowChanging(this, new fournisseurRowChangeEvent(((fournisseurRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fournisseurRowDeleted != null)) {
                    this.fournisseurRowDeleted(this, new fournisseurRowChangeEvent(((fournisseurRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fournisseurRowDeleting != null)) {
                    this.fournisseurRowDeleting(this, new fournisseurRowChangeEvent(((fournisseurRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefournisseurRow(fournisseurRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fournisseurDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lignecommandeachatDataTable : global::System.Data.TypedTableBase<lignecommandeachatRow> {
            
            private global::System.Data.DataColumn columnnum_ligne_commande;
            
            private global::System.Data.DataColumn columncma_code;
            
            private global::System.Data.DataColumn columnpr_code;
            
            private global::System.Data.DataColumn columnpr_quantite;
            
            private global::System.Data.DataColumn columnpr_montant;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatDataTable() {
                this.TableName = "lignecommandeachat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignecommandeachatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected lignecommandeachatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn num_ligne_commandeColumn {
                get {
                    return this.columnnum_ligne_commande;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cma_codeColumn {
                get {
                    return this.columncma_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_codeColumn {
                get {
                    return this.columnpr_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_quantiteColumn {
                get {
                    return this.columnpr_quantite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_montantColumn {
                get {
                    return this.columnpr_montant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow this[int index] {
                get {
                    return ((lignecommandeachatRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeachatRowChangeEventHandler lignecommandeachatRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeachatRowChangeEventHandler lignecommandeachatRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeachatRowChangeEventHandler lignecommandeachatRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeachatRowChangeEventHandler lignecommandeachatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddlignecommandeachatRow(lignecommandeachatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow AddlignecommandeachatRow(commandeachatRow parentcommandeachatRowByfk_LigneCommandeAchat_CommandeAchat1, produitRow parentproduitRowByfk_LigneCommandeAchat_Produit1, int pr_quantite, double pr_montant) {
                lignecommandeachatRow rowlignecommandeachatRow = ((lignecommandeachatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        pr_quantite,
                        pr_montant};
                if ((parentcommandeachatRowByfk_LigneCommandeAchat_CommandeAchat1 != null)) {
                    columnValuesArray[1] = parentcommandeachatRowByfk_LigneCommandeAchat_CommandeAchat1[0];
                }
                if ((parentproduitRowByfk_LigneCommandeAchat_Produit1 != null)) {
                    columnValuesArray[2] = parentproduitRowByfk_LigneCommandeAchat_Produit1[0];
                }
                rowlignecommandeachatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlignecommandeachatRow);
                return rowlignecommandeachatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow FindBynum_ligne_commande(int num_ligne_commande) {
                return ((lignecommandeachatRow)(this.Rows.Find(new object[] {
                            num_ligne_commande})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                lignecommandeachatDataTable cln = ((lignecommandeachatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lignecommandeachatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnum_ligne_commande = base.Columns["num_ligne_commande"];
                this.columncma_code = base.Columns["cma_code"];
                this.columnpr_code = base.Columns["pr_code"];
                this.columnpr_quantite = base.Columns["pr_quantite"];
                this.columnpr_montant = base.Columns["pr_montant"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnum_ligne_commande = new global::System.Data.DataColumn("num_ligne_commande", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_ligne_commande);
                this.columncma_code = new global::System.Data.DataColumn("cma_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncma_code);
                this.columnpr_code = new global::System.Data.DataColumn("pr_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_code);
                this.columnpr_quantite = new global::System.Data.DataColumn("pr_quantite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_quantite);
                this.columnpr_montant = new global::System.Data.DataColumn("pr_montant", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_montant);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnum_ligne_commande}, true));
                this.columnnum_ligne_commande.AutoIncrement = true;
                this.columnnum_ligne_commande.AutoIncrementSeed = -1;
                this.columnnum_ligne_commande.AutoIncrementStep = -1;
                this.columnnum_ligne_commande.AllowDBNull = false;
                this.columnnum_ligne_commande.Unique = true;
                this.columncma_code.AllowDBNull = false;
                this.columncma_code.MaxLength = 45;
                this.columnpr_code.AllowDBNull = false;
                this.columnpr_code.MaxLength = 45;
                this.columnpr_quantite.AllowDBNull = false;
                this.columnpr_montant.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow NewlignecommandeachatRow() {
                return ((lignecommandeachatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lignecommandeachatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(lignecommandeachatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lignecommandeachatRowChanged != null)) {
                    this.lignecommandeachatRowChanged(this, new lignecommandeachatRowChangeEvent(((lignecommandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lignecommandeachatRowChanging != null)) {
                    this.lignecommandeachatRowChanging(this, new lignecommandeachatRowChangeEvent(((lignecommandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lignecommandeachatRowDeleted != null)) {
                    this.lignecommandeachatRowDeleted(this, new lignecommandeachatRowChangeEvent(((lignecommandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lignecommandeachatRowDeleting != null)) {
                    this.lignecommandeachatRowDeleting(this, new lignecommandeachatRowChangeEvent(((lignecommandeachatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovelignecommandeachatRow(lignecommandeachatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lignecommandeachatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lignecommandeventeDataTable : global::System.Data.TypedTableBase<lignecommandeventeRow> {
            
            private global::System.Data.DataColumn columnnum_ligne_commande;
            
            private global::System.Data.DataColumn columncmv_code;
            
            private global::System.Data.DataColumn columnpr_code;
            
            private global::System.Data.DataColumn columnpr_quantite;
            
            private global::System.Data.DataColumn columnpr_montant;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeDataTable() {
                this.TableName = "lignecommandevente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignecommandeventeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected lignecommandeventeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn num_ligne_commandeColumn {
                get {
                    return this.columnnum_ligne_commande;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cmv_codeColumn {
                get {
                    return this.columncmv_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_codeColumn {
                get {
                    return this.columnpr_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_quantiteColumn {
                get {
                    return this.columnpr_quantite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_montantColumn {
                get {
                    return this.columnpr_montant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow this[int index] {
                get {
                    return ((lignecommandeventeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeventeRowChangeEventHandler lignecommandeventeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeventeRowChangeEventHandler lignecommandeventeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeventeRowChangeEventHandler lignecommandeventeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignecommandeventeRowChangeEventHandler lignecommandeventeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddlignecommandeventeRow(lignecommandeventeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow AddlignecommandeventeRow(commandeventeRow parentcommandeventeRowByfk_LigneCommandeVente_CommandeVente1, produitRow parentproduitRowByfk_LigneCommandeVente_Produit1, int pr_quantite, double pr_montant) {
                lignecommandeventeRow rowlignecommandeventeRow = ((lignecommandeventeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        pr_quantite,
                        pr_montant};
                if ((parentcommandeventeRowByfk_LigneCommandeVente_CommandeVente1 != null)) {
                    columnValuesArray[1] = parentcommandeventeRowByfk_LigneCommandeVente_CommandeVente1[0];
                }
                if ((parentproduitRowByfk_LigneCommandeVente_Produit1 != null)) {
                    columnValuesArray[2] = parentproduitRowByfk_LigneCommandeVente_Produit1[0];
                }
                rowlignecommandeventeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlignecommandeventeRow);
                return rowlignecommandeventeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow FindBynum_ligne_commande(int num_ligne_commande) {
                return ((lignecommandeventeRow)(this.Rows.Find(new object[] {
                            num_ligne_commande})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                lignecommandeventeDataTable cln = ((lignecommandeventeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lignecommandeventeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnum_ligne_commande = base.Columns["num_ligne_commande"];
                this.columncmv_code = base.Columns["cmv_code"];
                this.columnpr_code = base.Columns["pr_code"];
                this.columnpr_quantite = base.Columns["pr_quantite"];
                this.columnpr_montant = base.Columns["pr_montant"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnum_ligne_commande = new global::System.Data.DataColumn("num_ligne_commande", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_ligne_commande);
                this.columncmv_code = new global::System.Data.DataColumn("cmv_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncmv_code);
                this.columnpr_code = new global::System.Data.DataColumn("pr_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_code);
                this.columnpr_quantite = new global::System.Data.DataColumn("pr_quantite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_quantite);
                this.columnpr_montant = new global::System.Data.DataColumn("pr_montant", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_montant);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnum_ligne_commande}, true));
                this.columnnum_ligne_commande.AutoIncrement = true;
                this.columnnum_ligne_commande.AutoIncrementSeed = -1;
                this.columnnum_ligne_commande.AutoIncrementStep = -1;
                this.columnnum_ligne_commande.AllowDBNull = false;
                this.columnnum_ligne_commande.Unique = true;
                this.columncmv_code.AllowDBNull = false;
                this.columncmv_code.MaxLength = 45;
                this.columnpr_code.AllowDBNull = false;
                this.columnpr_code.MaxLength = 45;
                this.columnpr_quantite.AllowDBNull = false;
                this.columnpr_montant.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow NewlignecommandeventeRow() {
                return ((lignecommandeventeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lignecommandeventeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(lignecommandeventeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lignecommandeventeRowChanged != null)) {
                    this.lignecommandeventeRowChanged(this, new lignecommandeventeRowChangeEvent(((lignecommandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lignecommandeventeRowChanging != null)) {
                    this.lignecommandeventeRowChanging(this, new lignecommandeventeRowChangeEvent(((lignecommandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lignecommandeventeRowDeleted != null)) {
                    this.lignecommandeventeRowDeleted(this, new lignecommandeventeRowChangeEvent(((lignecommandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lignecommandeventeRowDeleting != null)) {
                    this.lignecommandeventeRowDeleting(this, new lignecommandeventeRowChangeEvent(((lignecommandeventeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovelignecommandeventeRow(lignecommandeventeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lignecommandeventeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lignedevisDataTable : global::System.Data.TypedTableBase<lignedevisRow> {
            
            private global::System.Data.DataColumn columnnum_ligne_devis;
            
            private global::System.Data.DataColumn columndv_code;
            
            private global::System.Data.DataColumn columnpr_code;
            
            private global::System.Data.DataColumn columnpr_quantite;
            
            private global::System.Data.DataColumn columnpr_montant;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisDataTable() {
                this.TableName = "lignedevis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignedevisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected lignedevisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn num_ligne_devisColumn {
                get {
                    return this.columnnum_ligne_devis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dv_codeColumn {
                get {
                    return this.columndv_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_codeColumn {
                get {
                    return this.columnpr_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_quantiteColumn {
                get {
                    return this.columnpr_quantite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pr_montantColumn {
                get {
                    return this.columnpr_montant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow this[int index] {
                get {
                    return ((lignedevisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignedevisRowChangeEventHandler lignedevisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignedevisRowChangeEventHandler lignedevisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignedevisRowChangeEventHandler lignedevisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignedevisRowChangeEventHandler lignedevisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddlignedevisRow(lignedevisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow AddlignedevisRow(devisRow parentdevisRowByfk_LigneDevis_Devis1, produitRow parentproduitRowByfk_ligne_Devis_Produit1, int pr_quantite, double pr_montant) {
                lignedevisRow rowlignedevisRow = ((lignedevisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        pr_quantite,
                        pr_montant};
                if ((parentdevisRowByfk_LigneDevis_Devis1 != null)) {
                    columnValuesArray[1] = parentdevisRowByfk_LigneDevis_Devis1[0];
                }
                if ((parentproduitRowByfk_ligne_Devis_Produit1 != null)) {
                    columnValuesArray[2] = parentproduitRowByfk_ligne_Devis_Produit1[0];
                }
                rowlignedevisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlignedevisRow);
                return rowlignedevisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow FindBynum_ligne_devis(int num_ligne_devis) {
                return ((lignedevisRow)(this.Rows.Find(new object[] {
                            num_ligne_devis})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                lignedevisDataTable cln = ((lignedevisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lignedevisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnum_ligne_devis = base.Columns["num_ligne_devis"];
                this.columndv_code = base.Columns["dv_code"];
                this.columnpr_code = base.Columns["pr_code"];
                this.columnpr_quantite = base.Columns["pr_quantite"];
                this.columnpr_montant = base.Columns["pr_montant"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnum_ligne_devis = new global::System.Data.DataColumn("num_ligne_devis", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_ligne_devis);
                this.columndv_code = new global::System.Data.DataColumn("dv_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndv_code);
                this.columnpr_code = new global::System.Data.DataColumn("pr_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_code);
                this.columnpr_quantite = new global::System.Data.DataColumn("pr_quantite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_quantite);
                this.columnpr_montant = new global::System.Data.DataColumn("pr_montant", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpr_montant);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnum_ligne_devis}, true));
                this.columnnum_ligne_devis.AutoIncrement = true;
                this.columnnum_ligne_devis.AutoIncrementSeed = -1;
                this.columnnum_ligne_devis.AutoIncrementStep = -1;
                this.columnnum_ligne_devis.AllowDBNull = false;
                this.columnnum_ligne_devis.Unique = true;
                this.columndv_code.AllowDBNull = false;
                this.columndv_code.MaxLength = 45;
                this.columnpr_code.AllowDBNull = false;
                this.columnpr_code.MaxLength = 45;
                this.columnpr_quantite.AllowDBNull = false;
                this.columnpr_montant.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow NewlignedevisRow() {
                return ((lignedevisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lignedevisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(lignedevisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lignedevisRowChanged != null)) {
                    this.lignedevisRowChanged(this, new lignedevisRowChangeEvent(((lignedevisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lignedevisRowChanging != null)) {
                    this.lignedevisRowChanging(this, new lignedevisRowChangeEvent(((lignedevisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lignedevisRowDeleted != null)) {
                    this.lignedevisRowDeleted(this, new lignedevisRowChangeEvent(((lignedevisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lignedevisRowDeleting != null)) {
                    this.lignedevisRowDeleting(this, new lignedevisRowChangeEvent(((lignedevisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovelignedevisRow(lignedevisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lignedevisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lignefactureDataTable : global::System.Data.TypedTableBase<lignefactureRow> {
            
            private global::System.Data.DataColumn columnnumero_ligneFacture;
            
            private global::System.Data.DataColumn columnProduit_codeProduit;
            
            private global::System.Data.DataColumn columnquantite;
            
            private global::System.Data.DataColumn columnmontant_Produit;
            
            private global::System.Data.DataColumn columnFacture_numeroFacture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureDataTable() {
                this.TableName = "lignefacture";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignefactureDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected lignefactureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numero_ligneFactureColumn {
                get {
                    return this.columnnumero_ligneFacture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Produit_codeProduitColumn {
                get {
                    return this.columnProduit_codeProduit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn quantiteColumn {
                get {
                    return this.columnquantite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn montant_ProduitColumn {
                get {
                    return this.columnmontant_Produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Facture_numeroFactureColumn {
                get {
                    return this.columnFacture_numeroFacture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow this[int index] {
                get {
                    return ((lignefactureRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignefactureRowChangeEventHandler lignefactureRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignefactureRowChangeEventHandler lignefactureRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignefactureRowChangeEventHandler lignefactureRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event lignefactureRowChangeEventHandler lignefactureRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddlignefactureRow(lignefactureRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow AddlignefactureRow(produitRow parentproduitRowByfk_LigneFacture_Produit1, double quantite, double montant_Produit, factureRow parentfactureRowByfk_LigneFacture_Facture1) {
                lignefactureRow rowlignefactureRow = ((lignefactureRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        quantite,
                        montant_Produit,
                        null};
                if ((parentproduitRowByfk_LigneFacture_Produit1 != null)) {
                    columnValuesArray[1] = parentproduitRowByfk_LigneFacture_Produit1[0];
                }
                if ((parentfactureRowByfk_LigneFacture_Facture1 != null)) {
                    columnValuesArray[4] = parentfactureRowByfk_LigneFacture_Facture1[0];
                }
                rowlignefactureRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlignefactureRow);
                return rowlignefactureRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow FindBynumero_ligneFacture(int numero_ligneFacture) {
                return ((lignefactureRow)(this.Rows.Find(new object[] {
                            numero_ligneFacture})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                lignefactureDataTable cln = ((lignefactureDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lignefactureDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnumero_ligneFacture = base.Columns["numero_ligneFacture"];
                this.columnProduit_codeProduit = base.Columns["Produit_codeProduit"];
                this.columnquantite = base.Columns["quantite"];
                this.columnmontant_Produit = base.Columns["montant_Produit"];
                this.columnFacture_numeroFacture = base.Columns["Facture_numeroFacture"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnumero_ligneFacture = new global::System.Data.DataColumn("numero_ligneFacture", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumero_ligneFacture);
                this.columnProduit_codeProduit = new global::System.Data.DataColumn("Produit_codeProduit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduit_codeProduit);
                this.columnquantite = new global::System.Data.DataColumn("quantite", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantite);
                this.columnmontant_Produit = new global::System.Data.DataColumn("montant_Produit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmontant_Produit);
                this.columnFacture_numeroFacture = new global::System.Data.DataColumn("Facture_numeroFacture", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacture_numeroFacture);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnumero_ligneFacture}, true));
                this.columnnumero_ligneFacture.AutoIncrement = true;
                this.columnnumero_ligneFacture.AutoIncrementSeed = -1;
                this.columnnumero_ligneFacture.AutoIncrementStep = -1;
                this.columnnumero_ligneFacture.AllowDBNull = false;
                this.columnnumero_ligneFacture.Unique = true;
                this.columnProduit_codeProduit.AllowDBNull = false;
                this.columnProduit_codeProduit.MaxLength = 45;
                this.columnquantite.AllowDBNull = false;
                this.columnmontant_Produit.AllowDBNull = false;
                this.columnFacture_numeroFacture.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow NewlignefactureRow() {
                return ((lignefactureRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lignefactureRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(lignefactureRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lignefactureRowChanged != null)) {
                    this.lignefactureRowChanged(this, new lignefactureRowChangeEvent(((lignefactureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lignefactureRowChanging != null)) {
                    this.lignefactureRowChanging(this, new lignefactureRowChangeEvent(((lignefactureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lignefactureRowDeleted != null)) {
                    this.lignefactureRowDeleted(this, new lignefactureRowChangeEvent(((lignefactureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lignefactureRowDeleting != null)) {
                    this.lignefactureRowDeleting(this, new lignefactureRowChangeEvent(((lignefactureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovelignefactureRow(lignefactureRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lignefactureDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class produitDataTable : global::System.Data.TypedTableBase<produitRow> {
            
            private global::System.Data.DataColumn columncode_produit;
            
            private global::System.Data.DataColumn columnlibelle_produit;
            
            private global::System.Data.DataColumn columndesignation_produit;
            
            private global::System.Data.DataColumn columnunite_produit;
            
            private global::System.Data.DataColumn columnfabricant_produit;
            
            private global::System.Data.DataColumn columnref_fabricant_produit;
            
            private global::System.Data.DataColumn columnpoids_produit;
            
            private global::System.Data.DataColumn columnvolume_produit;
            
            private global::System.Data.DataColumn columnFamille_idFamille;
            
            private global::System.Data.DataColumn columnCategorie_idCategorie;
            
            private global::System.Data.DataColumn columnproduit_critique;
            
            private global::System.Data.DataColumn columnstock_min_produit;
            
            private global::System.Data.DataColumn columnstock_max_produit;
            
            private global::System.Data.DataColumn columnstock_securite_produit;
            
            private global::System.Data.DataColumn columnstock_disponible_produit;
            
            private global::System.Data.DataColumn columndelai_approv_produit;
            
            private global::System.Data.DataColumn columnmagasin_produit;
            
            private global::System.Data.DataColumn columnemplacement_produit;
            
            private global::System.Data.DataColumn columnduree_conservation;
            
            private global::System.Data.DataColumn columnprix_moyen_produit;
            
            private global::System.Data.DataColumn columnprix_vente_produit;
            
            private global::System.Data.DataColumn columnTVA_produit;
            
            private global::System.Data.DataColumn columnremise_produit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitDataTable() {
                this.TableName = "produit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal produitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected produitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn code_produitColumn {
                get {
                    return this.columncode_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn libelle_produitColumn {
                get {
                    return this.columnlibelle_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn designation_produitColumn {
                get {
                    return this.columndesignation_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unite_produitColumn {
                get {
                    return this.columnunite_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fabricant_produitColumn {
                get {
                    return this.columnfabricant_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ref_fabricant_produitColumn {
                get {
                    return this.columnref_fabricant_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn poids_produitColumn {
                get {
                    return this.columnpoids_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn volume_produitColumn {
                get {
                    return this.columnvolume_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Famille_idFamilleColumn {
                get {
                    return this.columnFamille_idFamille;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Categorie_idCategorieColumn {
                get {
                    return this.columnCategorie_idCategorie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn produit_critiqueColumn {
                get {
                    return this.columnproduit_critique;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stock_min_produitColumn {
                get {
                    return this.columnstock_min_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stock_max_produitColumn {
                get {
                    return this.columnstock_max_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stock_securite_produitColumn {
                get {
                    return this.columnstock_securite_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stock_disponible_produitColumn {
                get {
                    return this.columnstock_disponible_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn delai_approv_produitColumn {
                get {
                    return this.columndelai_approv_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn magasin_produitColumn {
                get {
                    return this.columnmagasin_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn emplacement_produitColumn {
                get {
                    return this.columnemplacement_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn duree_conservationColumn {
                get {
                    return this.columnduree_conservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prix_moyen_produitColumn {
                get {
                    return this.columnprix_moyen_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prix_vente_produitColumn {
                get {
                    return this.columnprix_vente_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TVA_produitColumn {
                get {
                    return this.columnTVA_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remise_produitColumn {
                get {
                    return this.columnremise_produit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow this[int index] {
                get {
                    return ((produitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event produitRowChangeEventHandler produitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event produitRowChangeEventHandler produitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event produitRowChangeEventHandler produitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event produitRowChangeEventHandler produitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddproduitRow(produitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow AddproduitRow(
                        string code_produit, 
                        string libelle_produit, 
                        string designation_produit, 
                        string unite_produit, 
                        string fabricant_produit, 
                        string ref_fabricant_produit, 
                        string poids_produit, 
                        string volume_produit, 
                        familleRow parentfamilleRowByfk_Produit_Famille, 
                        categorieRow parentcategorieRowByfk_Produit_Categorie, 
                        string produit_critique, 
                        int stock_min_produit, 
                        int stock_max_produit, 
                        int stock_securite_produit, 
                        int stock_disponible_produit, 
                        string delai_approv_produit, 
                        string magasin_produit, 
                        string emplacement_produit, 
                        string duree_conservation, 
                        double prix_moyen_produit, 
                        double prix_vente_produit, 
                        double TVA_produit, 
                        double remise_produit) {
                produitRow rowproduitRow = ((produitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code_produit,
                        libelle_produit,
                        designation_produit,
                        unite_produit,
                        fabricant_produit,
                        ref_fabricant_produit,
                        poids_produit,
                        volume_produit,
                        null,
                        null,
                        produit_critique,
                        stock_min_produit,
                        stock_max_produit,
                        stock_securite_produit,
                        stock_disponible_produit,
                        delai_approv_produit,
                        magasin_produit,
                        emplacement_produit,
                        duree_conservation,
                        prix_moyen_produit,
                        prix_vente_produit,
                        TVA_produit,
                        remise_produit};
                if ((parentfamilleRowByfk_Produit_Famille != null)) {
                    columnValuesArray[8] = parentfamilleRowByfk_Produit_Famille[0];
                }
                if ((parentcategorieRowByfk_Produit_Categorie != null)) {
                    columnValuesArray[9] = parentcategorieRowByfk_Produit_Categorie[0];
                }
                rowproduitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduitRow);
                return rowproduitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow FindBycode_produit(string code_produit) {
                return ((produitRow)(this.Rows.Find(new object[] {
                            code_produit})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                produitDataTable cln = ((produitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new produitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncode_produit = base.Columns["code_produit"];
                this.columnlibelle_produit = base.Columns["libelle_produit"];
                this.columndesignation_produit = base.Columns["designation_produit"];
                this.columnunite_produit = base.Columns["unite_produit"];
                this.columnfabricant_produit = base.Columns["fabricant_produit"];
                this.columnref_fabricant_produit = base.Columns["ref_fabricant_produit"];
                this.columnpoids_produit = base.Columns["poids_produit"];
                this.columnvolume_produit = base.Columns["volume_produit"];
                this.columnFamille_idFamille = base.Columns["Famille_idFamille"];
                this.columnCategorie_idCategorie = base.Columns["Categorie_idCategorie"];
                this.columnproduit_critique = base.Columns["produit_critique"];
                this.columnstock_min_produit = base.Columns["stock_min_produit"];
                this.columnstock_max_produit = base.Columns["stock_max_produit"];
                this.columnstock_securite_produit = base.Columns["stock_securite_produit"];
                this.columnstock_disponible_produit = base.Columns["stock_disponible_produit"];
                this.columndelai_approv_produit = base.Columns["delai_approv_produit"];
                this.columnmagasin_produit = base.Columns["magasin_produit"];
                this.columnemplacement_produit = base.Columns["emplacement_produit"];
                this.columnduree_conservation = base.Columns["duree_conservation"];
                this.columnprix_moyen_produit = base.Columns["prix_moyen_produit"];
                this.columnprix_vente_produit = base.Columns["prix_vente_produit"];
                this.columnTVA_produit = base.Columns["TVA_produit"];
                this.columnremise_produit = base.Columns["remise_produit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncode_produit = new global::System.Data.DataColumn("code_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode_produit);
                this.columnlibelle_produit = new global::System.Data.DataColumn("libelle_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlibelle_produit);
                this.columndesignation_produit = new global::System.Data.DataColumn("designation_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation_produit);
                this.columnunite_produit = new global::System.Data.DataColumn("unite_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunite_produit);
                this.columnfabricant_produit = new global::System.Data.DataColumn("fabricant_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabricant_produit);
                this.columnref_fabricant_produit = new global::System.Data.DataColumn("ref_fabricant_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_fabricant_produit);
                this.columnpoids_produit = new global::System.Data.DataColumn("poids_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoids_produit);
                this.columnvolume_produit = new global::System.Data.DataColumn("volume_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvolume_produit);
                this.columnFamille_idFamille = new global::System.Data.DataColumn("Famille_idFamille", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamille_idFamille);
                this.columnCategorie_idCategorie = new global::System.Data.DataColumn("Categorie_idCategorie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategorie_idCategorie);
                this.columnproduit_critique = new global::System.Data.DataColumn("produit_critique", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduit_critique);
                this.columnstock_min_produit = new global::System.Data.DataColumn("stock_min_produit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_min_produit);
                this.columnstock_max_produit = new global::System.Data.DataColumn("stock_max_produit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_max_produit);
                this.columnstock_securite_produit = new global::System.Data.DataColumn("stock_securite_produit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_securite_produit);
                this.columnstock_disponible_produit = new global::System.Data.DataColumn("stock_disponible_produit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_disponible_produit);
                this.columndelai_approv_produit = new global::System.Data.DataColumn("delai_approv_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelai_approv_produit);
                this.columnmagasin_produit = new global::System.Data.DataColumn("magasin_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmagasin_produit);
                this.columnemplacement_produit = new global::System.Data.DataColumn("emplacement_produit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemplacement_produit);
                this.columnduree_conservation = new global::System.Data.DataColumn("duree_conservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnduree_conservation);
                this.columnprix_moyen_produit = new global::System.Data.DataColumn("prix_moyen_produit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprix_moyen_produit);
                this.columnprix_vente_produit = new global::System.Data.DataColumn("prix_vente_produit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprix_vente_produit);
                this.columnTVA_produit = new global::System.Data.DataColumn("TVA_produit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTVA_produit);
                this.columnremise_produit = new global::System.Data.DataColumn("remise_produit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremise_produit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode_produit}, true));
                this.columncode_produit.AllowDBNull = false;
                this.columncode_produit.Unique = true;
                this.columncode_produit.MaxLength = 45;
                this.columnlibelle_produit.AllowDBNull = false;
                this.columnlibelle_produit.MaxLength = 45;
                this.columndesignation_produit.AllowDBNull = false;
                this.columndesignation_produit.MaxLength = 45;
                this.columnunite_produit.AllowDBNull = false;
                this.columnunite_produit.MaxLength = 45;
                this.columnfabricant_produit.AllowDBNull = false;
                this.columnfabricant_produit.MaxLength = 45;
                this.columnref_fabricant_produit.AllowDBNull = false;
                this.columnref_fabricant_produit.MaxLength = 45;
                this.columnpoids_produit.AllowDBNull = false;
                this.columnpoids_produit.MaxLength = 45;
                this.columnvolume_produit.AllowDBNull = false;
                this.columnvolume_produit.MaxLength = 45;
                this.columnFamille_idFamille.AllowDBNull = false;
                this.columnFamille_idFamille.MaxLength = 45;
                this.columnCategorie_idCategorie.AllowDBNull = false;
                this.columnCategorie_idCategorie.MaxLength = 45;
                this.columnproduit_critique.AllowDBNull = false;
                this.columnproduit_critique.MaxLength = 45;
                this.columnstock_min_produit.AllowDBNull = false;
                this.columnstock_max_produit.AllowDBNull = false;
                this.columnstock_securite_produit.AllowDBNull = false;
                this.columnstock_disponible_produit.AllowDBNull = false;
                this.columndelai_approv_produit.MaxLength = 45;
                this.columnmagasin_produit.MaxLength = 45;
                this.columnemplacement_produit.MaxLength = 45;
                this.columnduree_conservation.MaxLength = 45;
                this.columnprix_moyen_produit.AllowDBNull = false;
                this.columnprix_vente_produit.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow NewproduitRow() {
                return ((produitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new produitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(produitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.produitRowChanged != null)) {
                    this.produitRowChanged(this, new produitRowChangeEvent(((produitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.produitRowChanging != null)) {
                    this.produitRowChanging(this, new produitRowChangeEvent(((produitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.produitRowDeleted != null)) {
                    this.produitRowDeleted(this, new produitRowChangeEvent(((produitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.produitRowDeleting != null)) {
                    this.produitRowDeleting(this, new produitRowChangeEvent(((produitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveproduitRow(produitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gestioncommercialeDataSet ds = new gestioncommercialeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "produitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class categorieRow : global::System.Data.DataRow {
            
            private categorieDataTable tablecategorie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal categorieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecategorie = ((categorieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id_categorie {
                get {
                    return ((string)(this[this.tablecategorie.id_categorieColumn]));
                }
                set {
                    this[this.tablecategorie.id_categorieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow[] GetproduitRows() {
                if ((this.Table.ChildRelations["fk_Produit_Categorie"] == null)) {
                    return new produitRow[0];
                }
                else {
                    return ((produitRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Produit_Categorie"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class clientRow : global::System.Data.DataRow {
            
            private clientDataTable tableclient;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal clientRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableclient = ((clientDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code_Client {
                get {
                    return ((string)(this[this.tableclient.code_ClientColumn]));
                }
                set {
                    this[this.tableclient.code_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nom_Client {
                get {
                    return ((string)(this[this.tableclient.nom_ClientColumn]));
                }
                set {
                    this[this.tableclient.nom_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prenom_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.prenom_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'prenom_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.prenom_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string adresse_Client {
                get {
                    return ((string)(this[this.tableclient.adresse_ClientColumn]));
                }
                set {
                    this[this.tableclient.adresse_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short codepostal_Client {
                get {
                    return ((short)(this[this.tableclient.codepostal_ClientColumn]));
                }
                set {
                    this[this.tableclient.codepostal_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ville_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.ville_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ville_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.ville_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pays_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.pays_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'pays_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.pays_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short telFixe_Client {
                get {
                    try {
                        return ((short)(this[this.tableclient.telFixe_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'telFixe_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.telFixe_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short telMobile_Client {
                get {
                    try {
                        return ((short)(this[this.tableclient.telMobile_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'telMobile_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.telMobile_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.email_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'email_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.email_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string site_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.site_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'site_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.site_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short fax_Client {
                get {
                    try {
                        return ((short)(this[this.tableclient.fax_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'fax_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.fax_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string societe_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.societe_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'societe_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.societe_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string etat_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.etat_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'etat_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.etat_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short nbTransactions_Client {
                get {
                    try {
                        return ((short)(this[this.tableclient.nbTransactions_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'nbTransactions_Client\' dans la table \'client\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableclient.nbTransactions_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notes_Client {
                get {
                    try {
                        return ((string)(this[this.tableclient.notes_ClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'notes_Client\' dans la table \'client\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient.notes_ClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprenom_ClientNull() {
                return this.IsNull(this.tableclient.prenom_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprenom_ClientNull() {
                this[this.tableclient.prenom_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isville_ClientNull() {
                return this.IsNull(this.tableclient.ville_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setville_ClientNull() {
                this[this.tableclient.ville_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispays_ClientNull() {
                return this.IsNull(this.tableclient.pays_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpays_ClientNull() {
                this[this.tableclient.pays_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstelFixe_ClientNull() {
                return this.IsNull(this.tableclient.telFixe_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettelFixe_ClientNull() {
                this[this.tableclient.telFixe_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstelMobile_ClientNull() {
                return this.IsNull(this.tableclient.telMobile_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettelMobile_ClientNull() {
                this[this.tableclient.telMobile_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isemail_ClientNull() {
                return this.IsNull(this.tableclient.email_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setemail_ClientNull() {
                this[this.tableclient.email_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issite_ClientNull() {
                return this.IsNull(this.tableclient.site_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsite_ClientNull() {
                this[this.tableclient.site_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfax_ClientNull() {
                return this.IsNull(this.tableclient.fax_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfax_ClientNull() {
                this[this.tableclient.fax_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issociete_ClientNull() {
                return this.IsNull(this.tableclient.societe_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsociete_ClientNull() {
                this[this.tableclient.societe_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isetat_ClientNull() {
                return this.IsNull(this.tableclient.etat_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setetat_ClientNull() {
                this[this.tableclient.etat_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnbTransactions_ClientNull() {
                return this.IsNull(this.tableclient.nbTransactions_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnbTransactions_ClientNull() {
                this[this.tableclient.nbTransactions_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isnotes_ClientNull() {
                return this.IsNull(this.tableclient.notes_ClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setnotes_ClientNull() {
                this[this.tableclient.notes_ClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow[] GetcommandeventeRows() {
                if ((this.Table.ChildRelations["fk_CommandeVente_Client1"] == null)) {
                    return new commandeventeRow[0];
                }
                else {
                    return ((commandeventeRow[])(base.GetChildRows(this.Table.ChildRelations["fk_CommandeVente_Client1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow[] GetdevisRows() {
                if ((this.Table.ChildRelations["fk_Devis_Client1"] == null)) {
                    return new devisRow[0];
                }
                else {
                    return ((devisRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Devis_Client1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow[] GetfactureRows() {
                if ((this.Table.ChildRelations["fk_Facture_Client"] == null)) {
                    return new factureRow[0];
                }
                else {
                    return ((factureRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Facture_Client"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class commandeachatRow : global::System.Data.DataRow {
            
            private commandeachatDataTable tablecommandeachat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal commandeachatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecommandeachat = ((commandeachatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_code {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_codeColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fr_code {
                get {
                    return ((string)(this[this.tablecommandeachat.fr_codeColumn]));
                }
                set {
                    this[this.tablecommandeachat.fr_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_statut {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_statutColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_statutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_date {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_dateColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_date_liv {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_date_livColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_date_livColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_adresse {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_adresseColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_adresseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_ville {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_villeColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_villeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cma_cp {
                get {
                    return ((int)(this[this.tablecommandeachat.cma_cpColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_cpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_pays {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_paysColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_paysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cma_fixe {
                get {
                    try {
                        return ((int)(this[this.tablecommandeachat.cma_fixeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cma_fixe\' dans la table \'commandeachat\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandeachat.cma_fixeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cma_mobile {
                get {
                    try {
                        return ((int)(this[this.tablecommandeachat.cma_mobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cma_mobile\' dans la table \'commandeachat\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandeachat.cma_mobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cma_fax {
                get {
                    try {
                        return ((int)(this[this.tablecommandeachat.cma_faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cma_fax\' dans la table \'commandeachat\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandeachat.cma_faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_email {
                get {
                    return ((string)(this[this.tablecommandeachat.cma_emailColumn]));
                }
                set {
                    this[this.tablecommandeachat.cma_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_sitew {
                get {
                    try {
                        return ((string)(this[this.tablecommandeachat.cma_sitewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cma_sitew\' dans la table \'commandeachat\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandeachat.cma_sitewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_note {
                get {
                    try {
                        return ((string)(this[this.tablecommandeachat.cma_noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cma_note\' dans la table \'commandeachat\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandeachat.cma_noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRow fournisseurRow {
                get {
                    return ((fournisseurRow)(this.GetParentRow(this.Table.ParentRelations["fk_CommandeAchat_Fournisseur1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_CommandeAchat_Fournisseur1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscma_fixeNull() {
                return this.IsNull(this.tablecommandeachat.cma_fixeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcma_fixeNull() {
                this[this.tablecommandeachat.cma_fixeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscma_mobileNull() {
                return this.IsNull(this.tablecommandeachat.cma_mobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcma_mobileNull() {
                this[this.tablecommandeachat.cma_mobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscma_faxNull() {
                return this.IsNull(this.tablecommandeachat.cma_faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcma_faxNull() {
                this[this.tablecommandeachat.cma_faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscma_sitewNull() {
                return this.IsNull(this.tablecommandeachat.cma_sitewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcma_sitewNull() {
                this[this.tablecommandeachat.cma_sitewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscma_noteNull() {
                return this.IsNull(this.tablecommandeachat.cma_noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcma_noteNull() {
                this[this.tablecommandeachat.cma_noteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow[] GetlignecommandeachatRows() {
                if ((this.Table.ChildRelations["fk_LigneCommandeAchat_CommandeAchat1"] == null)) {
                    return new lignecommandeachatRow[0];
                }
                else {
                    return ((lignecommandeachatRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneCommandeAchat_CommandeAchat1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class commandeventeRow : global::System.Data.DataRow {
            
            private commandeventeDataTable tablecommandevente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal commandeventeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecommandevente = ((commandeventeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_code {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_codeColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cl_code {
                get {
                    return ((string)(this[this.tablecommandevente.cl_codeColumn]));
                }
                set {
                    this[this.tablecommandevente.cl_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_statut {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_statutColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_statutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_date {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_dateColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_date_liv {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_date_livColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_date_livColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_adresse {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_adresseColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_adresseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_ville {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_villeColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_villeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cmv_cp {
                get {
                    return ((int)(this[this.tablecommandevente.cmv_cpColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_cpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_pays {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_paysColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_paysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cmv_fixe {
                get {
                    try {
                        return ((int)(this[this.tablecommandevente.cmv_fixeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cmv_fixe\' dans la table \'commandevente\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandevente.cmv_fixeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cmv_mobile {
                get {
                    try {
                        return ((int)(this[this.tablecommandevente.cmv_mobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cmv_mobile\' dans la table \'commandevente\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandevente.cmv_mobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int cmv_fax {
                get {
                    try {
                        return ((int)(this[this.tablecommandevente.cmv_faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cmv_fax\' dans la table \'commandevente\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandevente.cmv_faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_email {
                get {
                    return ((string)(this[this.tablecommandevente.cmv_emailColumn]));
                }
                set {
                    this[this.tablecommandevente.cmv_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_sitew {
                get {
                    try {
                        return ((string)(this[this.tablecommandevente.cmv_sitewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cmv_sitew\' dans la table \'commandevente\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandevente.cmv_sitewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_note {
                get {
                    try {
                        return ((string)(this[this.tablecommandevente.cmv_noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cmv_note\' dans la table \'commandevente\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandevente.cmv_noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double cmv_frais {
                get {
                    try {
                        return ((double)(this[this.tablecommandevente.cmv_fraisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'cmv_frais\' dans la table \'commandevente\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommandevente.cmv_fraisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow clientRow {
                get {
                    return ((clientRow)(this.GetParentRow(this.Table.ParentRelations["fk_CommandeVente_Client1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_CommandeVente_Client1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscmv_fixeNull() {
                return this.IsNull(this.tablecommandevente.cmv_fixeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcmv_fixeNull() {
                this[this.tablecommandevente.cmv_fixeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscmv_mobileNull() {
                return this.IsNull(this.tablecommandevente.cmv_mobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcmv_mobileNull() {
                this[this.tablecommandevente.cmv_mobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscmv_faxNull() {
                return this.IsNull(this.tablecommandevente.cmv_faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcmv_faxNull() {
                this[this.tablecommandevente.cmv_faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscmv_sitewNull() {
                return this.IsNull(this.tablecommandevente.cmv_sitewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcmv_sitewNull() {
                this[this.tablecommandevente.cmv_sitewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscmv_noteNull() {
                return this.IsNull(this.tablecommandevente.cmv_noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcmv_noteNull() {
                this[this.tablecommandevente.cmv_noteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscmv_fraisNull() {
                return this.IsNull(this.tablecommandevente.cmv_fraisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcmv_fraisNull() {
                this[this.tablecommandevente.cmv_fraisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow[] GetlignecommandeventeRows() {
                if ((this.Table.ChildRelations["fk_LigneCommandeVente_CommandeVente1"] == null)) {
                    return new lignecommandeventeRow[0];
                }
                else {
                    return ((lignecommandeventeRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneCommandeVente_CommandeVente1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class devisRow : global::System.Data.DataRow {
            
            private devisDataTable tabledevis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal devisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledevis = ((devisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_code {
                get {
                    return ((string)(this[this.tabledevis.dv_codeColumn]));
                }
                set {
                    this[this.tabledevis.dv_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Client_codeClient {
                get {
                    return ((string)(this[this.tabledevis.Client_codeClientColumn]));
                }
                set {
                    this[this.tabledevis.Client_codeClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_statut {
                get {
                    return ((string)(this[this.tabledevis.dv_statutColumn]));
                }
                set {
                    this[this.tabledevis.dv_statutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_date {
                get {
                    return ((string)(this[this.tabledevis.dv_dateColumn]));
                }
                set {
                    this[this.tabledevis.dv_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_adresse {
                get {
                    return ((string)(this[this.tabledevis.dv_adresseColumn]));
                }
                set {
                    this[this.tabledevis.dv_adresseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_ville {
                get {
                    return ((string)(this[this.tabledevis.dv_villeColumn]));
                }
                set {
                    this[this.tabledevis.dv_villeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int dv_cp {
                get {
                    return ((int)(this[this.tabledevis.dv_cpColumn]));
                }
                set {
                    this[this.tabledevis.dv_cpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_pays {
                get {
                    return ((string)(this[this.tabledevis.dv_paysColumn]));
                }
                set {
                    this[this.tabledevis.dv_paysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int dv_fixe {
                get {
                    return ((int)(this[this.tabledevis.dv_fixeColumn]));
                }
                set {
                    this[this.tabledevis.dv_fixeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int dv_fax {
                get {
                    return ((int)(this[this.tabledevis.dv_faxColumn]));
                }
                set {
                    this[this.tabledevis.dv_faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int dv_mobile {
                get {
                    return ((int)(this[this.tabledevis.dv_mobileColumn]));
                }
                set {
                    this[this.tabledevis.dv_mobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_email {
                get {
                    return ((string)(this[this.tabledevis.dv_emailColumn]));
                }
                set {
                    this[this.tabledevis.dv_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_sitew {
                get {
                    return ((string)(this[this.tabledevis.dv_sitewColumn]));
                }
                set {
                    this[this.tabledevis.dv_sitewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_note {
                get {
                    return ((string)(this[this.tabledevis.dv_noteColumn]));
                }
                set {
                    this[this.tabledevis.dv_noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow clientRow {
                get {
                    return ((clientRow)(this.GetParentRow(this.Table.ParentRelations["fk_Devis_Client1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Devis_Client1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow[] GetlignedevisRows() {
                if ((this.Table.ChildRelations["fk_LigneDevis_Devis1"] == null)) {
                    return new lignedevisRow[0];
                }
                else {
                    return ((lignedevisRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneDevis_Devis1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class factureRow : global::System.Data.DataRow {
            
            private factureDataTable tablefacture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal factureRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefacture = ((factureDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numero_Facture {
                get {
                    return ((int)(this[this.tablefacture.numero_FactureColumn]));
                }
                set {
                    this[this.tablefacture.numero_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string date_Facture {
                get {
                    return ((string)(this[this.tablefacture.date_FactureColumn]));
                }
                set {
                    this[this.tablefacture.date_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double timbre_Facture {
                get {
                    try {
                        return ((double)(this[this.tablefacture.timbre_FactureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'timbre_Facture\' dans la table \'facture\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablefacture.timbre_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double remise_Facture {
                get {
                    try {
                        return ((double)(this[this.tablefacture.remise_FactureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'remise_Facture\' dans la table \'facture\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablefacture.remise_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double montantHT_Facture {
                get {
                    return ((double)(this[this.tablefacture.montantHT_FactureColumn]));
                }
                set {
                    this[this.tablefacture.montantHT_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double montantTTC_Facture {
                get {
                    return ((double)(this[this.tablefacture.montantTTC_FactureColumn]));
                }
                set {
                    this[this.tablefacture.montantTTC_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string statut_Facture {
                get {
                    return ((string)(this[this.tablefacture.statut_FactureColumn]));
                }
                set {
                    this[this.tablefacture.statut_FactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Client_codeClient {
                get {
                    return ((string)(this[this.tablefacture.Client_codeClientColumn]));
                }
                set {
                    this[this.tablefacture.Client_codeClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow clientRow {
                get {
                    return ((clientRow)(this.GetParentRow(this.Table.ParentRelations["fk_Facture_Client"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Facture_Client"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istimbre_FactureNull() {
                return this.IsNull(this.tablefacture.timbre_FactureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settimbre_FactureNull() {
                this[this.tablefacture.timbre_FactureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isremise_FactureNull() {
                return this.IsNull(this.tablefacture.remise_FactureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setremise_FactureNull() {
                this[this.tablefacture.remise_FactureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow[] GetlignefactureRows() {
                if ((this.Table.ChildRelations["fk_LigneFacture_Facture1"] == null)) {
                    return new lignefactureRow[0];
                }
                else {
                    return ((lignefactureRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneFacture_Facture1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class familleRow : global::System.Data.DataRow {
            
            private familleDataTable tablefamille;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal familleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefamille = ((familleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string id_famille {
                get {
                    return ((string)(this[this.tablefamille.id_familleColumn]));
                }
                set {
                    this[this.tablefamille.id_familleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow[] GetproduitRows() {
                if ((this.Table.ChildRelations["fk_Produit_Famille"] == null)) {
                    return new produitRow[0];
                }
                else {
                    return ((produitRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Produit_Famille"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fournisseurRow : global::System.Data.DataRow {
            
            private fournisseurDataTable tablefournisseur;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fournisseurRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefournisseur = ((fournisseurDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idFournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.idFournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.idFournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nom_Fournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.nom_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.nom_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prenom_Fournisseur {
                get {
                    try {
                        return ((string)(this[this.tablefournisseur.prenom_FournisseurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'prenom_Fournisseur\' dans la table \'fournisseur\' est DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefournisseur.prenom_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string adresse_Fournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.adresse_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.adresse_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal codePostal_Fournisseur {
                get {
                    return ((decimal)(this[this.tablefournisseur.codePostal_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.codePostal_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ville_fournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.ville_fournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.ville_fournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pays_Fournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.pays_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.pays_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal tel_Fournisseur {
                get {
                    try {
                        return ((decimal)(this[this.tablefournisseur.tel_FournisseurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'tel_Fournisseur\' dans la table \'fournisseur\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablefournisseur.tel_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal telmobile_Fournisseur {
                get {
                    try {
                        return ((decimal)(this[this.tablefournisseur.telmobile_FournisseurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'telmobile_Fournisseur\' dans la table \'fournisseur\' est" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablefournisseur.telmobile_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email_Fournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.email_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.email_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal fax_Fournisseur {
                get {
                    try {
                        return ((decimal)(this[this.tablefournisseur.fax_FournisseurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'fax_Fournisseur\' dans la table \'fournisseur\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablefournisseur.fax_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string siteInternet_Fournisseur {
                get {
                    try {
                        return ((string)(this[this.tablefournisseur.siteInternet_FournisseurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'siteInternet_Fournisseur\' dans la table \'fournisseur\' " +
                                "est DBNull.", e);
                    }
                }
                set {
                    this[this.tablefournisseur.siteInternet_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string etat_Fournisseur {
                get {
                    return ((string)(this[this.tablefournisseur.etat_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.etat_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal nb_transactions_Fournisseur {
                get {
                    return ((decimal)(this[this.tablefournisseur.nb_transactions_FournisseurColumn]));
                }
                set {
                    this[this.tablefournisseur.nb_transactions_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] note_Fournisseur {
                get {
                    try {
                        return ((byte[])(this[this.tablefournisseur.note_FournisseurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'note_Fournisseur\' dans la table \'fournisseur\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefournisseur.note_FournisseurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isprenom_FournisseurNull() {
                return this.IsNull(this.tablefournisseur.prenom_FournisseurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setprenom_FournisseurNull() {
                this[this.tablefournisseur.prenom_FournisseurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istel_FournisseurNull() {
                return this.IsNull(this.tablefournisseur.tel_FournisseurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settel_FournisseurNull() {
                this[this.tablefournisseur.tel_FournisseurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istelmobile_FournisseurNull() {
                return this.IsNull(this.tablefournisseur.telmobile_FournisseurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settelmobile_FournisseurNull() {
                this[this.tablefournisseur.telmobile_FournisseurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfax_FournisseurNull() {
                return this.IsNull(this.tablefournisseur.fax_FournisseurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfax_FournisseurNull() {
                this[this.tablefournisseur.fax_FournisseurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssiteInternet_FournisseurNull() {
                return this.IsNull(this.tablefournisseur.siteInternet_FournisseurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsiteInternet_FournisseurNull() {
                this[this.tablefournisseur.siteInternet_FournisseurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isnote_FournisseurNull() {
                return this.IsNull(this.tablefournisseur.note_FournisseurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setnote_FournisseurNull() {
                this[this.tablefournisseur.note_FournisseurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow[] GetcommandeachatRows() {
                if ((this.Table.ChildRelations["fk_CommandeAchat_Fournisseur1"] == null)) {
                    return new commandeachatRow[0];
                }
                else {
                    return ((commandeachatRow[])(base.GetChildRows(this.Table.ChildRelations["fk_CommandeAchat_Fournisseur1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class lignecommandeachatRow : global::System.Data.DataRow {
            
            private lignecommandeachatDataTable tablelignecommandeachat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignecommandeachatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelignecommandeachat = ((lignecommandeachatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int num_ligne_commande {
                get {
                    return ((int)(this[this.tablelignecommandeachat.num_ligne_commandeColumn]));
                }
                set {
                    this[this.tablelignecommandeachat.num_ligne_commandeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cma_code {
                get {
                    return ((string)(this[this.tablelignecommandeachat.cma_codeColumn]));
                }
                set {
                    this[this.tablelignecommandeachat.cma_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pr_code {
                get {
                    return ((string)(this[this.tablelignecommandeachat.pr_codeColumn]));
                }
                set {
                    this[this.tablelignecommandeachat.pr_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pr_quantite {
                get {
                    return ((int)(this[this.tablelignecommandeachat.pr_quantiteColumn]));
                }
                set {
                    this[this.tablelignecommandeachat.pr_quantiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double pr_montant {
                get {
                    return ((double)(this[this.tablelignecommandeachat.pr_montantColumn]));
                }
                set {
                    this[this.tablelignecommandeachat.pr_montantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow commandeachatRow {
                get {
                    return ((commandeachatRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneCommandeAchat_CommandeAchat1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneCommandeAchat_CommandeAchat1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow produitRow {
                get {
                    return ((produitRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneCommandeAchat_Produit1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneCommandeAchat_Produit1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class lignecommandeventeRow : global::System.Data.DataRow {
            
            private lignecommandeventeDataTable tablelignecommandevente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignecommandeventeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelignecommandevente = ((lignecommandeventeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int num_ligne_commande {
                get {
                    return ((int)(this[this.tablelignecommandevente.num_ligne_commandeColumn]));
                }
                set {
                    this[this.tablelignecommandevente.num_ligne_commandeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cmv_code {
                get {
                    return ((string)(this[this.tablelignecommandevente.cmv_codeColumn]));
                }
                set {
                    this[this.tablelignecommandevente.cmv_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pr_code {
                get {
                    return ((string)(this[this.tablelignecommandevente.pr_codeColumn]));
                }
                set {
                    this[this.tablelignecommandevente.pr_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pr_quantite {
                get {
                    return ((int)(this[this.tablelignecommandevente.pr_quantiteColumn]));
                }
                set {
                    this[this.tablelignecommandevente.pr_quantiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double pr_montant {
                get {
                    return ((double)(this[this.tablelignecommandevente.pr_montantColumn]));
                }
                set {
                    this[this.tablelignecommandevente.pr_montantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow commandeventeRow {
                get {
                    return ((commandeventeRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneCommandeVente_CommandeVente1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneCommandeVente_CommandeVente1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow produitRow {
                get {
                    return ((produitRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneCommandeVente_Produit1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneCommandeVente_Produit1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class lignedevisRow : global::System.Data.DataRow {
            
            private lignedevisDataTable tablelignedevis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignedevisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelignedevis = ((lignedevisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int num_ligne_devis {
                get {
                    return ((int)(this[this.tablelignedevis.num_ligne_devisColumn]));
                }
                set {
                    this[this.tablelignedevis.num_ligne_devisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dv_code {
                get {
                    return ((string)(this[this.tablelignedevis.dv_codeColumn]));
                }
                set {
                    this[this.tablelignedevis.dv_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pr_code {
                get {
                    return ((string)(this[this.tablelignedevis.pr_codeColumn]));
                }
                set {
                    this[this.tablelignedevis.pr_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pr_quantite {
                get {
                    return ((int)(this[this.tablelignedevis.pr_quantiteColumn]));
                }
                set {
                    this[this.tablelignedevis.pr_quantiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double pr_montant {
                get {
                    return ((double)(this[this.tablelignedevis.pr_montantColumn]));
                }
                set {
                    this[this.tablelignedevis.pr_montantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow produitRow {
                get {
                    return ((produitRow)(this.GetParentRow(this.Table.ParentRelations["fk_ligne_Devis_Produit1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_ligne_Devis_Produit1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow devisRow {
                get {
                    return ((devisRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneDevis_Devis1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneDevis_Devis1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class lignefactureRow : global::System.Data.DataRow {
            
            private lignefactureDataTable tablelignefacture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal lignefactureRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelignefacture = ((lignefactureDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numero_ligneFacture {
                get {
                    return ((int)(this[this.tablelignefacture.numero_ligneFactureColumn]));
                }
                set {
                    this[this.tablelignefacture.numero_ligneFactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Produit_codeProduit {
                get {
                    return ((string)(this[this.tablelignefacture.Produit_codeProduitColumn]));
                }
                set {
                    this[this.tablelignefacture.Produit_codeProduitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double quantite {
                get {
                    return ((double)(this[this.tablelignefacture.quantiteColumn]));
                }
                set {
                    this[this.tablelignefacture.quantiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double montant_Produit {
                get {
                    return ((double)(this[this.tablelignefacture.montant_ProduitColumn]));
                }
                set {
                    this[this.tablelignefacture.montant_ProduitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Facture_numeroFacture {
                get {
                    return ((int)(this[this.tablelignefacture.Facture_numeroFactureColumn]));
                }
                set {
                    this[this.tablelignefacture.Facture_numeroFactureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow factureRow {
                get {
                    return ((factureRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneFacture_Facture1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneFacture_Facture1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow produitRow {
                get {
                    return ((produitRow)(this.GetParentRow(this.Table.ParentRelations["fk_LigneFacture_Produit1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_LigneFacture_Produit1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class produitRow : global::System.Data.DataRow {
            
            private produitDataTable tableproduit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal produitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduit = ((produitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string code_produit {
                get {
                    return ((string)(this[this.tableproduit.code_produitColumn]));
                }
                set {
                    this[this.tableproduit.code_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string libelle_produit {
                get {
                    return ((string)(this[this.tableproduit.libelle_produitColumn]));
                }
                set {
                    this[this.tableproduit.libelle_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string designation_produit {
                get {
                    return ((string)(this[this.tableproduit.designation_produitColumn]));
                }
                set {
                    this[this.tableproduit.designation_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unite_produit {
                get {
                    return ((string)(this[this.tableproduit.unite_produitColumn]));
                }
                set {
                    this[this.tableproduit.unite_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fabricant_produit {
                get {
                    return ((string)(this[this.tableproduit.fabricant_produitColumn]));
                }
                set {
                    this[this.tableproduit.fabricant_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ref_fabricant_produit {
                get {
                    return ((string)(this[this.tableproduit.ref_fabricant_produitColumn]));
                }
                set {
                    this[this.tableproduit.ref_fabricant_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string poids_produit {
                get {
                    return ((string)(this[this.tableproduit.poids_produitColumn]));
                }
                set {
                    this[this.tableproduit.poids_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string volume_produit {
                get {
                    return ((string)(this[this.tableproduit.volume_produitColumn]));
                }
                set {
                    this[this.tableproduit.volume_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Famille_idFamille {
                get {
                    return ((string)(this[this.tableproduit.Famille_idFamilleColumn]));
                }
                set {
                    this[this.tableproduit.Famille_idFamilleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Categorie_idCategorie {
                get {
                    return ((string)(this[this.tableproduit.Categorie_idCategorieColumn]));
                }
                set {
                    this[this.tableproduit.Categorie_idCategorieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string produit_critique {
                get {
                    return ((string)(this[this.tableproduit.produit_critiqueColumn]));
                }
                set {
                    this[this.tableproduit.produit_critiqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stock_min_produit {
                get {
                    return ((int)(this[this.tableproduit.stock_min_produitColumn]));
                }
                set {
                    this[this.tableproduit.stock_min_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stock_max_produit {
                get {
                    return ((int)(this[this.tableproduit.stock_max_produitColumn]));
                }
                set {
                    this[this.tableproduit.stock_max_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stock_securite_produit {
                get {
                    return ((int)(this[this.tableproduit.stock_securite_produitColumn]));
                }
                set {
                    this[this.tableproduit.stock_securite_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int stock_disponible_produit {
                get {
                    return ((int)(this[this.tableproduit.stock_disponible_produitColumn]));
                }
                set {
                    this[this.tableproduit.stock_disponible_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string delai_approv_produit {
                get {
                    try {
                        return ((string)(this[this.tableproduit.delai_approv_produitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'delai_approv_produit\' dans la table \'produit\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproduit.delai_approv_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string magasin_produit {
                get {
                    try {
                        return ((string)(this[this.tableproduit.magasin_produitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'magasin_produit\' dans la table \'produit\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduit.magasin_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string emplacement_produit {
                get {
                    try {
                        return ((string)(this[this.tableproduit.emplacement_produitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'emplacement_produit\' dans la table \'produit\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproduit.emplacement_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string duree_conservation {
                get {
                    try {
                        return ((string)(this[this.tableproduit.duree_conservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'duree_conservation\' dans la table \'produit\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproduit.duree_conservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double prix_moyen_produit {
                get {
                    return ((double)(this[this.tableproduit.prix_moyen_produitColumn]));
                }
                set {
                    this[this.tableproduit.prix_moyen_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double prix_vente_produit {
                get {
                    return ((double)(this[this.tableproduit.prix_vente_produitColumn]));
                }
                set {
                    this[this.tableproduit.prix_vente_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TVA_produit {
                get {
                    try {
                        return ((double)(this[this.tableproduit.TVA_produitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TVA_produit\' dans la table \'produit\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduit.TVA_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double remise_produit {
                get {
                    try {
                        return ((double)(this[this.tableproduit.remise_produitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'remise_produit\' dans la table \'produit\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduit.remise_produitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRow categorieRow {
                get {
                    return ((categorieRow)(this.GetParentRow(this.Table.ParentRelations["fk_Produit_Categorie"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Produit_Categorie"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRow familleRow {
                get {
                    return ((familleRow)(this.GetParentRow(this.Table.ParentRelations["fk_Produit_Famille"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Produit_Famille"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdelai_approv_produitNull() {
                return this.IsNull(this.tableproduit.delai_approv_produitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdelai_approv_produitNull() {
                this[this.tableproduit.delai_approv_produitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismagasin_produitNull() {
                return this.IsNull(this.tableproduit.magasin_produitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmagasin_produitNull() {
                this[this.tableproduit.magasin_produitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isemplacement_produitNull() {
                return this.IsNull(this.tableproduit.emplacement_produitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setemplacement_produitNull() {
                this[this.tableproduit.emplacement_produitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isduree_conservationNull() {
                return this.IsNull(this.tableproduit.duree_conservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setduree_conservationNull() {
                this[this.tableproduit.duree_conservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTVA_produitNull() {
                return this.IsNull(this.tableproduit.TVA_produitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTVA_produitNull() {
                this[this.tableproduit.TVA_produitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isremise_produitNull() {
                return this.IsNull(this.tableproduit.remise_produitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setremise_produitNull() {
                this[this.tableproduit.remise_produitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow[] GetlignecommandeachatRows() {
                if ((this.Table.ChildRelations["fk_LigneCommandeAchat_Produit1"] == null)) {
                    return new lignecommandeachatRow[0];
                }
                else {
                    return ((lignecommandeachatRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneCommandeAchat_Produit1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow[] GetlignecommandeventeRows() {
                if ((this.Table.ChildRelations["fk_LigneCommandeVente_Produit1"] == null)) {
                    return new lignecommandeventeRow[0];
                }
                else {
                    return ((lignecommandeventeRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneCommandeVente_Produit1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow[] GetlignedevisRows() {
                if ((this.Table.ChildRelations["fk_ligne_Devis_Produit1"] == null)) {
                    return new lignedevisRow[0];
                }
                else {
                    return ((lignedevisRow[])(base.GetChildRows(this.Table.ChildRelations["fk_ligne_Devis_Produit1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow[] GetlignefactureRows() {
                if ((this.Table.ChildRelations["fk_LigneFacture_Produit1"] == null)) {
                    return new lignefactureRow[0];
                }
                else {
                    return ((lignefactureRow[])(base.GetChildRows(this.Table.ChildRelations["fk_LigneFacture_Produit1"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class categorieRowChangeEvent : global::System.EventArgs {
            
            private categorieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRowChangeEvent(categorieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public categorieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class clientRowChangeEvent : global::System.EventArgs {
            
            private clientRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRowChangeEvent(clientRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public clientRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class commandeachatRowChangeEvent : global::System.EventArgs {
            
            private commandeachatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRowChangeEvent(commandeachatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeachatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class commandeventeRowChangeEvent : global::System.EventArgs {
            
            private commandeventeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRowChangeEvent(commandeventeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public commandeventeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class devisRowChangeEvent : global::System.EventArgs {
            
            private devisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRowChangeEvent(devisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public devisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class factureRowChangeEvent : global::System.EventArgs {
            
            private factureRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRowChangeEvent(factureRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public factureRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class familleRowChangeEvent : global::System.EventArgs {
            
            private familleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRowChangeEvent(familleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public familleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fournisseurRowChangeEvent : global::System.EventArgs {
            
            private fournisseurRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRowChangeEvent(fournisseurRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fournisseurRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class lignecommandeachatRowChangeEvent : global::System.EventArgs {
            
            private lignecommandeachatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRowChangeEvent(lignecommandeachatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeachatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class lignecommandeventeRowChangeEvent : global::System.EventArgs {
            
            private lignecommandeventeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRowChangeEvent(lignecommandeventeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignecommandeventeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class lignedevisRowChangeEvent : global::System.EventArgs {
            
            private lignedevisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRowChangeEvent(lignedevisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignedevisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class lignefactureRowChangeEvent : global::System.EventArgs {
            
            private lignefactureRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRowChangeEvent(lignefactureRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public lignefactureRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class produitRowChangeEvent : global::System.EventArgs {
            
            private produitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRowChangeEvent(produitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public produitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ApplicationGestionCommerciale.gestioncommercialeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class categorieTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public categorieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "categorie";
            tableMapping.ColumnMappings.Add("id_categorie", "id_categorie");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `categorie` WHERE ((`id_categorie` = @Original_id_categorie))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id_categorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_categorie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `categorie` (`id_categorie`) VALUES (@id_categorie)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@id_categorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_categorie";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `categorie` SET `id_categorie` = @id_categorie WHERE ((`id_categorie` = @O" +
                "riginal_id_categorie))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@id_categorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_categorie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id_categorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_categorie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id_categorie` FROM `categorie`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.categorieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.categorieDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.categorieDataTable dataTable = new gestioncommercialeDataSet.categorieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.categorieDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "categorie");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_id_categorie) {
            if ((Original_id_categorie == null)) {
                throw new global::System.ArgumentNullException("Original_id_categorie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_id_categorie));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string id_categorie) {
            if ((id_categorie == null)) {
                throw new global::System.ArgumentNullException("id_categorie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(id_categorie));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string id_categorie, string Original_id_categorie) {
            if ((id_categorie == null)) {
                throw new global::System.ArgumentNullException("id_categorie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(id_categorie));
            }
            if ((Original_id_categorie == null)) {
                throw new global::System.ArgumentNullException("Original_id_categorie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_id_categorie));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_id_categorie) {
            return this.Update(Original_id_categorie, Original_id_categorie);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class clientTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public clientTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "client";
            tableMapping.ColumnMappings.Add("code_Client", "code_Client");
            tableMapping.ColumnMappings.Add("nom_Client", "nom_Client");
            tableMapping.ColumnMappings.Add("prenom_Fournisseur", "prenom_Client");
            tableMapping.ColumnMappings.Add("adresse_Client", "adresse_Client");
            tableMapping.ColumnMappings.Add("codepostal_Client", "codepostal_Client");
            tableMapping.ColumnMappings.Add("ville_Client", "ville_Client");
            tableMapping.ColumnMappings.Add("pays_Client", "pays_Client");
            tableMapping.ColumnMappings.Add("telFixe_Client", "telFixe_Client");
            tableMapping.ColumnMappings.Add("telMobile_Client", "telMobile_Client");
            tableMapping.ColumnMappings.Add("email_Client", "email_Client");
            tableMapping.ColumnMappings.Add("site_Client", "site_Client");
            tableMapping.ColumnMappings.Add("fax_Client", "fax_Client");
            tableMapping.ColumnMappings.Add("societe_Client", "societe_Client");
            tableMapping.ColumnMappings.Add("etat_Client", "etat_Client");
            tableMapping.ColumnMappings.Add("nbTransactions_Client", "nbTransactions_Client");
            tableMapping.ColumnMappings.Add("notes_Client", "notes_Client");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `client` WHERE ((`code_Client` = @Original_code_Client) AND (`nom_Cli" +
                "ent` = @Original_nom_Client) AND ((@IsNull_prenom_Fournisseur = 1 AND `prenom_Fo" +
                "urnisseur` IS NULL) OR (`prenom_Fournisseur` = @Original_prenom_Fournisseur)) AN" +
                "D (`adresse_Client` = @Original_adresse_Client) AND (`codepostal_Client` = @Orig" +
                "inal_codepostal_Client) AND ((@IsNull_ville_Client = 1 AND `ville_Client` IS NUL" +
                "L) OR (`ville_Client` = @Original_ville_Client)) AND ((@IsNull_pays_Client = 1 A" +
                "ND `pays_Client` IS NULL) OR (`pays_Client` = @Original_pays_Client)) AND ((@IsN" +
                "ull_telFixe_Client = 1 AND `telFixe_Client` IS NULL) OR (`telFixe_Client` = @Ori" +
                "ginal_telFixe_Client)) AND ((@IsNull_telMobile_Client = 1 AND `telMobile_Client`" +
                " IS NULL) OR (`telMobile_Client` = @Original_telMobile_Client)) AND ((@IsNull_em" +
                "ail_Client = 1 AND `email_Client` IS NULL) OR (`email_Client` = @Original_email_" +
                "Client)) AND ((@IsNull_site_Client = 1 AND `site_Client` IS NULL) OR (`site_Clie" +
                "nt` = @Original_site_Client)) AND ((@IsNull_fax_Client = 1 AND `fax_Client` IS N" +
                "ULL) OR (`fax_Client` = @Original_fax_Client)) AND ((@IsNull_societe_Client = 1 " +
                "AND `societe_Client` IS NULL) OR (`societe_Client` = @Original_societe_Client)) " +
                "AND ((@IsNull_etat_Client = 1 AND `etat_Client` IS NULL) OR (`etat_Client` = @Or" +
                "iginal_etat_Client)) AND ((@IsNull_nbTransactions_Client = 1 AND `nbTransactions" +
                "_Client` IS NULL) OR (`nbTransactions_Client` = @Original_nbTransactions_Client)" +
                ") AND ((@IsNull_notes_Client = 1 AND `notes_Client` IS NULL) OR (`notes_Client` " +
                "= @Original_notes_Client)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_code_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nom_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_adresse_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_codepostal_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "codepostal_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ville_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ville_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ville_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_pays_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pays_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pays_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_telFixe_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "telFixe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_telFixe_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telFixe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_telMobile_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "telMobile_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_telMobile_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telMobile_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_email_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "email_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_email_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_site_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "site_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_site_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "site_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_fax_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "fax_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fax_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_societe_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "societe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_societe_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "societe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_etat_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "etat_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_etat_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_nbTransactions_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nbTransactions_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nbTransactions_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nbTransactions_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notes_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notes_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notes_Client";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "notes_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `client` (`code_Client`, `nom_Client`, `prenom_Fournisseur`, `adresse_Client`, `codepostal_Client`, `ville_Client`, `pays_Client`, `telFixe_Client`, `telMobile_Client`, `email_Client`, `site_Client`, `fax_Client`, `societe_Client`, `etat_Client`, `nbTransactions_Client`, `notes_Client`) VALUES (@code_Client, @nom_Client, @prenom_Fournisseur, @adresse_Client, @codepostal_Client, @ville_Client, @pays_Client, @telFixe_Client, @telMobile_Client, @email_Client, @site_Client, @fax_Client, @societe_Client, @etat_Client, @nbTransactions_Client, @notes_Client)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@code_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nom_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@adresse_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@codepostal_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "codepostal_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ville_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pays_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@telFixe_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telFixe_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@telMobile_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telMobile_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@email_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@site_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "site_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fax_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@societe_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "societe_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@etat_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nbTransactions_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nbTransactions_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notes_Client";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "notes_Client";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `client` SET `code_Client` = @code_Client, `nom_Client` = @nom_Client, `pr" +
                "enom_Fournisseur` = @prenom_Fournisseur, `adresse_Client` = @adresse_Client, `co" +
                "depostal_Client` = @codepostal_Client, `ville_Client` = @ville_Client, `pays_Cli" +
                "ent` = @pays_Client, `telFixe_Client` = @telFixe_Client, `telMobile_Client` = @t" +
                "elMobile_Client, `email_Client` = @email_Client, `site_Client` = @site_Client, `" +
                "fax_Client` = @fax_Client, `societe_Client` = @societe_Client, `etat_Client` = @" +
                "etat_Client, `nbTransactions_Client` = @nbTransactions_Client, `notes_Client` = " +
                "@notes_Client WHERE ((`code_Client` = @Original_code_Client) AND (`nom_Client` =" +
                " @Original_nom_Client) AND ((@IsNull_prenom_Fournisseur = 1 AND `prenom_Fourniss" +
                "eur` IS NULL) OR (`prenom_Fournisseur` = @Original_prenom_Fournisseur)) AND (`ad" +
                "resse_Client` = @Original_adresse_Client) AND (`codepostal_Client` = @Original_c" +
                "odepostal_Client) AND ((@IsNull_ville_Client = 1 AND `ville_Client` IS NULL) OR " +
                "(`ville_Client` = @Original_ville_Client)) AND ((@IsNull_pays_Client = 1 AND `pa" +
                "ys_Client` IS NULL) OR (`pays_Client` = @Original_pays_Client)) AND ((@IsNull_te" +
                "lFixe_Client = 1 AND `telFixe_Client` IS NULL) OR (`telFixe_Client` = @Original_" +
                "telFixe_Client)) AND ((@IsNull_telMobile_Client = 1 AND `telMobile_Client` IS NU" +
                "LL) OR (`telMobile_Client` = @Original_telMobile_Client)) AND ((@IsNull_email_Cl" +
                "ient = 1 AND `email_Client` IS NULL) OR (`email_Client` = @Original_email_Client" +
                ")) AND ((@IsNull_site_Client = 1 AND `site_Client` IS NULL) OR (`site_Client` = " +
                "@Original_site_Client)) AND ((@IsNull_fax_Client = 1 AND `fax_Client` IS NULL) O" +
                "R (`fax_Client` = @Original_fax_Client)) AND ((@IsNull_societe_Client = 1 AND `s" +
                "ociete_Client` IS NULL) OR (`societe_Client` = @Original_societe_Client)) AND ((" +
                "@IsNull_etat_Client = 1 AND `etat_Client` IS NULL) OR (`etat_Client` = @Original" +
                "_etat_Client)) AND ((@IsNull_nbTransactions_Client = 1 AND `nbTransactions_Clien" +
                "t` IS NULL) OR (`nbTransactions_Client` = @Original_nbTransactions_Client)) AND " +
                "((@IsNull_notes_Client = 1 AND `notes_Client` IS NULL) OR (`notes_Client` = @Ori" +
                "ginal_notes_Client)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@code_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nom_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@adresse_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@codepostal_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "codepostal_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ville_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pays_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@telFixe_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telFixe_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@telMobile_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telMobile_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@email_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@site_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "site_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fax_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@societe_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "societe_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@etat_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nbTransactions_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nbTransactions_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notes_Client";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "notes_Client";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_code_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nom_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_adresse_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_codepostal_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "codepostal_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ville_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ville_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ville_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_pays_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pays_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pays_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_telFixe_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "telFixe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_telFixe_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telFixe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_telMobile_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "telMobile_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_telMobile_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telMobile_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_email_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "email_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_email_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_site_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "site_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_site_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "site_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_fax_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "fax_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fax_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_societe_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "societe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_societe_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "societe_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_etat_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "etat_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_etat_Client";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_nbTransactions_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nbTransactions_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nbTransactions_Client";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nbTransactions_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notes_Client";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notes_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notes_Client";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "notes_Client";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `code_Client`, `nom_Client`, `prenom_Fournisseur`, `adresse_Client`, `codepostal_Client`, `ville_Client`, `pays_Client`, `telFixe_Client`, `telMobile_Client`, `email_Client`, `site_Client`, `fax_Client`, `societe_Client`, `etat_Client`, `nbTransactions_Client`, `notes_Client` FROM `client`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.clientDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.clientDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.clientDataTable dataTable = new gestioncommercialeDataSet.clientDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.clientDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "client");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_code_Client, 
                    string Original_nom_Client, 
                    string Original_prenom_Fournisseur, 
                    string Original_adresse_Client, 
                    string Original_codepostal_Client, 
                    string Original_ville_Client, 
                    string Original_pays_Client, 
                    global::System.Nullable<decimal> Original_telFixe_Client, 
                    global::System.Nullable<decimal> Original_telMobile_Client, 
                    string Original_email_Client, 
                    string Original_site_Client, 
                    global::System.Nullable<decimal> Original_fax_Client, 
                    string Original_societe_Client, 
                    string Original_etat_Client, 
                    global::System.Nullable<decimal> Original_nbTransactions_Client, 
                    string Original_notes_Client) {
            if ((Original_code_Client == null)) {
                throw new global::System.ArgumentNullException("Original_code_Client");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_code_Client));
            }
            if ((Original_nom_Client == null)) {
                throw new global::System.ArgumentNullException("Original_nom_Client");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nom_Client));
            }
            if ((Original_prenom_Fournisseur == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_prenom_Fournisseur));
            }
            if ((Original_adresse_Client == null)) {
                throw new global::System.ArgumentNullException("Original_adresse_Client");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_adresse_Client));
            }
            if ((Original_codepostal_Client == null)) {
                throw new global::System.ArgumentNullException("Original_codepostal_Client");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_codepostal_Client));
            }
            if ((Original_ville_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ville_Client));
            }
            if ((Original_pays_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_pays_Client));
            }
            if ((Original_telFixe_Client.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_telFixe_Client.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_telMobile_Client.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_telMobile_Client.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_email_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_email_Client));
            }
            if ((Original_site_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_site_Client));
            }
            if ((Original_fax_Client.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_fax_Client.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_societe_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_societe_Client));
            }
            if ((Original_etat_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_etat_Client));
            }
            if ((Original_nbTransactions_Client.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_nbTransactions_Client.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_notes_Client == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_notes_Client));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string code_Client, 
                    string nom_Client, 
                    string prenom_Fournisseur, 
                    string adresse_Client, 
                    string codepostal_Client, 
                    string ville_Client, 
                    string pays_Client, 
                    global::System.Nullable<decimal> telFixe_Client, 
                    global::System.Nullable<decimal> telMobile_Client, 
                    string email_Client, 
                    string site_Client, 
                    global::System.Nullable<decimal> fax_Client, 
                    string societe_Client, 
                    string etat_Client, 
                    global::System.Nullable<decimal> nbTransactions_Client, 
                    string notes_Client) {
            if ((code_Client == null)) {
                throw new global::System.ArgumentNullException("code_Client");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(code_Client));
            }
            if ((nom_Client == null)) {
                throw new global::System.ArgumentNullException("nom_Client");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nom_Client));
            }
            if ((prenom_Fournisseur == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(prenom_Fournisseur));
            }
            if ((adresse_Client == null)) {
                throw new global::System.ArgumentNullException("adresse_Client");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(adresse_Client));
            }
            if ((codepostal_Client == null)) {
                throw new global::System.ArgumentNullException("codepostal_Client");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(codepostal_Client));
            }
            if ((ville_Client == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ville_Client));
            }
            if ((pays_Client == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(pays_Client));
            }
            if ((telFixe_Client.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(telFixe_Client.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((telMobile_Client.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(telMobile_Client.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((email_Client == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(email_Client));
            }
            if ((site_Client == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(site_Client));
            }
            if ((fax_Client.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(fax_Client.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((societe_Client == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(societe_Client));
            }
            if ((etat_Client == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(etat_Client));
            }
            if ((nbTransactions_Client.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(nbTransactions_Client.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((notes_Client == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(notes_Client));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string code_Client, 
                    string nom_Client, 
                    string prenom_Fournisseur, 
                    string adresse_Client, 
                    string codepostal_Client, 
                    string ville_Client, 
                    string pays_Client, 
                    global::System.Nullable<decimal> telFixe_Client, 
                    global::System.Nullable<decimal> telMobile_Client, 
                    string email_Client, 
                    string site_Client, 
                    global::System.Nullable<decimal> fax_Client, 
                    string societe_Client, 
                    string etat_Client, 
                    global::System.Nullable<decimal> nbTransactions_Client, 
                    string notes_Client, 
                    string Original_code_Client, 
                    string Original_nom_Client, 
                    string Original_prenom_Fournisseur, 
                    string Original_adresse_Client, 
                    string Original_codepostal_Client, 
                    string Original_ville_Client, 
                    string Original_pays_Client, 
                    global::System.Nullable<decimal> Original_telFixe_Client, 
                    global::System.Nullable<decimal> Original_telMobile_Client, 
                    string Original_email_Client, 
                    string Original_site_Client, 
                    global::System.Nullable<decimal> Original_fax_Client, 
                    string Original_societe_Client, 
                    string Original_etat_Client, 
                    global::System.Nullable<decimal> Original_nbTransactions_Client, 
                    string Original_notes_Client) {
            if ((code_Client == null)) {
                throw new global::System.ArgumentNullException("code_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(code_Client));
            }
            if ((nom_Client == null)) {
                throw new global::System.ArgumentNullException("nom_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nom_Client));
            }
            if ((prenom_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(prenom_Fournisseur));
            }
            if ((adresse_Client == null)) {
                throw new global::System.ArgumentNullException("adresse_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(adresse_Client));
            }
            if ((codepostal_Client == null)) {
                throw new global::System.ArgumentNullException("codepostal_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(codepostal_Client));
            }
            if ((ville_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ville_Client));
            }
            if ((pays_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(pays_Client));
            }
            if ((telFixe_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(telFixe_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((telMobile_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(telMobile_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((email_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(email_Client));
            }
            if ((site_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(site_Client));
            }
            if ((fax_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(fax_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((societe_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(societe_Client));
            }
            if ((etat_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(etat_Client));
            }
            if ((nbTransactions_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(nbTransactions_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((notes_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(notes_Client));
            }
            if ((Original_code_Client == null)) {
                throw new global::System.ArgumentNullException("Original_code_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_code_Client));
            }
            if ((Original_nom_Client == null)) {
                throw new global::System.ArgumentNullException("Original_nom_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_nom_Client));
            }
            if ((Original_prenom_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_prenom_Fournisseur));
            }
            if ((Original_adresse_Client == null)) {
                throw new global::System.ArgumentNullException("Original_adresse_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_adresse_Client));
            }
            if ((Original_codepostal_Client == null)) {
                throw new global::System.ArgumentNullException("Original_codepostal_Client");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_codepostal_Client));
            }
            if ((Original_ville_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ville_Client));
            }
            if ((Original_pays_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_pays_Client));
            }
            if ((Original_telFixe_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_telFixe_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_telMobile_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_telMobile_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_email_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_email_Client));
            }
            if ((Original_site_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_site_Client));
            }
            if ((Original_fax_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_fax_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_societe_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_societe_Client));
            }
            if ((Original_etat_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_etat_Client));
            }
            if ((Original_nbTransactions_Client.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_nbTransactions_Client.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_notes_Client == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_notes_Client));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nom_Client, 
                    string prenom_Fournisseur, 
                    string adresse_Client, 
                    string codepostal_Client, 
                    string ville_Client, 
                    string pays_Client, 
                    global::System.Nullable<decimal> telFixe_Client, 
                    global::System.Nullable<decimal> telMobile_Client, 
                    string email_Client, 
                    string site_Client, 
                    global::System.Nullable<decimal> fax_Client, 
                    string societe_Client, 
                    string etat_Client, 
                    global::System.Nullable<decimal> nbTransactions_Client, 
                    string notes_Client, 
                    string Original_code_Client, 
                    string Original_nom_Client, 
                    string Original_prenom_Fournisseur, 
                    string Original_adresse_Client, 
                    string Original_codepostal_Client, 
                    string Original_ville_Client, 
                    string Original_pays_Client, 
                    global::System.Nullable<decimal> Original_telFixe_Client, 
                    global::System.Nullable<decimal> Original_telMobile_Client, 
                    string Original_email_Client, 
                    string Original_site_Client, 
                    global::System.Nullable<decimal> Original_fax_Client, 
                    string Original_societe_Client, 
                    string Original_etat_Client, 
                    global::System.Nullable<decimal> Original_nbTransactions_Client, 
                    string Original_notes_Client) {
            return this.Update(Original_code_Client, nom_Client, prenom_Fournisseur, adresse_Client, codepostal_Client, ville_Client, pays_Client, telFixe_Client, telMobile_Client, email_Client, site_Client, fax_Client, societe_Client, etat_Client, nbTransactions_Client, notes_Client, Original_code_Client, Original_nom_Client, Original_prenom_Fournisseur, Original_adresse_Client, Original_codepostal_Client, Original_ville_Client, Original_pays_Client, Original_telFixe_Client, Original_telMobile_Client, Original_email_Client, Original_site_Client, Original_fax_Client, Original_societe_Client, Original_etat_Client, Original_nbTransactions_Client, Original_notes_Client);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class commandeachatTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public commandeachatTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "commandeachat";
            tableMapping.ColumnMappings.Add("cma_code", "cma_code");
            tableMapping.ColumnMappings.Add("fr_code", "fr_code");
            tableMapping.ColumnMappings.Add("cma_statut", "cma_statut");
            tableMapping.ColumnMappings.Add("cma_date", "cma_date");
            tableMapping.ColumnMappings.Add("cma_date_liv", "cma_date_liv");
            tableMapping.ColumnMappings.Add("cma_adresse", "cma_adresse");
            tableMapping.ColumnMappings.Add("cma_ville", "cma_ville");
            tableMapping.ColumnMappings.Add("cma_cp", "cma_cp");
            tableMapping.ColumnMappings.Add("cma_pays", "cma_pays");
            tableMapping.ColumnMappings.Add("cma_fixe", "cma_fixe");
            tableMapping.ColumnMappings.Add("cma_mobile", "cma_mobile");
            tableMapping.ColumnMappings.Add("cma_fax", "cma_fax");
            tableMapping.ColumnMappings.Add("cma_email", "cma_email");
            tableMapping.ColumnMappings.Add("cma_sitew", "cma_sitew");
            tableMapping.ColumnMappings.Add("cma_note", "cma_note");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `commandeachat` WHERE ((`cma_code` = @Original_cma_code) AND (`fr_code` = @Original_fr_code) AND (`cma_statut` = @Original_cma_statut) AND (`cma_date` = @Original_cma_date) AND (`cma_date_liv` = @Original_cma_date_liv) AND (`cma_adresse` = @Original_cma_adresse) AND (`cma_ville` = @Original_cma_ville) AND (`cma_cp` = @Original_cma_cp) AND (`cma_pays` = @Original_cma_pays) AND ((@IsNull_cma_fixe = 1 AND `cma_fixe` IS NULL) OR (`cma_fixe` = @Original_cma_fixe)) AND ((@IsNull_cma_mobile = 1 AND `cma_mobile` IS NULL) OR (`cma_mobile` = @Original_cma_mobile)) AND ((@IsNull_cma_fax = 1 AND `cma_fax` IS NULL) OR (`cma_fax` = @Original_cma_fax)) AND (`cma_email` = @Original_cma_email) AND ((@IsNull_cma_sitew = 1 AND `cma_sitew` IS NULL) OR (`cma_sitew` = @Original_cma_sitew)) AND ((@IsNull_cma_note = 1 AND `cma_note` IS NULL) OR (`cma_note` = @Original_cma_note)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_statut";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date_liv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_adresse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_ville";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_cp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_pays";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_sitew";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `commandeachat` (`cma_code`, `fr_code`, `cma_statut`, `cma_date`, `cma_date_liv`, `cma_adresse`, `cma_ville`, `cma_cp`, `cma_pays`, `cma_fixe`, `cma_mobile`, `cma_fax`, `cma_email`, `cma_sitew`, `cma_note`) VALUES (@cma_code, @fr_code, @cma_statut, @cma_date, @cma_date_liv, @cma_adresse, @cma_ville, @cma_cp, @cma_pays, @cma_fixe, @cma_mobile, @cma_fax, @cma_email, @cma_sitew, @cma_note)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fr_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_statut";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date_liv";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_adresse";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_ville";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_cp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_pays";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fixe";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_mobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fax";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_sitew";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_note";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `commandeachat` SET `cma_code` = @cma_code, `fr_code` = @fr_code, `cma_statut` = @cma_statut, `cma_date` = @cma_date, `cma_date_liv` = @cma_date_liv, `cma_adresse` = @cma_adresse, `cma_ville` = @cma_ville, `cma_cp` = @cma_cp, `cma_pays` = @cma_pays, `cma_fixe` = @cma_fixe, `cma_mobile` = @cma_mobile, `cma_fax` = @cma_fax, `cma_email` = @cma_email, `cma_sitew` = @cma_sitew, `cma_note` = @cma_note WHERE ((`cma_code` = @Original_cma_code) AND (`fr_code` = @Original_fr_code) AND (`cma_statut` = @Original_cma_statut) AND (`cma_date` = @Original_cma_date) AND (`cma_date_liv` = @Original_cma_date_liv) AND (`cma_adresse` = @Original_cma_adresse) AND (`cma_ville` = @Original_cma_ville) AND (`cma_cp` = @Original_cma_cp) AND (`cma_pays` = @Original_cma_pays) AND ((@IsNull_cma_fixe = 1 AND `cma_fixe` IS NULL) OR (`cma_fixe` = @Original_cma_fixe)) AND ((@IsNull_cma_mobile = 1 AND `cma_mobile` IS NULL) OR (`cma_mobile` = @Original_cma_mobile)) AND ((@IsNull_cma_fax = 1 AND `cma_fax` IS NULL) OR (`cma_fax` = @Original_cma_fax)) AND (`cma_email` = @Original_cma_email) AND ((@IsNull_cma_sitew = 1 AND `cma_sitew` IS NULL) OR (`cma_sitew` = @Original_cma_sitew)) AND ((@IsNull_cma_note = 1 AND `cma_note` IS NULL) OR (`cma_note` = @Original_cma_note)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fr_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_statut";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date_liv";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_adresse";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_ville";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_cp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_pays";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fixe";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_mobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fax";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_sitew";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_note";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_statut";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_date_liv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_adresse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_ville";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_cp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_pays";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_sitew";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cma_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cma_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `cma_code`, `fr_code`, `cma_statut`, `cma_date`, `cma_date_liv`, `cma_adre" +
                "sse`, `cma_ville`, `cma_cp`, `cma_pays`, `cma_fixe`, `cma_mobile`, `cma_fax`, `c" +
                "ma_email`, `cma_sitew`, `cma_note` FROM `commandeachat`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.commandeachatDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.commandeachatDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.commandeachatDataTable dataTable = new gestioncommercialeDataSet.commandeachatDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.commandeachatDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "commandeachat");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_cma_code, string Original_fr_code, string Original_cma_statut, string Original_cma_date, string Original_cma_date_liv, string Original_cma_adresse, string Original_cma_ville, int Original_cma_cp, string Original_cma_pays, global::System.Nullable<int> Original_cma_fixe, global::System.Nullable<int> Original_cma_mobile, global::System.Nullable<int> Original_cma_fax, string Original_cma_email, string Original_cma_sitew, string Original_cma_note) {
            if ((Original_cma_code == null)) {
                throw new global::System.ArgumentNullException("Original_cma_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_cma_code));
            }
            if ((Original_fr_code == null)) {
                throw new global::System.ArgumentNullException("Original_fr_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_fr_code));
            }
            if ((Original_cma_statut == null)) {
                throw new global::System.ArgumentNullException("Original_cma_statut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cma_statut));
            }
            if ((Original_cma_date == null)) {
                throw new global::System.ArgumentNullException("Original_cma_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_cma_date));
            }
            if ((Original_cma_date_liv == null)) {
                throw new global::System.ArgumentNullException("Original_cma_date_liv");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_cma_date_liv));
            }
            if ((Original_cma_adresse == null)) {
                throw new global::System.ArgumentNullException("Original_cma_adresse");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_cma_adresse));
            }
            if ((Original_cma_ville == null)) {
                throw new global::System.ArgumentNullException("Original_cma_ville");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_cma_ville));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_cma_cp));
            if ((Original_cma_pays == null)) {
                throw new global::System.ArgumentNullException("Original_cma_pays");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_cma_pays));
            }
            if ((Original_cma_fixe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_cma_fixe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_cma_mobile.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_cma_mobile.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_cma_fax.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_cma_fax.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_cma_email == null)) {
                throw new global::System.ArgumentNullException("Original_cma_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_cma_email));
            }
            if ((Original_cma_sitew == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_cma_sitew));
            }
            if ((Original_cma_note == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_cma_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cma_code, string fr_code, string cma_statut, string cma_date, string cma_date_liv, string cma_adresse, string cma_ville, int cma_cp, string cma_pays, global::System.Nullable<int> cma_fixe, global::System.Nullable<int> cma_mobile, global::System.Nullable<int> cma_fax, string cma_email, string cma_sitew, string cma_note) {
            if ((cma_code == null)) {
                throw new global::System.ArgumentNullException("cma_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cma_code));
            }
            if ((fr_code == null)) {
                throw new global::System.ArgumentNullException("fr_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(fr_code));
            }
            if ((cma_statut == null)) {
                throw new global::System.ArgumentNullException("cma_statut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(cma_statut));
            }
            if ((cma_date == null)) {
                throw new global::System.ArgumentNullException("cma_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(cma_date));
            }
            if ((cma_date_liv == null)) {
                throw new global::System.ArgumentNullException("cma_date_liv");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(cma_date_liv));
            }
            if ((cma_adresse == null)) {
                throw new global::System.ArgumentNullException("cma_adresse");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(cma_adresse));
            }
            if ((cma_ville == null)) {
                throw new global::System.ArgumentNullException("cma_ville");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(cma_ville));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(cma_cp));
            if ((cma_pays == null)) {
                throw new global::System.ArgumentNullException("cma_pays");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(cma_pays));
            }
            if ((cma_fixe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(cma_fixe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((cma_mobile.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(cma_mobile.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((cma_fax.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(cma_fax.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((cma_email == null)) {
                throw new global::System.ArgumentNullException("cma_email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(cma_email));
            }
            if ((cma_sitew == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(cma_sitew));
            }
            if ((cma_note == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(cma_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cma_code, 
                    string fr_code, 
                    string cma_statut, 
                    string cma_date, 
                    string cma_date_liv, 
                    string cma_adresse, 
                    string cma_ville, 
                    int cma_cp, 
                    string cma_pays, 
                    global::System.Nullable<int> cma_fixe, 
                    global::System.Nullable<int> cma_mobile, 
                    global::System.Nullable<int> cma_fax, 
                    string cma_email, 
                    string cma_sitew, 
                    string cma_note, 
                    string Original_cma_code, 
                    string Original_fr_code, 
                    string Original_cma_statut, 
                    string Original_cma_date, 
                    string Original_cma_date_liv, 
                    string Original_cma_adresse, 
                    string Original_cma_ville, 
                    int Original_cma_cp, 
                    string Original_cma_pays, 
                    global::System.Nullable<int> Original_cma_fixe, 
                    global::System.Nullable<int> Original_cma_mobile, 
                    global::System.Nullable<int> Original_cma_fax, 
                    string Original_cma_email, 
                    string Original_cma_sitew, 
                    string Original_cma_note) {
            if ((cma_code == null)) {
                throw new global::System.ArgumentNullException("cma_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cma_code));
            }
            if ((fr_code == null)) {
                throw new global::System.ArgumentNullException("fr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(fr_code));
            }
            if ((cma_statut == null)) {
                throw new global::System.ArgumentNullException("cma_statut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(cma_statut));
            }
            if ((cma_date == null)) {
                throw new global::System.ArgumentNullException("cma_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(cma_date));
            }
            if ((cma_date_liv == null)) {
                throw new global::System.ArgumentNullException("cma_date_liv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(cma_date_liv));
            }
            if ((cma_adresse == null)) {
                throw new global::System.ArgumentNullException("cma_adresse");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(cma_adresse));
            }
            if ((cma_ville == null)) {
                throw new global::System.ArgumentNullException("cma_ville");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(cma_ville));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(cma_cp));
            if ((cma_pays == null)) {
                throw new global::System.ArgumentNullException("cma_pays");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(cma_pays));
            }
            if ((cma_fixe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(cma_fixe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((cma_mobile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(cma_mobile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((cma_fax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(cma_fax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((cma_email == null)) {
                throw new global::System.ArgumentNullException("cma_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(cma_email));
            }
            if ((cma_sitew == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(cma_sitew));
            }
            if ((cma_note == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(cma_note));
            }
            if ((Original_cma_code == null)) {
                throw new global::System.ArgumentNullException("Original_cma_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_cma_code));
            }
            if ((Original_fr_code == null)) {
                throw new global::System.ArgumentNullException("Original_fr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_fr_code));
            }
            if ((Original_cma_statut == null)) {
                throw new global::System.ArgumentNullException("Original_cma_statut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_cma_statut));
            }
            if ((Original_cma_date == null)) {
                throw new global::System.ArgumentNullException("Original_cma_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_cma_date));
            }
            if ((Original_cma_date_liv == null)) {
                throw new global::System.ArgumentNullException("Original_cma_date_liv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_cma_date_liv));
            }
            if ((Original_cma_adresse == null)) {
                throw new global::System.ArgumentNullException("Original_cma_adresse");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_cma_adresse));
            }
            if ((Original_cma_ville == null)) {
                throw new global::System.ArgumentNullException("Original_cma_ville");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_cma_ville));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_cma_cp));
            if ((Original_cma_pays == null)) {
                throw new global::System.ArgumentNullException("Original_cma_pays");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_cma_pays));
            }
            if ((Original_cma_fixe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_cma_fixe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_cma_mobile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_cma_mobile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_cma_fax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_cma_fax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_cma_email == null)) {
                throw new global::System.ArgumentNullException("Original_cma_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_cma_email));
            }
            if ((Original_cma_sitew == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_cma_sitew));
            }
            if ((Original_cma_note == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_cma_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string fr_code, 
                    string cma_statut, 
                    string cma_date, 
                    string cma_date_liv, 
                    string cma_adresse, 
                    string cma_ville, 
                    int cma_cp, 
                    string cma_pays, 
                    global::System.Nullable<int> cma_fixe, 
                    global::System.Nullable<int> cma_mobile, 
                    global::System.Nullable<int> cma_fax, 
                    string cma_email, 
                    string cma_sitew, 
                    string cma_note, 
                    string Original_cma_code, 
                    string Original_fr_code, 
                    string Original_cma_statut, 
                    string Original_cma_date, 
                    string Original_cma_date_liv, 
                    string Original_cma_adresse, 
                    string Original_cma_ville, 
                    int Original_cma_cp, 
                    string Original_cma_pays, 
                    global::System.Nullable<int> Original_cma_fixe, 
                    global::System.Nullable<int> Original_cma_mobile, 
                    global::System.Nullable<int> Original_cma_fax, 
                    string Original_cma_email, 
                    string Original_cma_sitew, 
                    string Original_cma_note) {
            return this.Update(Original_cma_code, fr_code, cma_statut, cma_date, cma_date_liv, cma_adresse, cma_ville, cma_cp, cma_pays, cma_fixe, cma_mobile, cma_fax, cma_email, cma_sitew, cma_note, Original_cma_code, Original_fr_code, Original_cma_statut, Original_cma_date, Original_cma_date_liv, Original_cma_adresse, Original_cma_ville, Original_cma_cp, Original_cma_pays, Original_cma_fixe, Original_cma_mobile, Original_cma_fax, Original_cma_email, Original_cma_sitew, Original_cma_note);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class commandeventeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public commandeventeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "commandevente";
            tableMapping.ColumnMappings.Add("cmv_code", "cmv_code");
            tableMapping.ColumnMappings.Add("cl_code", "cl_code");
            tableMapping.ColumnMappings.Add("cmv_statut", "cmv_statut");
            tableMapping.ColumnMappings.Add("cmv_date", "cmv_date");
            tableMapping.ColumnMappings.Add("cmv_date_liv", "cmv_date_liv");
            tableMapping.ColumnMappings.Add("cmv_adresse", "cmv_adresse");
            tableMapping.ColumnMappings.Add("cmv_ville", "cmv_ville");
            tableMapping.ColumnMappings.Add("cmv_cp", "cmv_cp");
            tableMapping.ColumnMappings.Add("cmv_pays", "cmv_pays");
            tableMapping.ColumnMappings.Add("cmv_fixe", "cmv_fixe");
            tableMapping.ColumnMappings.Add("cmv_mobile", "cmv_mobile");
            tableMapping.ColumnMappings.Add("cmv_fax", "cmv_fax");
            tableMapping.ColumnMappings.Add("cmv_email", "cmv_email");
            tableMapping.ColumnMappings.Add("cmv_sitew", "cmv_sitew");
            tableMapping.ColumnMappings.Add("cmv_note", "cmv_note");
            tableMapping.ColumnMappings.Add("cmv_frais", "cmv_frais");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `commandevente` WHERE ((`cmv_code` = @Original_cmv_code) AND (`cl_code` = @Original_cl_code) AND (`cmv_statut` = @Original_cmv_statut) AND (`cmv_date` = @Original_cmv_date) AND (`cmv_date_liv` = @Original_cmv_date_liv) AND (`cmv_adresse` = @Original_cmv_adresse) AND (`cmv_ville` = @Original_cmv_ville) AND (`cmv_cp` = @Original_cmv_cp) AND (`cmv_pays` = @Original_cmv_pays) AND ((@IsNull_cmv_fixe = 1 AND `cmv_fixe` IS NULL) OR (`cmv_fixe` = @Original_cmv_fixe)) AND ((@IsNull_cmv_mobile = 1 AND `cmv_mobile` IS NULL) OR (`cmv_mobile` = @Original_cmv_mobile)) AND ((@IsNull_cmv_fax = 1 AND `cmv_fax` IS NULL) OR (`cmv_fax` = @Original_cmv_fax)) AND (`cmv_email` = @Original_cmv_email) AND ((@IsNull_cmv_sitew = 1 AND `cmv_sitew` IS NULL) OR (`cmv_sitew` = @Original_cmv_sitew)) AND ((@IsNull_cmv_note = 1 AND `cmv_note` IS NULL) OR (`cmv_note` = @Original_cmv_note)) AND ((@IsNull_cmv_frais = 1 AND `cmv_frais` IS NULL) OR (`cmv_frais` = @Original_cmv_frais)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cl_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cl_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_statut";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date_liv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_adresse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_ville";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_cp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_pays";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_sitew";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_frais";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_frais";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_frais";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "cmv_frais";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `commandevente` (`cmv_code`, `cl_code`, `cmv_statut`, `cmv_date`, `cmv_date_liv`, `cmv_adresse`, `cmv_ville`, `cmv_cp`, `cmv_pays`, `cmv_fixe`, `cmv_mobile`, `cmv_fax`, `cmv_email`, `cmv_sitew`, `cmv_note`, `cmv_frais`) VALUES (@cmv_code, @cl_code, @cmv_statut, @cmv_date, @cmv_date_liv, @cmv_adresse, @cmv_ville, @cmv_cp, @cmv_pays, @cmv_fixe, @cmv_mobile, @cmv_fax, @cmv_email, @cmv_sitew, @cmv_note, @cmv_frais)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cl_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cl_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_statut";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date_liv";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_adresse";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_ville";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_cp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_pays";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fixe";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_mobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fax";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_sitew";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_note";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_frais";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "cmv_frais";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `commandevente` SET `cmv_code` = @cmv_code, `cl_code` = @cl_code, `cmv_statut` = @cmv_statut, `cmv_date` = @cmv_date, `cmv_date_liv` = @cmv_date_liv, `cmv_adresse` = @cmv_adresse, `cmv_ville` = @cmv_ville, `cmv_cp` = @cmv_cp, `cmv_pays` = @cmv_pays, `cmv_fixe` = @cmv_fixe, `cmv_mobile` = @cmv_mobile, `cmv_fax` = @cmv_fax, `cmv_email` = @cmv_email, `cmv_sitew` = @cmv_sitew, `cmv_note` = @cmv_note, `cmv_frais` = @cmv_frais WHERE ((`cmv_code` = @Original_cmv_code) AND (`cl_code` = @Original_cl_code) AND (`cmv_statut` = @Original_cmv_statut) AND (`cmv_date` = @Original_cmv_date) AND (`cmv_date_liv` = @Original_cmv_date_liv) AND (`cmv_adresse` = @Original_cmv_adresse) AND (`cmv_ville` = @Original_cmv_ville) AND (`cmv_cp` = @Original_cmv_cp) AND (`cmv_pays` = @Original_cmv_pays) AND ((@IsNull_cmv_fixe = 1 AND `cmv_fixe` IS NULL) OR (`cmv_fixe` = @Original_cmv_fixe)) AND ((@IsNull_cmv_mobile = 1 AND `cmv_mobile` IS NULL) OR (`cmv_mobile` = @Original_cmv_mobile)) AND ((@IsNull_cmv_fax = 1 AND `cmv_fax` IS NULL) OR (`cmv_fax` = @Original_cmv_fax)) AND (`cmv_email` = @Original_cmv_email) AND ((@IsNull_cmv_sitew = 1 AND `cmv_sitew` IS NULL) OR (`cmv_sitew` = @Original_cmv_sitew)) AND ((@IsNull_cmv_note = 1 AND `cmv_note` IS NULL) OR (`cmv_note` = @Original_cmv_note)) AND ((@IsNull_cmv_frais = 1 AND `cmv_frais` IS NULL) OR (`cmv_frais` = @Original_cmv_frais)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cl_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cl_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_statut";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date_liv";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_adresse";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_ville";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_cp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_pays";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fixe";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_mobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fax";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_sitew";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_note";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_frais";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "cmv_frais";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cl_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cl_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_statut";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_date_liv";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_date_liv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_adresse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_ville";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_cp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_pays";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_sitew";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_note";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cmv_frais";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cmv_frais";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_frais";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "cmv_frais";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `cmv_code`, `cl_code`, `cmv_statut`, `cmv_date`, `cmv_date_liv`, `cmv_adre" +
                "sse`, `cmv_ville`, `cmv_cp`, `cmv_pays`, `cmv_fixe`, `cmv_mobile`, `cmv_fax`, `c" +
                "mv_email`, `cmv_sitew`, `cmv_note`, `cmv_frais` FROM `commandevente`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.commandeventeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.commandeventeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.commandeventeDataTable dataTable = new gestioncommercialeDataSet.commandeventeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.commandeventeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "commandevente");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_cmv_code, 
                    string Original_cl_code, 
                    string Original_cmv_statut, 
                    string Original_cmv_date, 
                    string Original_cmv_date_liv, 
                    string Original_cmv_adresse, 
                    string Original_cmv_ville, 
                    int Original_cmv_cp, 
                    string Original_cmv_pays, 
                    global::System.Nullable<int> Original_cmv_fixe, 
                    global::System.Nullable<int> Original_cmv_mobile, 
                    global::System.Nullable<int> Original_cmv_fax, 
                    string Original_cmv_email, 
                    string Original_cmv_sitew, 
                    string Original_cmv_note, 
                    global::System.Nullable<double> Original_cmv_frais) {
            if ((Original_cmv_code == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_cmv_code));
            }
            if ((Original_cl_code == null)) {
                throw new global::System.ArgumentNullException("Original_cl_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cl_code));
            }
            if ((Original_cmv_statut == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_statut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cmv_statut));
            }
            if ((Original_cmv_date == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_cmv_date));
            }
            if ((Original_cmv_date_liv == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_date_liv");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_cmv_date_liv));
            }
            if ((Original_cmv_adresse == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_adresse");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_cmv_adresse));
            }
            if ((Original_cmv_ville == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_ville");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_cmv_ville));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_cmv_cp));
            if ((Original_cmv_pays == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_pays");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_cmv_pays));
            }
            if ((Original_cmv_fixe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_cmv_fixe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_mobile.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_cmv_mobile.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_fax.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_cmv_fax.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_email == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_cmv_email));
            }
            if ((Original_cmv_sitew == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_cmv_sitew));
            }
            if ((Original_cmv_note == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_cmv_note));
            }
            if ((Original_cmv_frais.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_cmv_frais.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string cmv_code, 
                    string cl_code, 
                    string cmv_statut, 
                    string cmv_date, 
                    string cmv_date_liv, 
                    string cmv_adresse, 
                    string cmv_ville, 
                    int cmv_cp, 
                    string cmv_pays, 
                    global::System.Nullable<int> cmv_fixe, 
                    global::System.Nullable<int> cmv_mobile, 
                    global::System.Nullable<int> cmv_fax, 
                    string cmv_email, 
                    string cmv_sitew, 
                    string cmv_note, 
                    global::System.Nullable<double> cmv_frais) {
            if ((cmv_code == null)) {
                throw new global::System.ArgumentNullException("cmv_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cmv_code));
            }
            if ((cl_code == null)) {
                throw new global::System.ArgumentNullException("cl_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cl_code));
            }
            if ((cmv_statut == null)) {
                throw new global::System.ArgumentNullException("cmv_statut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(cmv_statut));
            }
            if ((cmv_date == null)) {
                throw new global::System.ArgumentNullException("cmv_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(cmv_date));
            }
            if ((cmv_date_liv == null)) {
                throw new global::System.ArgumentNullException("cmv_date_liv");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(cmv_date_liv));
            }
            if ((cmv_adresse == null)) {
                throw new global::System.ArgumentNullException("cmv_adresse");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(cmv_adresse));
            }
            if ((cmv_ville == null)) {
                throw new global::System.ArgumentNullException("cmv_ville");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(cmv_ville));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(cmv_cp));
            if ((cmv_pays == null)) {
                throw new global::System.ArgumentNullException("cmv_pays");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(cmv_pays));
            }
            if ((cmv_fixe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(cmv_fixe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((cmv_mobile.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(cmv_mobile.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((cmv_fax.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(cmv_fax.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((cmv_email == null)) {
                throw new global::System.ArgumentNullException("cmv_email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(cmv_email));
            }
            if ((cmv_sitew == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(cmv_sitew));
            }
            if ((cmv_note == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(cmv_note));
            }
            if ((cmv_frais.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(cmv_frais.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cmv_code, 
                    string cl_code, 
                    string cmv_statut, 
                    string cmv_date, 
                    string cmv_date_liv, 
                    string cmv_adresse, 
                    string cmv_ville, 
                    int cmv_cp, 
                    string cmv_pays, 
                    global::System.Nullable<int> cmv_fixe, 
                    global::System.Nullable<int> cmv_mobile, 
                    global::System.Nullable<int> cmv_fax, 
                    string cmv_email, 
                    string cmv_sitew, 
                    string cmv_note, 
                    global::System.Nullable<double> cmv_frais, 
                    string Original_cmv_code, 
                    string Original_cl_code, 
                    string Original_cmv_statut, 
                    string Original_cmv_date, 
                    string Original_cmv_date_liv, 
                    string Original_cmv_adresse, 
                    string Original_cmv_ville, 
                    int Original_cmv_cp, 
                    string Original_cmv_pays, 
                    global::System.Nullable<int> Original_cmv_fixe, 
                    global::System.Nullable<int> Original_cmv_mobile, 
                    global::System.Nullable<int> Original_cmv_fax, 
                    string Original_cmv_email, 
                    string Original_cmv_sitew, 
                    string Original_cmv_note, 
                    global::System.Nullable<double> Original_cmv_frais) {
            if ((cmv_code == null)) {
                throw new global::System.ArgumentNullException("cmv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cmv_code));
            }
            if ((cl_code == null)) {
                throw new global::System.ArgumentNullException("cl_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cl_code));
            }
            if ((cmv_statut == null)) {
                throw new global::System.ArgumentNullException("cmv_statut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(cmv_statut));
            }
            if ((cmv_date == null)) {
                throw new global::System.ArgumentNullException("cmv_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(cmv_date));
            }
            if ((cmv_date_liv == null)) {
                throw new global::System.ArgumentNullException("cmv_date_liv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(cmv_date_liv));
            }
            if ((cmv_adresse == null)) {
                throw new global::System.ArgumentNullException("cmv_adresse");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(cmv_adresse));
            }
            if ((cmv_ville == null)) {
                throw new global::System.ArgumentNullException("cmv_ville");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(cmv_ville));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(cmv_cp));
            if ((cmv_pays == null)) {
                throw new global::System.ArgumentNullException("cmv_pays");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(cmv_pays));
            }
            if ((cmv_fixe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(cmv_fixe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((cmv_mobile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(cmv_mobile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((cmv_fax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(cmv_fax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((cmv_email == null)) {
                throw new global::System.ArgumentNullException("cmv_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(cmv_email));
            }
            if ((cmv_sitew == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(cmv_sitew));
            }
            if ((cmv_note == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(cmv_note));
            }
            if ((cmv_frais.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(cmv_frais.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_code == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_cmv_code));
            }
            if ((Original_cl_code == null)) {
                throw new global::System.ArgumentNullException("Original_cl_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_cl_code));
            }
            if ((Original_cmv_statut == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_statut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_cmv_statut));
            }
            if ((Original_cmv_date == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_cmv_date));
            }
            if ((Original_cmv_date_liv == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_date_liv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_cmv_date_liv));
            }
            if ((Original_cmv_adresse == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_adresse");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_cmv_adresse));
            }
            if ((Original_cmv_ville == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_ville");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_cmv_ville));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_cmv_cp));
            if ((Original_cmv_pays == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_pays");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_cmv_pays));
            }
            if ((Original_cmv_fixe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_cmv_fixe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_mobile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_cmv_mobile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_fax.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_cmv_fax.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_cmv_email == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_cmv_email));
            }
            if ((Original_cmv_sitew == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_cmv_sitew));
            }
            if ((Original_cmv_note == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_cmv_note));
            }
            if ((Original_cmv_frais.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_cmv_frais.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cl_code, 
                    string cmv_statut, 
                    string cmv_date, 
                    string cmv_date_liv, 
                    string cmv_adresse, 
                    string cmv_ville, 
                    int cmv_cp, 
                    string cmv_pays, 
                    global::System.Nullable<int> cmv_fixe, 
                    global::System.Nullable<int> cmv_mobile, 
                    global::System.Nullable<int> cmv_fax, 
                    string cmv_email, 
                    string cmv_sitew, 
                    string cmv_note, 
                    global::System.Nullable<double> cmv_frais, 
                    string Original_cmv_code, 
                    string Original_cl_code, 
                    string Original_cmv_statut, 
                    string Original_cmv_date, 
                    string Original_cmv_date_liv, 
                    string Original_cmv_adresse, 
                    string Original_cmv_ville, 
                    int Original_cmv_cp, 
                    string Original_cmv_pays, 
                    global::System.Nullable<int> Original_cmv_fixe, 
                    global::System.Nullable<int> Original_cmv_mobile, 
                    global::System.Nullable<int> Original_cmv_fax, 
                    string Original_cmv_email, 
                    string Original_cmv_sitew, 
                    string Original_cmv_note, 
                    global::System.Nullable<double> Original_cmv_frais) {
            return this.Update(Original_cmv_code, cl_code, cmv_statut, cmv_date, cmv_date_liv, cmv_adresse, cmv_ville, cmv_cp, cmv_pays, cmv_fixe, cmv_mobile, cmv_fax, cmv_email, cmv_sitew, cmv_note, cmv_frais, Original_cmv_code, Original_cl_code, Original_cmv_statut, Original_cmv_date, Original_cmv_date_liv, Original_cmv_adresse, Original_cmv_ville, Original_cmv_cp, Original_cmv_pays, Original_cmv_fixe, Original_cmv_mobile, Original_cmv_fax, Original_cmv_email, Original_cmv_sitew, Original_cmv_note, Original_cmv_frais);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class devisTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public devisTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "devis";
            tableMapping.ColumnMappings.Add("dv_code", "dv_code");
            tableMapping.ColumnMappings.Add("Client_codeClient", "Client_codeClient");
            tableMapping.ColumnMappings.Add("dv_statut", "dv_statut");
            tableMapping.ColumnMappings.Add("dv_date", "dv_date");
            tableMapping.ColumnMappings.Add("dv_adresse", "dv_adresse");
            tableMapping.ColumnMappings.Add("dv_ville", "dv_ville");
            tableMapping.ColumnMappings.Add("dv_cp", "dv_cp");
            tableMapping.ColumnMappings.Add("dv_pays", "dv_pays");
            tableMapping.ColumnMappings.Add("dv_fixe", "dv_fixe");
            tableMapping.ColumnMappings.Add("dv_fax", "dv_fax");
            tableMapping.ColumnMappings.Add("dv_mobile", "dv_mobile");
            tableMapping.ColumnMappings.Add("dv_email", "dv_email");
            tableMapping.ColumnMappings.Add("dv_sitew", "dv_sitew");
            tableMapping.ColumnMappings.Add("dv_note", "dv_note");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `devis` WHERE ((`dv_code` = @Original_dv_code) AND (`Client_codeClient` = @Original_Client_codeClient) AND (`dv_statut` = @Original_dv_statut) AND (`dv_date` = @Original_dv_date) AND (`dv_adresse` = @Original_dv_adresse) AND (`dv_ville` = @Original_dv_ville) AND (`dv_cp` = @Original_dv_cp) AND (`dv_pays` = @Original_dv_pays) AND (`dv_fixe` = @Original_dv_fixe) AND (`dv_fax` = @Original_dv_fax) AND (`dv_mobile` = @Original_dv_mobile) AND (`dv_email` = @Original_dv_email) AND (`dv_sitew` = @Original_dv_sitew) AND (`dv_note` = @Original_dv_note))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_statut";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_adresse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_ville";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_cp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_pays";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `devis` (`dv_code`, `Client_codeClient`, `dv_statut`, `dv_date`, `dv_adresse`, `dv_ville`, `dv_cp`, `dv_pays`, `dv_fixe`, `dv_fax`, `dv_mobile`, `dv_email`, `dv_sitew`, `dv_note`) VALUES (@dv_code, @Client_codeClient, @dv_statut, @dv_date, @dv_adresse, @dv_ville, @dv_cp, @dv_pays, @dv_fixe, @dv_fax, @dv_mobile, @dv_email, @dv_sitew, @dv_note)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_statut";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_adresse";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_ville";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_cp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_pays";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fixe";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fax";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_mobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_sitew";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_note";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `devis` SET `dv_code` = @dv_code, `Client_codeClient` = @Client_codeClient, `dv_statut` = @dv_statut, `dv_date` = @dv_date, `dv_adresse` = @dv_adresse, `dv_ville` = @dv_ville, `dv_cp` = @dv_cp, `dv_pays` = @dv_pays, `dv_fixe` = @dv_fixe, `dv_fax` = @dv_fax, `dv_mobile` = @dv_mobile, `dv_email` = @dv_email, `dv_sitew` = @dv_sitew, `dv_note` = @dv_note WHERE ((`dv_code` = @Original_dv_code) AND (`Client_codeClient` = @Original_Client_codeClient) AND (`dv_statut` = @Original_dv_statut) AND (`dv_date` = @Original_dv_date) AND (`dv_adresse` = @Original_dv_adresse) AND (`dv_ville` = @Original_dv_ville) AND (`dv_cp` = @Original_dv_cp) AND (`dv_pays` = @Original_dv_pays) AND (`dv_fixe` = @Original_dv_fixe) AND (`dv_fax` = @Original_dv_fax) AND (`dv_mobile` = @Original_dv_mobile) AND (`dv_email` = @Original_dv_email) AND (`dv_sitew` = @Original_dv_sitew) AND (`dv_note` = @Original_dv_note))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_statut";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_adresse";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_ville";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_cp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_pays";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fixe";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fax";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_mobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_sitew";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_note";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_statut";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_statut";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_date";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_adresse";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_adresse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_ville";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_ville";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_cp";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_cp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_pays";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_pays";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_fixe";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fixe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_fax";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_fax";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_mobile";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dv_mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_sitew";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_sitew";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_note";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_note";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `dv_code`, `Client_codeClient`, `dv_statut`, `dv_date`, `dv_adresse`, `dv_" +
                "ville`, `dv_cp`, `dv_pays`, `dv_fixe`, `dv_fax`, `dv_mobile`, `dv_email`, `dv_si" +
                "tew`, `dv_note` FROM `devis`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.devisDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.devisDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.devisDataTable dataTable = new gestioncommercialeDataSet.devisDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.devisDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "devis");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_dv_code, string Original_Client_codeClient, string Original_dv_statut, string Original_dv_date, string Original_dv_adresse, string Original_dv_ville, int Original_dv_cp, string Original_dv_pays, int Original_dv_fixe, int Original_dv_fax, int Original_dv_mobile, string Original_dv_email, string Original_dv_sitew, string Original_dv_note) {
            if ((Original_dv_code == null)) {
                throw new global::System.ArgumentNullException("Original_dv_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_dv_code));
            }
            if ((Original_Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Original_Client_codeClient");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Client_codeClient));
            }
            if ((Original_dv_statut == null)) {
                throw new global::System.ArgumentNullException("Original_dv_statut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dv_statut));
            }
            if ((Original_dv_date == null)) {
                throw new global::System.ArgumentNullException("Original_dv_date");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dv_date));
            }
            if ((Original_dv_adresse == null)) {
                throw new global::System.ArgumentNullException("Original_dv_adresse");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dv_adresse));
            }
            if ((Original_dv_ville == null)) {
                throw new global::System.ArgumentNullException("Original_dv_ville");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dv_ville));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_dv_cp));
            if ((Original_dv_pays == null)) {
                throw new global::System.ArgumentNullException("Original_dv_pays");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_dv_pays));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_dv_fixe));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_dv_fax));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_dv_mobile));
            if ((Original_dv_email == null)) {
                throw new global::System.ArgumentNullException("Original_dv_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_dv_email));
            }
            if ((Original_dv_sitew == null)) {
                throw new global::System.ArgumentNullException("Original_dv_sitew");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_dv_sitew));
            }
            if ((Original_dv_note == null)) {
                throw new global::System.ArgumentNullException("Original_dv_note");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_dv_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string dv_code, string Client_codeClient, string dv_statut, string dv_date, string dv_adresse, string dv_ville, int dv_cp, string dv_pays, int dv_fixe, int dv_fax, int dv_mobile, string dv_email, string dv_sitew, string dv_note) {
            if ((dv_code == null)) {
                throw new global::System.ArgumentNullException("dv_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(dv_code));
            }
            if ((Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Client_codeClient");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Client_codeClient));
            }
            if ((dv_statut == null)) {
                throw new global::System.ArgumentNullException("dv_statut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dv_statut));
            }
            if ((dv_date == null)) {
                throw new global::System.ArgumentNullException("dv_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dv_date));
            }
            if ((dv_adresse == null)) {
                throw new global::System.ArgumentNullException("dv_adresse");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dv_adresse));
            }
            if ((dv_ville == null)) {
                throw new global::System.ArgumentNullException("dv_ville");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dv_ville));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(dv_cp));
            if ((dv_pays == null)) {
                throw new global::System.ArgumentNullException("dv_pays");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(dv_pays));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(dv_fixe));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(dv_fax));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(dv_mobile));
            if ((dv_email == null)) {
                throw new global::System.ArgumentNullException("dv_email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(dv_email));
            }
            if ((dv_sitew == null)) {
                throw new global::System.ArgumentNullException("dv_sitew");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(dv_sitew));
            }
            if ((dv_note == null)) {
                throw new global::System.ArgumentNullException("dv_note");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(dv_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string dv_code, 
                    string Client_codeClient, 
                    string dv_statut, 
                    string dv_date, 
                    string dv_adresse, 
                    string dv_ville, 
                    int dv_cp, 
                    string dv_pays, 
                    int dv_fixe, 
                    int dv_fax, 
                    int dv_mobile, 
                    string dv_email, 
                    string dv_sitew, 
                    string dv_note, 
                    string Original_dv_code, 
                    string Original_Client_codeClient, 
                    string Original_dv_statut, 
                    string Original_dv_date, 
                    string Original_dv_adresse, 
                    string Original_dv_ville, 
                    int Original_dv_cp, 
                    string Original_dv_pays, 
                    int Original_dv_fixe, 
                    int Original_dv_fax, 
                    int Original_dv_mobile, 
                    string Original_dv_email, 
                    string Original_dv_sitew, 
                    string Original_dv_note) {
            if ((dv_code == null)) {
                throw new global::System.ArgumentNullException("dv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(dv_code));
            }
            if ((Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Client_codeClient");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Client_codeClient));
            }
            if ((dv_statut == null)) {
                throw new global::System.ArgumentNullException("dv_statut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dv_statut));
            }
            if ((dv_date == null)) {
                throw new global::System.ArgumentNullException("dv_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dv_date));
            }
            if ((dv_adresse == null)) {
                throw new global::System.ArgumentNullException("dv_adresse");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dv_adresse));
            }
            if ((dv_ville == null)) {
                throw new global::System.ArgumentNullException("dv_ville");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dv_ville));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(dv_cp));
            if ((dv_pays == null)) {
                throw new global::System.ArgumentNullException("dv_pays");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(dv_pays));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(dv_fixe));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(dv_fax));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(dv_mobile));
            if ((dv_email == null)) {
                throw new global::System.ArgumentNullException("dv_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(dv_email));
            }
            if ((dv_sitew == null)) {
                throw new global::System.ArgumentNullException("dv_sitew");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(dv_sitew));
            }
            if ((dv_note == null)) {
                throw new global::System.ArgumentNullException("dv_note");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(dv_note));
            }
            if ((Original_dv_code == null)) {
                throw new global::System.ArgumentNullException("Original_dv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_dv_code));
            }
            if ((Original_Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Original_Client_codeClient");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Client_codeClient));
            }
            if ((Original_dv_statut == null)) {
                throw new global::System.ArgumentNullException("Original_dv_statut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_dv_statut));
            }
            if ((Original_dv_date == null)) {
                throw new global::System.ArgumentNullException("Original_dv_date");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_dv_date));
            }
            if ((Original_dv_adresse == null)) {
                throw new global::System.ArgumentNullException("Original_dv_adresse");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_dv_adresse));
            }
            if ((Original_dv_ville == null)) {
                throw new global::System.ArgumentNullException("Original_dv_ville");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_dv_ville));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_dv_cp));
            if ((Original_dv_pays == null)) {
                throw new global::System.ArgumentNullException("Original_dv_pays");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_dv_pays));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_dv_fixe));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_dv_fax));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_dv_mobile));
            if ((Original_dv_email == null)) {
                throw new global::System.ArgumentNullException("Original_dv_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_dv_email));
            }
            if ((Original_dv_sitew == null)) {
                throw new global::System.ArgumentNullException("Original_dv_sitew");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_dv_sitew));
            }
            if ((Original_dv_note == null)) {
                throw new global::System.ArgumentNullException("Original_dv_note");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_dv_note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Client_codeClient, 
                    string dv_statut, 
                    string dv_date, 
                    string dv_adresse, 
                    string dv_ville, 
                    int dv_cp, 
                    string dv_pays, 
                    int dv_fixe, 
                    int dv_fax, 
                    int dv_mobile, 
                    string dv_email, 
                    string dv_sitew, 
                    string dv_note, 
                    string Original_dv_code, 
                    string Original_Client_codeClient, 
                    string Original_dv_statut, 
                    string Original_dv_date, 
                    string Original_dv_adresse, 
                    string Original_dv_ville, 
                    int Original_dv_cp, 
                    string Original_dv_pays, 
                    int Original_dv_fixe, 
                    int Original_dv_fax, 
                    int Original_dv_mobile, 
                    string Original_dv_email, 
                    string Original_dv_sitew, 
                    string Original_dv_note) {
            return this.Update(Original_dv_code, Client_codeClient, dv_statut, dv_date, dv_adresse, dv_ville, dv_cp, dv_pays, dv_fixe, dv_fax, dv_mobile, dv_email, dv_sitew, dv_note, Original_dv_code, Original_Client_codeClient, Original_dv_statut, Original_dv_date, Original_dv_adresse, Original_dv_ville, Original_dv_cp, Original_dv_pays, Original_dv_fixe, Original_dv_fax, Original_dv_mobile, Original_dv_email, Original_dv_sitew, Original_dv_note);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class factureTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public factureTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "facture";
            tableMapping.ColumnMappings.Add("numero_Facture", "numero_Facture");
            tableMapping.ColumnMappings.Add("date_Facture", "date_Facture");
            tableMapping.ColumnMappings.Add("timbre_Facture", "timbre_Facture");
            tableMapping.ColumnMappings.Add("remise_Facture", "remise_Facture");
            tableMapping.ColumnMappings.Add("montantHT_Facture", "montantHT_Facture");
            tableMapping.ColumnMappings.Add("montantTTC_Facture", "montantTTC_Facture");
            tableMapping.ColumnMappings.Add("statut_Facture", "statut_Facture");
            tableMapping.ColumnMappings.Add("Client_codeClient", "Client_codeClient");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `facture` WHERE ((`numero_Facture` = @Original_numero_Facture) AND (`date_Facture` = @Original_date_Facture) AND ((@IsNull_timbre_Facture = 1 AND `timbre_Facture` IS NULL) OR (`timbre_Facture` = @Original_timbre_Facture)) AND ((@IsNull_remise_Facture = 1 AND `remise_Facture` IS NULL) OR (`remise_Facture` = @Original_remise_Facture)) AND (`montantHT_Facture` = @Original_montantHT_Facture) AND (`montantTTC_Facture` = @Original_montantTTC_Facture) AND (`statut_Facture` = @Original_statut_Facture) AND (`Client_codeClient` = @Original_Client_codeClient))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_numero_Facture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "numero_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "date_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_timbre_Facture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "timbre_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_timbre_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "timbre_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remise_Facture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remise_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remise_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_montantHT_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantHT_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_montantTTC_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantTTC_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_statut_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "statut_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `facture` (`date_Facture`, `timbre_Facture`, `remise_Facture`, `montantHT_Facture`, `montantTTC_Facture`, `statut_Facture`, `Client_codeClient`) VALUES (@date_Facture, @timbre_Facture, @remise_Facture, @montantHT_Facture, @montantTTC_Facture, @statut_Facture, @Client_codeClient)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "date_Facture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@timbre_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "timbre_Facture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remise_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_Facture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@montantHT_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantHT_Facture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@montantTTC_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantTTC_Facture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@statut_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "statut_Facture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `facture` SET `date_Facture` = @date_Facture, `timbre_Facture` = @timbre_Facture, `remise_Facture` = @remise_Facture, `montantHT_Facture` = @montantHT_Facture, `montantTTC_Facture` = @montantTTC_Facture, `statut_Facture` = @statut_Facture, `Client_codeClient` = @Client_codeClient WHERE ((`numero_Facture` = @Original_numero_Facture) AND (`date_Facture` = @Original_date_Facture) AND ((@IsNull_timbre_Facture = 1 AND `timbre_Facture` IS NULL) OR (`timbre_Facture` = @Original_timbre_Facture)) AND ((@IsNull_remise_Facture = 1 AND `remise_Facture` IS NULL) OR (`remise_Facture` = @Original_remise_Facture)) AND (`montantHT_Facture` = @Original_montantHT_Facture) AND (`montantTTC_Facture` = @Original_montantTTC_Facture) AND (`statut_Facture` = @Original_statut_Facture) AND (`Client_codeClient` = @Original_Client_codeClient))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "date_Facture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@timbre_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "timbre_Facture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remise_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_Facture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@montantHT_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantHT_Facture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@montantTTC_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantTTC_Facture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@statut_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "statut_Facture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_numero_Facture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "numero_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "date_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_timbre_Facture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "timbre_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_timbre_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "timbre_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remise_Facture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remise_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remise_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_montantHT_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantHT_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_montantTTC_Facture";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montantTTC_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_statut_Facture";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "statut_Facture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Client_codeClient";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Client_codeClient";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `numero_Facture`, `date_Facture`, `timbre_Facture`, `remise_Facture`, `mon" +
                "tantHT_Facture`, `montantTTC_Facture`, `statut_Facture`, `Client_codeClient` FRO" +
                "M `facture`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.factureDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.factureDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.factureDataTable dataTable = new gestioncommercialeDataSet.factureDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.factureDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "facture");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_numero_Facture, string Original_date_Facture, global::System.Nullable<double> Original_timbre_Facture, global::System.Nullable<double> Original_remise_Facture, double Original_montantHT_Facture, double Original_montantTTC_Facture, string Original_statut_Facture, string Original_Client_codeClient) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_numero_Facture));
            if ((Original_date_Facture == null)) {
                throw new global::System.ArgumentNullException("Original_date_Facture");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_date_Facture));
            }
            if ((Original_timbre_Facture.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_timbre_Facture.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_remise_Facture.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_remise_Facture.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_montantHT_Facture));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_montantTTC_Facture));
            if ((Original_statut_Facture == null)) {
                throw new global::System.ArgumentNullException("Original_statut_Facture");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_statut_Facture));
            }
            if ((Original_Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Original_Client_codeClient");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Client_codeClient));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string date_Facture, global::System.Nullable<double> timbre_Facture, global::System.Nullable<double> remise_Facture, double montantHT_Facture, double montantTTC_Facture, string statut_Facture, string Client_codeClient) {
            if ((date_Facture == null)) {
                throw new global::System.ArgumentNullException("date_Facture");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(date_Facture));
            }
            if ((timbre_Facture.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(timbre_Facture.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((remise_Facture.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(remise_Facture.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(montantHT_Facture));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(montantTTC_Facture));
            if ((statut_Facture == null)) {
                throw new global::System.ArgumentNullException("statut_Facture");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(statut_Facture));
            }
            if ((Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Client_codeClient");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Client_codeClient));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string date_Facture, global::System.Nullable<double> timbre_Facture, global::System.Nullable<double> remise_Facture, double montantHT_Facture, double montantTTC_Facture, string statut_Facture, string Client_codeClient, int Original_numero_Facture, string Original_date_Facture, global::System.Nullable<double> Original_timbre_Facture, global::System.Nullable<double> Original_remise_Facture, double Original_montantHT_Facture, double Original_montantTTC_Facture, string Original_statut_Facture, string Original_Client_codeClient) {
            if ((date_Facture == null)) {
                throw new global::System.ArgumentNullException("date_Facture");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(date_Facture));
            }
            if ((timbre_Facture.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(timbre_Facture.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((remise_Facture.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(remise_Facture.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(montantHT_Facture));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(montantTTC_Facture));
            if ((statut_Facture == null)) {
                throw new global::System.ArgumentNullException("statut_Facture");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(statut_Facture));
            }
            if ((Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Client_codeClient");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Client_codeClient));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_numero_Facture));
            if ((Original_date_Facture == null)) {
                throw new global::System.ArgumentNullException("Original_date_Facture");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_date_Facture));
            }
            if ((Original_timbre_Facture.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_timbre_Facture.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_remise_Facture.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_remise_Facture.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_montantHT_Facture));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_montantTTC_Facture));
            if ((Original_statut_Facture == null)) {
                throw new global::System.ArgumentNullException("Original_statut_Facture");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_statut_Facture));
            }
            if ((Original_Client_codeClient == null)) {
                throw new global::System.ArgumentNullException("Original_Client_codeClient");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Client_codeClient));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class familleTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public familleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "famille";
            tableMapping.ColumnMappings.Add("id_famille", "id_famille");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `famille` WHERE ((`id_famille` = @Original_id_famille))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id_famille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_famille";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `famille` (`id_famille`) VALUES (@id_famille)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@id_famille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_famille";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `famille` SET `id_famille` = @id_famille WHERE ((`id_famille` = @Original_" +
                "id_famille))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@id_famille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_famille";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id_famille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "id_famille";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id_famille` FROM `famille`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.familleDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.familleDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.familleDataTable dataTable = new gestioncommercialeDataSet.familleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.familleDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "famille");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_id_famille) {
            if ((Original_id_famille == null)) {
                throw new global::System.ArgumentNullException("Original_id_famille");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_id_famille));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string id_famille) {
            if ((id_famille == null)) {
                throw new global::System.ArgumentNullException("id_famille");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(id_famille));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string id_famille, string Original_id_famille) {
            if ((id_famille == null)) {
                throw new global::System.ArgumentNullException("id_famille");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(id_famille));
            }
            if ((Original_id_famille == null)) {
                throw new global::System.ArgumentNullException("Original_id_famille");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_id_famille));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_id_famille) {
            return this.Update(Original_id_famille, Original_id_famille);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class fournisseurTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public fournisseurTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fournisseur";
            tableMapping.ColumnMappings.Add("idFournisseur", "idFournisseur");
            tableMapping.ColumnMappings.Add("nom_Fournisseur", "nom_Fournisseur");
            tableMapping.ColumnMappings.Add("prenom_Fournisseur", "prenom_Fournisseur");
            tableMapping.ColumnMappings.Add("adresse_Fournisseur", "adresse_Fournisseur");
            tableMapping.ColumnMappings.Add("codePostal_Fournisseur", "codePostal_Fournisseur");
            tableMapping.ColumnMappings.Add("ville_fournisseur", "ville_fournisseur");
            tableMapping.ColumnMappings.Add("pays_Fournisseur", "pays_Fournisseur");
            tableMapping.ColumnMappings.Add("tel_Fournisseur", "tel_Fournisseur");
            tableMapping.ColumnMappings.Add("telmobile_Fournisseur", "telmobile_Fournisseur");
            tableMapping.ColumnMappings.Add("email_Fournisseur", "email_Fournisseur");
            tableMapping.ColumnMappings.Add("fax_Fournisseur", "fax_Fournisseur");
            tableMapping.ColumnMappings.Add("siteInternet_Fournisseur", "siteInternet_Fournisseur");
            tableMapping.ColumnMappings.Add("etat_Fournisseur", "etat_Fournisseur");
            tableMapping.ColumnMappings.Add("nb_transactions_Fournisseur", "nb_transactions_Fournisseur");
            tableMapping.ColumnMappings.Add("note_Fournisseur", "note_Fournisseur");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `fournisseur` WHERE ((`idFournisseur` = @Original_idFournisseur) AND (`nom_Fournisseur` = @Original_nom_Fournisseur) AND ((@IsNull_prenom_Fournisseur = 1 AND `prenom_Fournisseur` IS NULL) OR (`prenom_Fournisseur` = @Original_prenom_Fournisseur)) AND (`adresse_Fournisseur` = @Original_adresse_Fournisseur) AND (`codePostal_Fournisseur` = @Original_codePostal_Fournisseur) AND (`ville_fournisseur` = @Original_ville_fournisseur) AND (`pays_Fournisseur` = @Original_pays_Fournisseur) AND ((@IsNull_tel_Fournisseur = 1 AND `tel_Fournisseur` IS NULL) OR (`tel_Fournisseur` = @Original_tel_Fournisseur)) AND ((@IsNull_telmobile_Fournisseur = 1 AND `telmobile_Fournisseur` IS NULL) OR (`telmobile_Fournisseur` = @Original_telmobile_Fournisseur)) AND (`email_Fournisseur` = @Original_email_Fournisseur) AND ((@IsNull_fax_Fournisseur = 1 AND `fax_Fournisseur` IS NULL) OR (`fax_Fournisseur` = @Original_fax_Fournisseur)) AND ((@IsNull_siteInternet_Fournisseur = 1 AND `siteInternet_Fournisseur` IS NULL) OR (`siteInternet_Fournisseur` = @Original_siteInternet_Fournisseur)) AND (`etat_Fournisseur` = @Original_etat_Fournisseur) AND (`nb_transactions_Fournisseur` = @Original_nb_transactions_Fournisseur) AND ((@IsNull_note_Fournisseur = 1 AND `note_Fournisseur` IS NULL) OR (`note_Fournisseur` = @Original_note_Fournisseur)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_idFournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "idFournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_adresse_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_codePostal_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "codePostal_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ville_fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pays_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_tel_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "tel_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "tel_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_telmobile_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "telmobile_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_telmobile_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telmobile_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_email_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_fax_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "fax_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fax_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_siteInternet_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "siteInternet_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_siteInternet_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "siteInternet_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_etat_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nb_transactions_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nb_transactions_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_note_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "note_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_note_Fournisseur";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "note_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `fournisseur` (`idFournisseur`, `nom_Fournisseur`, `prenom_Fournisseur`, `adresse_Fournisseur`, `codePostal_Fournisseur`, `ville_fournisseur`, `pays_Fournisseur`, `tel_Fournisseur`, `telmobile_Fournisseur`, `email_Fournisseur`, `fax_Fournisseur`, `siteInternet_Fournisseur`, `etat_Fournisseur`, `nb_transactions_Fournisseur`, `note_Fournisseur`) VALUES (@idFournisseur, @nom_Fournisseur, @prenom_Fournisseur, @adresse_Fournisseur, @codePostal_Fournisseur, @ville_fournisseur, @pays_Fournisseur, @tel_Fournisseur, @telmobile_Fournisseur, @email_Fournisseur, @fax_Fournisseur, @siteInternet_Fournisseur, @etat_Fournisseur, @nb_transactions_Fournisseur, @note_Fournisseur)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@idFournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "idFournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@adresse_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@codePostal_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "codePostal_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ville_fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pays_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "tel_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@telmobile_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telmobile_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@email_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fax_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@siteInternet_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "siteInternet_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@etat_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nb_transactions_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nb_transactions_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@note_Fournisseur";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "note_Fournisseur";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `fournisseur` SET `idFournisseur` = @idFournisseur, `nom_Fournisseur` = @n" +
                "om_Fournisseur, `prenom_Fournisseur` = @prenom_Fournisseur, `adresse_Fournisseur" +
                "` = @adresse_Fournisseur, `codePostal_Fournisseur` = @codePostal_Fournisseur, `v" +
                "ille_fournisseur` = @ville_fournisseur, `pays_Fournisseur` = @pays_Fournisseur, " +
                "`tel_Fournisseur` = @tel_Fournisseur, `telmobile_Fournisseur` = @telmobile_Fourn" +
                "isseur, `email_Fournisseur` = @email_Fournisseur, `fax_Fournisseur` = @fax_Fourn" +
                "isseur, `siteInternet_Fournisseur` = @siteInternet_Fournisseur, `etat_Fournisseu" +
                "r` = @etat_Fournisseur, `nb_transactions_Fournisseur` = @nb_transactions_Fournis" +
                "seur, `note_Fournisseur` = @note_Fournisseur WHERE ((`idFournisseur` = @Original" +
                "_idFournisseur) AND (`nom_Fournisseur` = @Original_nom_Fournisseur) AND ((@IsNul" +
                "l_prenom_Fournisseur = 1 AND `prenom_Fournisseur` IS NULL) OR (`prenom_Fournisse" +
                "ur` = @Original_prenom_Fournisseur)) AND (`adresse_Fournisseur` = @Original_adre" +
                "sse_Fournisseur) AND (`codePostal_Fournisseur` = @Original_codePostal_Fournisseu" +
                "r) AND (`ville_fournisseur` = @Original_ville_fournisseur) AND (`pays_Fournisseu" +
                "r` = @Original_pays_Fournisseur) AND ((@IsNull_tel_Fournisseur = 1 AND `tel_Four" +
                "nisseur` IS NULL) OR (`tel_Fournisseur` = @Original_tel_Fournisseur)) AND ((@IsN" +
                "ull_telmobile_Fournisseur = 1 AND `telmobile_Fournisseur` IS NULL) OR (`telmobil" +
                "e_Fournisseur` = @Original_telmobile_Fournisseur)) AND (`email_Fournisseur` = @O" +
                "riginal_email_Fournisseur) AND ((@IsNull_fax_Fournisseur = 1 AND `fax_Fournisseu" +
                "r` IS NULL) OR (`fax_Fournisseur` = @Original_fax_Fournisseur)) AND ((@IsNull_si" +
                "teInternet_Fournisseur = 1 AND `siteInternet_Fournisseur` IS NULL) OR (`siteInte" +
                "rnet_Fournisseur` = @Original_siteInternet_Fournisseur)) AND (`etat_Fournisseur`" +
                " = @Original_etat_Fournisseur) AND (`nb_transactions_Fournisseur` = @Original_nb" +
                "_transactions_Fournisseur) AND ((@IsNull_note_Fournisseur = 1 AND `note_Fourniss" +
                "eur` IS NULL) OR (`note_Fournisseur` = @Original_note_Fournisseur)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@idFournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "idFournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@adresse_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@codePostal_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "codePostal_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ville_fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pays_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tel_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "tel_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@telmobile_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telmobile_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@email_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fax_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@siteInternet_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "siteInternet_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@etat_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nb_transactions_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nb_transactions_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@note_Fournisseur";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "note_Fournisseur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_idFournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "idFournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prenom_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prenom_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_adresse_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "adresse_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_codePostal_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "codePostal_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ville_fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ville_fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pays_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pays_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_tel_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "tel_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tel_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "tel_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_telmobile_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "telmobile_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_telmobile_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "telmobile_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_email_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_fax_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "fax_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fax_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "fax_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_siteInternet_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "siteInternet_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_siteInternet_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "siteInternet_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_etat_Fournisseur";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "etat_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nb_transactions_Fournisseur";
            param.DbType = global::System.Data.DbType.Decimal;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "nb_transactions_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_note_Fournisseur";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "note_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_note_Fournisseur";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Geometry;
            param.IsNullable = true;
            param.SourceColumn = "note_Fournisseur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `idFournisseur`, `nom_Fournisseur`, `prenom_Fournisseur`, `adresse_Fournisseur`, `codePostal_Fournisseur`, `ville_fournisseur`, `pays_Fournisseur`, `tel_Fournisseur`, `telmobile_Fournisseur`, `email_Fournisseur`, `fax_Fournisseur`, `siteInternet_Fournisseur`, `etat_Fournisseur`, `nb_transactions_Fournisseur`, `note_Fournisseur` FROM `fournisseur`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.fournisseurDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.fournisseurDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.fournisseurDataTable dataTable = new gestioncommercialeDataSet.fournisseurDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.fournisseurDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "fournisseur");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_idFournisseur, string Original_nom_Fournisseur, string Original_prenom_Fournisseur, string Original_adresse_Fournisseur, decimal Original_codePostal_Fournisseur, string Original_ville_fournisseur, string Original_pays_Fournisseur, global::System.Nullable<decimal> Original_tel_Fournisseur, global::System.Nullable<decimal> Original_telmobile_Fournisseur, string Original_email_Fournisseur, global::System.Nullable<decimal> Original_fax_Fournisseur, string Original_siteInternet_Fournisseur, string Original_etat_Fournisseur, decimal Original_nb_transactions_Fournisseur, string Original_note_Fournisseur) {
            if ((Original_idFournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_idFournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_idFournisseur));
            }
            if ((Original_nom_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_nom_Fournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nom_Fournisseur));
            }
            if ((Original_prenom_Fournisseur == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_prenom_Fournisseur));
            }
            if ((Original_adresse_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_adresse_Fournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_adresse_Fournisseur));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_codePostal_Fournisseur));
            if ((Original_ville_fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_ville_fournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ville_fournisseur));
            }
            if ((Original_pays_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_pays_Fournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_pays_Fournisseur));
            }
            if ((Original_tel_Fournisseur.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_tel_Fournisseur.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_telmobile_Fournisseur.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_telmobile_Fournisseur.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_email_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_email_Fournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_email_Fournisseur));
            }
            if ((Original_fax_Fournisseur.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_fax_Fournisseur.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_siteInternet_Fournisseur == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_siteInternet_Fournisseur));
            }
            if ((Original_etat_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_etat_Fournisseur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_etat_Fournisseur));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_nb_transactions_Fournisseur));
            if ((Original_note_Fournisseur == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_note_Fournisseur));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string idFournisseur, string nom_Fournisseur, string prenom_Fournisseur, string adresse_Fournisseur, decimal codePostal_Fournisseur, string ville_fournisseur, string pays_Fournisseur, global::System.Nullable<decimal> tel_Fournisseur, global::System.Nullable<decimal> telmobile_Fournisseur, string email_Fournisseur, global::System.Nullable<decimal> fax_Fournisseur, string siteInternet_Fournisseur, string etat_Fournisseur, decimal nb_transactions_Fournisseur, string note_Fournisseur) {
            if ((idFournisseur == null)) {
                throw new global::System.ArgumentNullException("idFournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(idFournisseur));
            }
            if ((nom_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("nom_Fournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nom_Fournisseur));
            }
            if ((prenom_Fournisseur == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(prenom_Fournisseur));
            }
            if ((adresse_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("adresse_Fournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(adresse_Fournisseur));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(codePostal_Fournisseur));
            if ((ville_fournisseur == null)) {
                throw new global::System.ArgumentNullException("ville_fournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ville_fournisseur));
            }
            if ((pays_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("pays_Fournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(pays_Fournisseur));
            }
            if ((tel_Fournisseur.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(tel_Fournisseur.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((telmobile_Fournisseur.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(telmobile_Fournisseur.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((email_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("email_Fournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(email_Fournisseur));
            }
            if ((fax_Fournisseur.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(fax_Fournisseur.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((siteInternet_Fournisseur == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(siteInternet_Fournisseur));
            }
            if ((etat_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("etat_Fournisseur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(etat_Fournisseur));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(nb_transactions_Fournisseur));
            if ((note_Fournisseur == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(note_Fournisseur));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string idFournisseur, 
                    string nom_Fournisseur, 
                    string prenom_Fournisseur, 
                    string adresse_Fournisseur, 
                    decimal codePostal_Fournisseur, 
                    string ville_fournisseur, 
                    string pays_Fournisseur, 
                    global::System.Nullable<decimal> tel_Fournisseur, 
                    global::System.Nullable<decimal> telmobile_Fournisseur, 
                    string email_Fournisseur, 
                    global::System.Nullable<decimal> fax_Fournisseur, 
                    string siteInternet_Fournisseur, 
                    string etat_Fournisseur, 
                    decimal nb_transactions_Fournisseur, 
                    string note_Fournisseur, 
                    string Original_idFournisseur, 
                    string Original_nom_Fournisseur, 
                    string Original_prenom_Fournisseur, 
                    string Original_adresse_Fournisseur, 
                    decimal Original_codePostal_Fournisseur, 
                    string Original_ville_fournisseur, 
                    string Original_pays_Fournisseur, 
                    global::System.Nullable<decimal> Original_tel_Fournisseur, 
                    global::System.Nullable<decimal> Original_telmobile_Fournisseur, 
                    string Original_email_Fournisseur, 
                    global::System.Nullable<decimal> Original_fax_Fournisseur, 
                    string Original_siteInternet_Fournisseur, 
                    string Original_etat_Fournisseur, 
                    decimal Original_nb_transactions_Fournisseur, 
                    string Original_note_Fournisseur) {
            if ((idFournisseur == null)) {
                throw new global::System.ArgumentNullException("idFournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(idFournisseur));
            }
            if ((nom_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("nom_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nom_Fournisseur));
            }
            if ((prenom_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(prenom_Fournisseur));
            }
            if ((adresse_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("adresse_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(adresse_Fournisseur));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(codePostal_Fournisseur));
            if ((ville_fournisseur == null)) {
                throw new global::System.ArgumentNullException("ville_fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ville_fournisseur));
            }
            if ((pays_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("pays_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(pays_Fournisseur));
            }
            if ((tel_Fournisseur.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(tel_Fournisseur.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((telmobile_Fournisseur.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(telmobile_Fournisseur.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((email_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("email_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(email_Fournisseur));
            }
            if ((fax_Fournisseur.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(fax_Fournisseur.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((siteInternet_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(siteInternet_Fournisseur));
            }
            if ((etat_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("etat_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(etat_Fournisseur));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(nb_transactions_Fournisseur));
            if ((note_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(note_Fournisseur));
            }
            if ((Original_idFournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_idFournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_idFournisseur));
            }
            if ((Original_nom_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_nom_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_nom_Fournisseur));
            }
            if ((Original_prenom_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_prenom_Fournisseur));
            }
            if ((Original_adresse_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_adresse_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_adresse_Fournisseur));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_codePostal_Fournisseur));
            if ((Original_ville_fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_ville_fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ville_fournisseur));
            }
            if ((Original_pays_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_pays_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_pays_Fournisseur));
            }
            if ((Original_tel_Fournisseur.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_tel_Fournisseur.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_telmobile_Fournisseur.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_telmobile_Fournisseur.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_email_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_email_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_email_Fournisseur));
            }
            if ((Original_fax_Fournisseur.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_fax_Fournisseur.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_siteInternet_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_siteInternet_Fournisseur));
            }
            if ((Original_etat_Fournisseur == null)) {
                throw new global::System.ArgumentNullException("Original_etat_Fournisseur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_etat_Fournisseur));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_nb_transactions_Fournisseur));
            if ((Original_note_Fournisseur == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_note_Fournisseur));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nom_Fournisseur, 
                    string prenom_Fournisseur, 
                    string adresse_Fournisseur, 
                    decimal codePostal_Fournisseur, 
                    string ville_fournisseur, 
                    string pays_Fournisseur, 
                    global::System.Nullable<decimal> tel_Fournisseur, 
                    global::System.Nullable<decimal> telmobile_Fournisseur, 
                    string email_Fournisseur, 
                    global::System.Nullable<decimal> fax_Fournisseur, 
                    string siteInternet_Fournisseur, 
                    string etat_Fournisseur, 
                    decimal nb_transactions_Fournisseur, 
                    string note_Fournisseur, 
                    string Original_idFournisseur, 
                    string Original_nom_Fournisseur, 
                    string Original_prenom_Fournisseur, 
                    string Original_adresse_Fournisseur, 
                    decimal Original_codePostal_Fournisseur, 
                    string Original_ville_fournisseur, 
                    string Original_pays_Fournisseur, 
                    global::System.Nullable<decimal> Original_tel_Fournisseur, 
                    global::System.Nullable<decimal> Original_telmobile_Fournisseur, 
                    string Original_email_Fournisseur, 
                    global::System.Nullable<decimal> Original_fax_Fournisseur, 
                    string Original_siteInternet_Fournisseur, 
                    string Original_etat_Fournisseur, 
                    decimal Original_nb_transactions_Fournisseur, 
                    string Original_note_Fournisseur) {
            return this.Update(Original_idFournisseur, nom_Fournisseur, prenom_Fournisseur, adresse_Fournisseur, codePostal_Fournisseur, ville_fournisseur, pays_Fournisseur, tel_Fournisseur, telmobile_Fournisseur, email_Fournisseur, fax_Fournisseur, siteInternet_Fournisseur, etat_Fournisseur, nb_transactions_Fournisseur, note_Fournisseur, Original_idFournisseur, Original_nom_Fournisseur, Original_prenom_Fournisseur, Original_adresse_Fournisseur, Original_codePostal_Fournisseur, Original_ville_fournisseur, Original_pays_Fournisseur, Original_tel_Fournisseur, Original_telmobile_Fournisseur, Original_email_Fournisseur, Original_fax_Fournisseur, Original_siteInternet_Fournisseur, Original_etat_Fournisseur, Original_nb_transactions_Fournisseur, Original_note_Fournisseur);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lignecommandeachatTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public lignecommandeachatTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lignecommandeachat";
            tableMapping.ColumnMappings.Add("num_ligne_commande", "num_ligne_commande");
            tableMapping.ColumnMappings.Add("cma_code", "cma_code");
            tableMapping.ColumnMappings.Add("pr_code", "pr_code");
            tableMapping.ColumnMappings.Add("pr_quantite", "pr_quantite");
            tableMapping.ColumnMappings.Add("pr_montant", "pr_montant");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `lignecommandeachat` WHERE ((`num_ligne_commande` = @Original_num_lig" +
                "ne_commande) AND (`cma_code` = @Original_cma_code) AND (`pr_code` = @Original_pr" +
                "_code) AND (`pr_quantite` = @Original_pr_quantite) AND (`pr_montant` = @Original" +
                "_pr_montant))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `lignecommandeachat` (`num_ligne_commande`, `cma_code`, `pr_code`, `p" +
                "r_quantite`, `pr_montant`) VALUES (@num_ligne_commande, @cma_code, @pr_code, @pr" +
                "_quantite, @pr_montant)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `lignecommandeachat` SET `num_ligne_commande` = @num_ligne_commande, `cma_code` = @cma_code, `pr_code` = @pr_code, `pr_quantite` = @pr_quantite, `pr_montant` = @pr_montant WHERE ((`num_ligne_commande` = @Original_num_ligne_commande) AND (`cma_code` = @Original_cma_code) AND (`pr_code` = @Original_pr_code) AND (`pr_quantite` = @Original_pr_quantite) AND (`pr_montant` = @Original_pr_montant))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cma_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cma_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `num_ligne_commande`, `cma_code`, `pr_code`, `pr_quantite`, `pr_montant` F" +
                "ROM `lignecommandeachat`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.lignecommandeachatDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.lignecommandeachatDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.lignecommandeachatDataTable dataTable = new gestioncommercialeDataSet.lignecommandeachatDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.lignecommandeachatDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "lignecommandeachat");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_num_ligne_commande, string Original_cma_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_num_ligne_commande));
            if ((Original_cma_code == null)) {
                throw new global::System.ArgumentNullException("Original_cma_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cma_code));
            }
            if ((Original_pr_code == null)) {
                throw new global::System.ArgumentNullException("Original_pr_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pr_code));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_pr_quantite));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int num_ligne_commande, string cma_code, string pr_code, int pr_quantite, double pr_montant) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(num_ligne_commande));
            if ((cma_code == null)) {
                throw new global::System.ArgumentNullException("cma_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cma_code));
            }
            if ((pr_code == null)) {
                throw new global::System.ArgumentNullException("pr_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(pr_code));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(pr_quantite));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int num_ligne_commande, string cma_code, string pr_code, int pr_quantite, double pr_montant, int Original_num_ligne_commande, string Original_cma_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(num_ligne_commande));
            if ((cma_code == null)) {
                throw new global::System.ArgumentNullException("cma_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cma_code));
            }
            if ((pr_code == null)) {
                throw new global::System.ArgumentNullException("pr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(pr_code));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(pr_quantite));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(pr_montant));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_num_ligne_commande));
            if ((Original_cma_code == null)) {
                throw new global::System.ArgumentNullException("Original_cma_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_cma_code));
            }
            if ((Original_pr_code == null)) {
                throw new global::System.ArgumentNullException("Original_pr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_pr_code));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_pr_quantite));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cma_code, string pr_code, int pr_quantite, double pr_montant, int Original_num_ligne_commande, string Original_cma_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            return this.Update(Original_num_ligne_commande, cma_code, pr_code, pr_quantite, pr_montant, Original_num_ligne_commande, Original_cma_code, Original_pr_code, Original_pr_quantite, Original_pr_montant);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lignecommandeventeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public lignecommandeventeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lignecommandevente";
            tableMapping.ColumnMappings.Add("num_ligne_commande", "num_ligne_commande");
            tableMapping.ColumnMappings.Add("cmv_code", "cmv_code");
            tableMapping.ColumnMappings.Add("pr_code", "pr_code");
            tableMapping.ColumnMappings.Add("pr_quantite", "pr_quantite");
            tableMapping.ColumnMappings.Add("pr_montant", "pr_montant");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `lignecommandevente` WHERE ((`num_ligne_commande` = @Original_num_lig" +
                "ne_commande) AND (`cmv_code` = @Original_cmv_code) AND (`pr_code` = @Original_pr" +
                "_code) AND (`pr_quantite` = @Original_pr_quantite) AND (`pr_montant` = @Original" +
                "_pr_montant))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `lignecommandevente` (`num_ligne_commande`, `cmv_code`, `pr_code`, `p" +
                "r_quantite`, `pr_montant`) VALUES (@num_ligne_commande, @cmv_code, @pr_code, @pr" +
                "_quantite, @pr_montant)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `lignecommandevente` SET `num_ligne_commande` = @num_ligne_commande, `cmv_code` = @cmv_code, `pr_code` = @pr_code, `pr_quantite` = @pr_quantite, `pr_montant` = @pr_montant WHERE ((`num_ligne_commande` = @Original_num_ligne_commande) AND (`cmv_code` = @Original_cmv_code) AND (`pr_code` = @Original_pr_code) AND (`pr_quantite` = @Original_pr_quantite) AND (`pr_montant` = @Original_pr_montant))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_ligne_commande";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_commande";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cmv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cmv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `num_ligne_commande`, `cmv_code`, `pr_code`, `pr_quantite`, `pr_montant` F" +
                "ROM `lignecommandevente`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.lignecommandeventeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.lignecommandeventeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.lignecommandeventeDataTable dataTable = new gestioncommercialeDataSet.lignecommandeventeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.lignecommandeventeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "lignecommandevente");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_num_ligne_commande, string Original_cmv_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_num_ligne_commande));
            if ((Original_cmv_code == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cmv_code));
            }
            if ((Original_pr_code == null)) {
                throw new global::System.ArgumentNullException("Original_pr_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pr_code));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_pr_quantite));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int num_ligne_commande, string cmv_code, string pr_code, int pr_quantite, double pr_montant) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(num_ligne_commande));
            if ((cmv_code == null)) {
                throw new global::System.ArgumentNullException("cmv_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cmv_code));
            }
            if ((pr_code == null)) {
                throw new global::System.ArgumentNullException("pr_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(pr_code));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(pr_quantite));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int num_ligne_commande, string cmv_code, string pr_code, int pr_quantite, double pr_montant, int Original_num_ligne_commande, string Original_cmv_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(num_ligne_commande));
            if ((cmv_code == null)) {
                throw new global::System.ArgumentNullException("cmv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cmv_code));
            }
            if ((pr_code == null)) {
                throw new global::System.ArgumentNullException("pr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(pr_code));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(pr_quantite));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(pr_montant));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_num_ligne_commande));
            if ((Original_cmv_code == null)) {
                throw new global::System.ArgumentNullException("Original_cmv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_cmv_code));
            }
            if ((Original_pr_code == null)) {
                throw new global::System.ArgumentNullException("Original_pr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_pr_code));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_pr_quantite));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cmv_code, string pr_code, int pr_quantite, double pr_montant, int Original_num_ligne_commande, string Original_cmv_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            return this.Update(Original_num_ligne_commande, cmv_code, pr_code, pr_quantite, pr_montant, Original_num_ligne_commande, Original_cmv_code, Original_pr_code, Original_pr_quantite, Original_pr_montant);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lignedevisTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public lignedevisTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lignedevis";
            tableMapping.ColumnMappings.Add("num_ligne_devis", "num_ligne_devis");
            tableMapping.ColumnMappings.Add("dv_code", "dv_code");
            tableMapping.ColumnMappings.Add("pr_code", "pr_code");
            tableMapping.ColumnMappings.Add("pr_quantite", "pr_quantite");
            tableMapping.ColumnMappings.Add("pr_montant", "pr_montant");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `lignedevis` WHERE ((`num_ligne_devis` = @Original_num_ligne_devis) A" +
                "ND (`dv_code` = @Original_dv_code) AND (`pr_code` = @Original_pr_code) AND (`pr_" +
                "quantite` = @Original_pr_quantite) AND (`pr_montant` = @Original_pr_montant))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_ligne_devis";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_devis";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `lignedevis` (`num_ligne_devis`, `dv_code`, `pr_code`, `pr_quantite`," +
                " `pr_montant`) VALUES (@num_ligne_devis, @dv_code, @pr_code, @pr_quantite, @pr_m" +
                "ontant)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_ligne_devis";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_devis";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `lignedevis` SET `num_ligne_devis` = @num_ligne_devis, `dv_code` = @dv_code, `pr_code` = @pr_code, `pr_quantite` = @pr_quantite, `pr_montant` = @pr_montant WHERE ((`num_ligne_devis` = @Original_num_ligne_devis) AND (`dv_code` = @Original_dv_code) AND (`pr_code` = @Original_pr_code) AND (`pr_quantite` = @Original_pr_quantite) AND (`pr_montant` = @Original_pr_montant))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@num_ligne_devis";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_devis";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_num_ligne_devis";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "num_ligne_devis";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dv_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dv_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pr_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_quantite";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pr_quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pr_montant";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pr_montant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `num_ligne_devis`, `dv_code`, `pr_code`, `pr_quantite`, `pr_montant` FROM " +
                "`lignedevis`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.lignedevisDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.lignedevisDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.lignedevisDataTable dataTable = new gestioncommercialeDataSet.lignedevisDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.lignedevisDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "lignedevis");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_num_ligne_devis, string Original_dv_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_num_ligne_devis));
            if ((Original_dv_code == null)) {
                throw new global::System.ArgumentNullException("Original_dv_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dv_code));
            }
            if ((Original_pr_code == null)) {
                throw new global::System.ArgumentNullException("Original_pr_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pr_code));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_pr_quantite));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int num_ligne_devis, string dv_code, string pr_code, int pr_quantite, double pr_montant) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(num_ligne_devis));
            if ((dv_code == null)) {
                throw new global::System.ArgumentNullException("dv_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dv_code));
            }
            if ((pr_code == null)) {
                throw new global::System.ArgumentNullException("pr_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(pr_code));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(pr_quantite));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int num_ligne_devis, string dv_code, string pr_code, int pr_quantite, double pr_montant, int Original_num_ligne_devis, string Original_dv_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(num_ligne_devis));
            if ((dv_code == null)) {
                throw new global::System.ArgumentNullException("dv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dv_code));
            }
            if ((pr_code == null)) {
                throw new global::System.ArgumentNullException("pr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(pr_code));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(pr_quantite));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(pr_montant));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_num_ligne_devis));
            if ((Original_dv_code == null)) {
                throw new global::System.ArgumentNullException("Original_dv_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_dv_code));
            }
            if ((Original_pr_code == null)) {
                throw new global::System.ArgumentNullException("Original_pr_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_pr_code));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_pr_quantite));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_pr_montant));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string dv_code, string pr_code, int pr_quantite, double pr_montant, int Original_num_ligne_devis, string Original_dv_code, string Original_pr_code, int Original_pr_quantite, double Original_pr_montant) {
            return this.Update(Original_num_ligne_devis, dv_code, pr_code, pr_quantite, pr_montant, Original_num_ligne_devis, Original_dv_code, Original_pr_code, Original_pr_quantite, Original_pr_montant);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lignefactureTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public lignefactureTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lignefacture";
            tableMapping.ColumnMappings.Add("numero_ligneFacture", "numero_ligneFacture");
            tableMapping.ColumnMappings.Add("Produit_codeProduit", "Produit_codeProduit");
            tableMapping.ColumnMappings.Add("quantite", "quantite");
            tableMapping.ColumnMappings.Add("montant_Produit", "montant_Produit");
            tableMapping.ColumnMappings.Add("Facture_numeroFacture", "Facture_numeroFacture");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `lignefacture` WHERE ((`numero_ligneFacture` = @Original_numero_ligneFacture) AND (`Produit_codeProduit` = @Original_Produit_codeProduit) AND (`quantite` = @Original_quantite) AND (`montant_Produit` = @Original_montant_Produit) AND (`Facture_numeroFacture` = @Original_Facture_numeroFacture))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_numero_ligneFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "numero_ligneFacture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Produit_codeProduit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Produit_codeProduit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_quantite";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_montant_Produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montant_Produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Facture_numeroFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Facture_numeroFacture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `lignefacture` (`numero_ligneFacture`, `Produit_codeProduit`, `quanti" +
                "te`, `montant_Produit`, `Facture_numeroFacture`) VALUES (@numero_ligneFacture, @" +
                "Produit_codeProduit, @quantite, @montant_Produit, @Facture_numeroFacture)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@numero_ligneFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "numero_ligneFacture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Produit_codeProduit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Produit_codeProduit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@quantite";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "quantite";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@montant_Produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montant_Produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Facture_numeroFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Facture_numeroFacture";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `lignefacture` SET `numero_ligneFacture` = @numero_ligneFacture, `Produit_codeProduit` = @Produit_codeProduit, `quantite` = @quantite, `montant_Produit` = @montant_Produit, `Facture_numeroFacture` = @Facture_numeroFacture WHERE ((`numero_ligneFacture` = @Original_numero_ligneFacture) AND (`Produit_codeProduit` = @Original_Produit_codeProduit) AND (`quantite` = @Original_quantite) AND (`montant_Produit` = @Original_montant_Produit) AND (`Facture_numeroFacture` = @Original_Facture_numeroFacture))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@numero_ligneFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "numero_ligneFacture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Produit_codeProduit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Produit_codeProduit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@quantite";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "quantite";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@montant_Produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montant_Produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Facture_numeroFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Facture_numeroFacture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_numero_ligneFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "numero_ligneFacture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Produit_codeProduit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Produit_codeProduit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_quantite";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "quantite";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_montant_Produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "montant_Produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Facture_numeroFacture";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Facture_numeroFacture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `numero_ligneFacture`, `Produit_codeProduit`, `quantite`, `montant_Produit" +
                "`, `Facture_numeroFacture` FROM `lignefacture`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.lignefactureDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.lignefactureDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.lignefactureDataTable dataTable = new gestioncommercialeDataSet.lignefactureDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.lignefactureDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "lignefacture");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_numero_ligneFacture, string Original_Produit_codeProduit, double Original_quantite, double Original_montant_Produit, int Original_Facture_numeroFacture) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_numero_ligneFacture));
            if ((Original_Produit_codeProduit == null)) {
                throw new global::System.ArgumentNullException("Original_Produit_codeProduit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Produit_codeProduit));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_quantite));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_montant_Produit));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Facture_numeroFacture));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int numero_ligneFacture, string Produit_codeProduit, double quantite, double montant_Produit, int Facture_numeroFacture) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(numero_ligneFacture));
            if ((Produit_codeProduit == null)) {
                throw new global::System.ArgumentNullException("Produit_codeProduit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Produit_codeProduit));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(quantite));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(montant_Produit));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Facture_numeroFacture));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int numero_ligneFacture, string Produit_codeProduit, double quantite, double montant_Produit, int Facture_numeroFacture, int Original_numero_ligneFacture, string Original_Produit_codeProduit, double Original_quantite, double Original_montant_Produit, int Original_Facture_numeroFacture) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(numero_ligneFacture));
            if ((Produit_codeProduit == null)) {
                throw new global::System.ArgumentNullException("Produit_codeProduit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Produit_codeProduit));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(quantite));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(montant_Produit));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Facture_numeroFacture));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_numero_ligneFacture));
            if ((Original_Produit_codeProduit == null)) {
                throw new global::System.ArgumentNullException("Original_Produit_codeProduit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Produit_codeProduit));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Original_quantite));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_montant_Produit));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Facture_numeroFacture));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Produit_codeProduit, double quantite, double montant_Produit, int Facture_numeroFacture, int Original_numero_ligneFacture, string Original_Produit_codeProduit, double Original_quantite, double Original_montant_Produit, int Original_Facture_numeroFacture) {
            return this.Update(Original_numero_ligneFacture, Produit_codeProduit, quantite, montant_Produit, Facture_numeroFacture, Original_numero_ligneFacture, Original_Produit_codeProduit, Original_quantite, Original_montant_Produit, Original_Facture_numeroFacture);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class produitTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public produitTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "produit";
            tableMapping.ColumnMappings.Add("code_produit", "code_produit");
            tableMapping.ColumnMappings.Add("libelle_produit", "libelle_produit");
            tableMapping.ColumnMappings.Add("designation_produit", "designation_produit");
            tableMapping.ColumnMappings.Add("unite_produit", "unite_produit");
            tableMapping.ColumnMappings.Add("fabricant_produit", "fabricant_produit");
            tableMapping.ColumnMappings.Add("ref_fabricant_produit", "ref_fabricant_produit");
            tableMapping.ColumnMappings.Add("poids_produit", "poids_produit");
            tableMapping.ColumnMappings.Add("volume_produit", "volume_produit");
            tableMapping.ColumnMappings.Add("Famille_idFamille", "Famille_idFamille");
            tableMapping.ColumnMappings.Add("Categorie_idCategorie", "Categorie_idCategorie");
            tableMapping.ColumnMappings.Add("produit_critique", "produit_critique");
            tableMapping.ColumnMappings.Add("stock_min_produit", "stock_min_produit");
            tableMapping.ColumnMappings.Add("stock_max_produit", "stock_max_produit");
            tableMapping.ColumnMappings.Add("stock_securite_produit", "stock_securite_produit");
            tableMapping.ColumnMappings.Add("stock_disponible_produit", "stock_disponible_produit");
            tableMapping.ColumnMappings.Add("delai_approv_produit", "delai_approv_produit");
            tableMapping.ColumnMappings.Add("magasin_produit", "magasin_produit");
            tableMapping.ColumnMappings.Add("emplacement_produit", "emplacement_produit");
            tableMapping.ColumnMappings.Add("duree_conservation", "duree_conservation");
            tableMapping.ColumnMappings.Add("prix_moyen_produit", "prix_moyen_produit");
            tableMapping.ColumnMappings.Add("prix_vente_produit", "prix_vente_produit");
            tableMapping.ColumnMappings.Add("TVA_produit", "TVA_produit");
            tableMapping.ColumnMappings.Add("remise_produit", "remise_produit");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `produit` WHERE ((`code_produit` = @Original_code_produit) AND (`libe" +
                "lle_produit` = @Original_libelle_produit) AND (`designation_produit` = @Original" +
                "_designation_produit) AND (`unite_produit` = @Original_unite_produit) AND (`fabr" +
                "icant_produit` = @Original_fabricant_produit) AND (`ref_fabricant_produit` = @Or" +
                "iginal_ref_fabricant_produit) AND (`poids_produit` = @Original_poids_produit) AN" +
                "D (`volume_produit` = @Original_volume_produit) AND (`Famille_idFamille` = @Orig" +
                "inal_Famille_idFamille) AND (`Categorie_idCategorie` = @Original_Categorie_idCat" +
                "egorie) AND (`produit_critique` = @Original_produit_critique) AND (`stock_min_pr" +
                "oduit` = @Original_stock_min_produit) AND (`stock_max_produit` = @Original_stock" +
                "_max_produit) AND (`stock_securite_produit` = @Original_stock_securite_produit) " +
                "AND (`stock_disponible_produit` = @Original_stock_disponible_produit) AND ((@IsN" +
                "ull_delai_approv_produit = 1 AND `delai_approv_produit` IS NULL) OR (`delai_appr" +
                "ov_produit` = @Original_delai_approv_produit)) AND ((@IsNull_magasin_produit = 1" +
                " AND `magasin_produit` IS NULL) OR (`magasin_produit` = @Original_magasin_produi" +
                "t)) AND ((@IsNull_emplacement_produit = 1 AND `emplacement_produit` IS NULL) OR " +
                "(`emplacement_produit` = @Original_emplacement_produit)) AND ((@IsNull_duree_con" +
                "servation = 1 AND `duree_conservation` IS NULL) OR (`duree_conservation` = @Orig" +
                "inal_duree_conservation)) AND (`prix_moyen_produit` = @Original_prix_moyen_produ" +
                "it) AND (`prix_vente_produit` = @Original_prix_vente_produit) AND ((@IsNull_TVA_" +
                "produit = 1 AND `TVA_produit` IS NULL) OR (`TVA_produit` = @Original_TVA_produit" +
                ")) AND ((@IsNull_remise_produit = 1 AND `remise_produit` IS NULL) OR (`remise_pr" +
                "oduit` = @Original_remise_produit)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_code_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_libelle_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "libelle_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_designation_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designation_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unite_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unite_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fabricant_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ref_fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_fabricant_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_poids_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "poids_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_volume_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "volume_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Famille_idFamille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Famille_idFamille";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Categorie_idCategorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Categorie_idCategorie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_produit_critique";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "produit_critique";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_min_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_min_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_max_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_max_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_securite_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_securite_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_disponible_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_disponible_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_delai_approv_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "delai_approv_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_delai_approv_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "delai_approv_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_magasin_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "magasin_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_magasin_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "magasin_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_emplacement_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "emplacement_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_emplacement_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "emplacement_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_duree_conservation";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "duree_conservation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_duree_conservation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "duree_conservation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prix_moyen_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_moyen_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prix_vente_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_vente_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_TVA_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TVA_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TVA_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TVA_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remise_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remise_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remise_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `produit` (`code_produit`, `libelle_produit`, `designation_produit`, `unite_produit`, `fabricant_produit`, `ref_fabricant_produit`, `poids_produit`, `volume_produit`, `Famille_idFamille`, `Categorie_idCategorie`, `produit_critique`, `stock_min_produit`, `stock_max_produit`, `stock_securite_produit`, `stock_disponible_produit`, `delai_approv_produit`, `magasin_produit`, `emplacement_produit`, `duree_conservation`, `prix_moyen_produit`, `prix_vente_produit`, `TVA_produit`, `remise_produit`) VALUES (@code_produit, @libelle_produit, @designation_produit, @unite_produit, @fabricant_produit, @ref_fabricant_produit, @poids_produit, @volume_produit, @Famille_idFamille, @Categorie_idCategorie, @produit_critique, @stock_min_produit, @stock_max_produit, @stock_securite_produit, @stock_disponible_produit, @delai_approv_produit, @magasin_produit, @emplacement_produit, @duree_conservation, @prix_moyen_produit, @prix_vente_produit, @TVA_produit, @remise_produit)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@code_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@libelle_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "libelle_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@designation_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designation_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unite_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unite_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fabricant_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ref_fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_fabricant_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@poids_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "poids_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@volume_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "volume_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Famille_idFamille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Famille_idFamille";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Categorie_idCategorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Categorie_idCategorie";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@produit_critique";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "produit_critique";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_min_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_min_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_max_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_max_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_securite_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_securite_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_disponible_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_disponible_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@delai_approv_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "delai_approv_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@magasin_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "magasin_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@emplacement_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "emplacement_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@duree_conservation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "duree_conservation";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prix_moyen_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_moyen_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prix_vente_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_vente_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TVA_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TVA_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remise_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_produit";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `produit` SET `code_produit` = @code_produit, `libelle_produit` = @libelle" +
                "_produit, `designation_produit` = @designation_produit, `unite_produit` = @unite" +
                "_produit, `fabricant_produit` = @fabricant_produit, `ref_fabricant_produit` = @r" +
                "ef_fabricant_produit, `poids_produit` = @poids_produit, `volume_produit` = @volu" +
                "me_produit, `Famille_idFamille` = @Famille_idFamille, `Categorie_idCategorie` = " +
                "@Categorie_idCategorie, `produit_critique` = @produit_critique, `stock_min_produ" +
                "it` = @stock_min_produit, `stock_max_produit` = @stock_max_produit, `stock_secur" +
                "ite_produit` = @stock_securite_produit, `stock_disponible_produit` = @stock_disp" +
                "onible_produit, `delai_approv_produit` = @delai_approv_produit, `magasin_produit" +
                "` = @magasin_produit, `emplacement_produit` = @emplacement_produit, `duree_conse" +
                "rvation` = @duree_conservation, `prix_moyen_produit` = @prix_moyen_produit, `pri" +
                "x_vente_produit` = @prix_vente_produit, `TVA_produit` = @TVA_produit, `remise_pr" +
                "oduit` = @remise_produit WHERE ((`code_produit` = @Original_code_produit) AND (`" +
                "libelle_produit` = @Original_libelle_produit) AND (`designation_produit` = @Orig" +
                "inal_designation_produit) AND (`unite_produit` = @Original_unite_produit) AND (`" +
                "fabricant_produit` = @Original_fabricant_produit) AND (`ref_fabricant_produit` =" +
                " @Original_ref_fabricant_produit) AND (`poids_produit` = @Original_poids_produit" +
                ") AND (`volume_produit` = @Original_volume_produit) AND (`Famille_idFamille` = @" +
                "Original_Famille_idFamille) AND (`Categorie_idCategorie` = @Original_Categorie_i" +
                "dCategorie) AND (`produit_critique` = @Original_produit_critique) AND (`stock_mi" +
                "n_produit` = @Original_stock_min_produit) AND (`stock_max_produit` = @Original_s" +
                "tock_max_produit) AND (`stock_securite_produit` = @Original_stock_securite_produ" +
                "it) AND (`stock_disponible_produit` = @Original_stock_disponible_produit) AND ((" +
                "@IsNull_delai_approv_produit = 1 AND `delai_approv_produit` IS NULL) OR (`delai_" +
                "approv_produit` = @Original_delai_approv_produit)) AND ((@IsNull_magasin_produit" +
                " = 1 AND `magasin_produit` IS NULL) OR (`magasin_produit` = @Original_magasin_pr" +
                "oduit)) AND ((@IsNull_emplacement_produit = 1 AND `emplacement_produit` IS NULL)" +
                " OR (`emplacement_produit` = @Original_emplacement_produit)) AND ((@IsNull_duree" +
                "_conservation = 1 AND `duree_conservation` IS NULL) OR (`duree_conservation` = @" +
                "Original_duree_conservation)) AND (`prix_moyen_produit` = @Original_prix_moyen_p" +
                "roduit) AND (`prix_vente_produit` = @Original_prix_vente_produit) AND ((@IsNull_" +
                "TVA_produit = 1 AND `TVA_produit` IS NULL) OR (`TVA_produit` = @Original_TVA_pro" +
                "duit)) AND ((@IsNull_remise_produit = 1 AND `remise_produit` IS NULL) OR (`remis" +
                "e_produit` = @Original_remise_produit)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@code_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@libelle_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "libelle_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@designation_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designation_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@unite_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unite_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fabricant_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ref_fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_fabricant_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@poids_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "poids_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@volume_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "volume_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Famille_idFamille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Famille_idFamille";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Categorie_idCategorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Categorie_idCategorie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@produit_critique";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "produit_critique";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_min_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_min_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_max_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_max_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_securite_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_securite_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@stock_disponible_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_disponible_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@delai_approv_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "delai_approv_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@magasin_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "magasin_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@emplacement_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "emplacement_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@duree_conservation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "duree_conservation";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prix_moyen_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_moyen_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prix_vente_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_vente_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TVA_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TVA_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remise_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_produit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_code_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "code_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_libelle_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "libelle_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_designation_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "designation_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_unite_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "unite_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "fabricant_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ref_fabricant_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_fabricant_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_poids_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "poids_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_volume_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "volume_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Famille_idFamille";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Famille_idFamille";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Categorie_idCategorie";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Categorie_idCategorie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_produit_critique";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "produit_critique";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_min_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_min_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_max_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_max_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_securite_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_securite_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_stock_disponible_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "stock_disponible_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_delai_approv_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "delai_approv_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_delai_approv_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "delai_approv_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_magasin_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "magasin_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_magasin_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "magasin_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_emplacement_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "emplacement_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_emplacement_produit";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "emplacement_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_duree_conservation";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "duree_conservation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_duree_conservation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "duree_conservation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prix_moyen_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_moyen_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prix_vente_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "prix_vente_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_TVA_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TVA_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TVA_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TVA_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remise_produit";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remise_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remise_produit";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "remise_produit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::ApplicationGestionCommerciale.Properties.Settings.Default.gestioncommercialeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `code_produit`, `libelle_produit`, `designation_produit`, `unite_produit`, `fabricant_produit`, `ref_fabricant_produit`, `poids_produit`, `volume_produit`, `Famille_idFamille`, `Categorie_idCategorie`, `produit_critique`, `stock_min_produit`, `stock_max_produit`, `stock_securite_produit`, `stock_disponible_produit`, `delai_approv_produit`, `magasin_produit`, `emplacement_produit`, `duree_conservation`, `prix_moyen_produit`, `prix_vente_produit`, `TVA_produit`, `remise_produit` FROM `produit`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gestioncommercialeDataSet.produitDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gestioncommercialeDataSet.produitDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gestioncommercialeDataSet.produitDataTable dataTable = new gestioncommercialeDataSet.produitDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet.produitDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gestioncommercialeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "produit");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_code_produit, 
                    string Original_libelle_produit, 
                    string Original_designation_produit, 
                    string Original_unite_produit, 
                    string Original_fabricant_produit, 
                    string Original_ref_fabricant_produit, 
                    string Original_poids_produit, 
                    string Original_volume_produit, 
                    string Original_Famille_idFamille, 
                    string Original_Categorie_idCategorie, 
                    string Original_produit_critique, 
                    int Original_stock_min_produit, 
                    int Original_stock_max_produit, 
                    int Original_stock_securite_produit, 
                    int Original_stock_disponible_produit, 
                    string Original_delai_approv_produit, 
                    string Original_magasin_produit, 
                    string Original_emplacement_produit, 
                    string Original_duree_conservation, 
                    double Original_prix_moyen_produit, 
                    double Original_prix_vente_produit, 
                    global::System.Nullable<double> Original_TVA_produit, 
                    global::System.Nullable<double> Original_remise_produit) {
            if ((Original_code_produit == null)) {
                throw new global::System.ArgumentNullException("Original_code_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_code_produit));
            }
            if ((Original_libelle_produit == null)) {
                throw new global::System.ArgumentNullException("Original_libelle_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_libelle_produit));
            }
            if ((Original_designation_produit == null)) {
                throw new global::System.ArgumentNullException("Original_designation_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_designation_produit));
            }
            if ((Original_unite_produit == null)) {
                throw new global::System.ArgumentNullException("Original_unite_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_unite_produit));
            }
            if ((Original_fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("Original_fabricant_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_fabricant_produit));
            }
            if ((Original_ref_fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("Original_ref_fabricant_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ref_fabricant_produit));
            }
            if ((Original_poids_produit == null)) {
                throw new global::System.ArgumentNullException("Original_poids_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_poids_produit));
            }
            if ((Original_volume_produit == null)) {
                throw new global::System.ArgumentNullException("Original_volume_produit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_volume_produit));
            }
            if ((Original_Famille_idFamille == null)) {
                throw new global::System.ArgumentNullException("Original_Famille_idFamille");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Famille_idFamille));
            }
            if ((Original_Categorie_idCategorie == null)) {
                throw new global::System.ArgumentNullException("Original_Categorie_idCategorie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Categorie_idCategorie));
            }
            if ((Original_produit_critique == null)) {
                throw new global::System.ArgumentNullException("Original_produit_critique");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_produit_critique));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_stock_min_produit));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_stock_max_produit));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_stock_securite_produit));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_stock_disponible_produit));
            if ((Original_delai_approv_produit == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_delai_approv_produit));
            }
            if ((Original_magasin_produit == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_magasin_produit));
            }
            if ((Original_emplacement_produit == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_emplacement_produit));
            }
            if ((Original_duree_conservation == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_duree_conservation));
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_prix_moyen_produit));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_prix_vente_produit));
            if ((Original_TVA_produit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_TVA_produit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_remise_produit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_remise_produit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string code_produit, 
                    string libelle_produit, 
                    string designation_produit, 
                    string unite_produit, 
                    string fabricant_produit, 
                    string ref_fabricant_produit, 
                    string poids_produit, 
                    string volume_produit, 
                    string Famille_idFamille, 
                    string Categorie_idCategorie, 
                    string produit_critique, 
                    int stock_min_produit, 
                    int stock_max_produit, 
                    int stock_securite_produit, 
                    int stock_disponible_produit, 
                    string delai_approv_produit, 
                    string magasin_produit, 
                    string emplacement_produit, 
                    string duree_conservation, 
                    double prix_moyen_produit, 
                    double prix_vente_produit, 
                    global::System.Nullable<double> TVA_produit, 
                    global::System.Nullable<double> remise_produit) {
            if ((code_produit == null)) {
                throw new global::System.ArgumentNullException("code_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(code_produit));
            }
            if ((libelle_produit == null)) {
                throw new global::System.ArgumentNullException("libelle_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(libelle_produit));
            }
            if ((designation_produit == null)) {
                throw new global::System.ArgumentNullException("designation_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(designation_produit));
            }
            if ((unite_produit == null)) {
                throw new global::System.ArgumentNullException("unite_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(unite_produit));
            }
            if ((fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("fabricant_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(fabricant_produit));
            }
            if ((ref_fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("ref_fabricant_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ref_fabricant_produit));
            }
            if ((poids_produit == null)) {
                throw new global::System.ArgumentNullException("poids_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(poids_produit));
            }
            if ((volume_produit == null)) {
                throw new global::System.ArgumentNullException("volume_produit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(volume_produit));
            }
            if ((Famille_idFamille == null)) {
                throw new global::System.ArgumentNullException("Famille_idFamille");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Famille_idFamille));
            }
            if ((Categorie_idCategorie == null)) {
                throw new global::System.ArgumentNullException("Categorie_idCategorie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Categorie_idCategorie));
            }
            if ((produit_critique == null)) {
                throw new global::System.ArgumentNullException("produit_critique");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(produit_critique));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(stock_min_produit));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(stock_max_produit));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(stock_securite_produit));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(stock_disponible_produit));
            if ((delai_approv_produit == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(delai_approv_produit));
            }
            if ((magasin_produit == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(magasin_produit));
            }
            if ((emplacement_produit == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(emplacement_produit));
            }
            if ((duree_conservation == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(duree_conservation));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((double)(prix_moyen_produit));
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(prix_vente_produit));
            if ((TVA_produit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(TVA_produit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((remise_produit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(remise_produit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string code_produit, 
                    string libelle_produit, 
                    string designation_produit, 
                    string unite_produit, 
                    string fabricant_produit, 
                    string ref_fabricant_produit, 
                    string poids_produit, 
                    string volume_produit, 
                    string Famille_idFamille, 
                    string Categorie_idCategorie, 
                    string produit_critique, 
                    int stock_min_produit, 
                    int stock_max_produit, 
                    int stock_securite_produit, 
                    int stock_disponible_produit, 
                    string delai_approv_produit, 
                    string magasin_produit, 
                    string emplacement_produit, 
                    string duree_conservation, 
                    double prix_moyen_produit, 
                    double prix_vente_produit, 
                    global::System.Nullable<double> TVA_produit, 
                    global::System.Nullable<double> remise_produit, 
                    string Original_code_produit, 
                    string Original_libelle_produit, 
                    string Original_designation_produit, 
                    string Original_unite_produit, 
                    string Original_fabricant_produit, 
                    string Original_ref_fabricant_produit, 
                    string Original_poids_produit, 
                    string Original_volume_produit, 
                    string Original_Famille_idFamille, 
                    string Original_Categorie_idCategorie, 
                    string Original_produit_critique, 
                    int Original_stock_min_produit, 
                    int Original_stock_max_produit, 
                    int Original_stock_securite_produit, 
                    int Original_stock_disponible_produit, 
                    string Original_delai_approv_produit, 
                    string Original_magasin_produit, 
                    string Original_emplacement_produit, 
                    string Original_duree_conservation, 
                    double Original_prix_moyen_produit, 
                    double Original_prix_vente_produit, 
                    global::System.Nullable<double> Original_TVA_produit, 
                    global::System.Nullable<double> Original_remise_produit) {
            if ((code_produit == null)) {
                throw new global::System.ArgumentNullException("code_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(code_produit));
            }
            if ((libelle_produit == null)) {
                throw new global::System.ArgumentNullException("libelle_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(libelle_produit));
            }
            if ((designation_produit == null)) {
                throw new global::System.ArgumentNullException("designation_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(designation_produit));
            }
            if ((unite_produit == null)) {
                throw new global::System.ArgumentNullException("unite_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(unite_produit));
            }
            if ((fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("fabricant_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(fabricant_produit));
            }
            if ((ref_fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("ref_fabricant_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ref_fabricant_produit));
            }
            if ((poids_produit == null)) {
                throw new global::System.ArgumentNullException("poids_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(poids_produit));
            }
            if ((volume_produit == null)) {
                throw new global::System.ArgumentNullException("volume_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(volume_produit));
            }
            if ((Famille_idFamille == null)) {
                throw new global::System.ArgumentNullException("Famille_idFamille");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Famille_idFamille));
            }
            if ((Categorie_idCategorie == null)) {
                throw new global::System.ArgumentNullException("Categorie_idCategorie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Categorie_idCategorie));
            }
            if ((produit_critique == null)) {
                throw new global::System.ArgumentNullException("produit_critique");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(produit_critique));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(stock_min_produit));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(stock_max_produit));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(stock_securite_produit));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(stock_disponible_produit));
            if ((delai_approv_produit == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(delai_approv_produit));
            }
            if ((magasin_produit == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(magasin_produit));
            }
            if ((emplacement_produit == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(emplacement_produit));
            }
            if ((duree_conservation == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(duree_conservation));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(prix_moyen_produit));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(prix_vente_produit));
            if ((TVA_produit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(TVA_produit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((remise_produit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(remise_produit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_code_produit == null)) {
                throw new global::System.ArgumentNullException("Original_code_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_code_produit));
            }
            if ((Original_libelle_produit == null)) {
                throw new global::System.ArgumentNullException("Original_libelle_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_libelle_produit));
            }
            if ((Original_designation_produit == null)) {
                throw new global::System.ArgumentNullException("Original_designation_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_designation_produit));
            }
            if ((Original_unite_produit == null)) {
                throw new global::System.ArgumentNullException("Original_unite_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_unite_produit));
            }
            if ((Original_fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("Original_fabricant_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_fabricant_produit));
            }
            if ((Original_ref_fabricant_produit == null)) {
                throw new global::System.ArgumentNullException("Original_ref_fabricant_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ref_fabricant_produit));
            }
            if ((Original_poids_produit == null)) {
                throw new global::System.ArgumentNullException("Original_poids_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_poids_produit));
            }
            if ((Original_volume_produit == null)) {
                throw new global::System.ArgumentNullException("Original_volume_produit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_volume_produit));
            }
            if ((Original_Famille_idFamille == null)) {
                throw new global::System.ArgumentNullException("Original_Famille_idFamille");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Famille_idFamille));
            }
            if ((Original_Categorie_idCategorie == null)) {
                throw new global::System.ArgumentNullException("Original_Categorie_idCategorie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Categorie_idCategorie));
            }
            if ((Original_produit_critique == null)) {
                throw new global::System.ArgumentNullException("Original_produit_critique");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_produit_critique));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_stock_min_produit));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_stock_max_produit));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_stock_securite_produit));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_stock_disponible_produit));
            if ((Original_delai_approv_produit == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_delai_approv_produit));
            }
            if ((Original_magasin_produit == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_magasin_produit));
            }
            if ((Original_emplacement_produit == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_emplacement_produit));
            }
            if ((Original_duree_conservation == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_duree_conservation));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_prix_moyen_produit));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(Original_prix_vente_produit));
            if ((Original_TVA_produit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_TVA_produit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_remise_produit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_remise_produit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string libelle_produit, 
                    string designation_produit, 
                    string unite_produit, 
                    string fabricant_produit, 
                    string ref_fabricant_produit, 
                    string poids_produit, 
                    string volume_produit, 
                    string Famille_idFamille, 
                    string Categorie_idCategorie, 
                    string produit_critique, 
                    int stock_min_produit, 
                    int stock_max_produit, 
                    int stock_securite_produit, 
                    int stock_disponible_produit, 
                    string delai_approv_produit, 
                    string magasin_produit, 
                    string emplacement_produit, 
                    string duree_conservation, 
                    double prix_moyen_produit, 
                    double prix_vente_produit, 
                    global::System.Nullable<double> TVA_produit, 
                    global::System.Nullable<double> remise_produit, 
                    string Original_code_produit, 
                    string Original_libelle_produit, 
                    string Original_designation_produit, 
                    string Original_unite_produit, 
                    string Original_fabricant_produit, 
                    string Original_ref_fabricant_produit, 
                    string Original_poids_produit, 
                    string Original_volume_produit, 
                    string Original_Famille_idFamille, 
                    string Original_Categorie_idCategorie, 
                    string Original_produit_critique, 
                    int Original_stock_min_produit, 
                    int Original_stock_max_produit, 
                    int Original_stock_securite_produit, 
                    int Original_stock_disponible_produit, 
                    string Original_delai_approv_produit, 
                    string Original_magasin_produit, 
                    string Original_emplacement_produit, 
                    string Original_duree_conservation, 
                    double Original_prix_moyen_produit, 
                    double Original_prix_vente_produit, 
                    global::System.Nullable<double> Original_TVA_produit, 
                    global::System.Nullable<double> Original_remise_produit) {
            return this.Update(Original_code_produit, libelle_produit, designation_produit, unite_produit, fabricant_produit, ref_fabricant_produit, poids_produit, volume_produit, Famille_idFamille, Categorie_idCategorie, produit_critique, stock_min_produit, stock_max_produit, stock_securite_produit, stock_disponible_produit, delai_approv_produit, magasin_produit, emplacement_produit, duree_conservation, prix_moyen_produit, prix_vente_produit, TVA_produit, remise_produit, Original_code_produit, Original_libelle_produit, Original_designation_produit, Original_unite_produit, Original_fabricant_produit, Original_ref_fabricant_produit, Original_poids_produit, Original_volume_produit, Original_Famille_idFamille, Original_Categorie_idCategorie, Original_produit_critique, Original_stock_min_produit, Original_stock_max_produit, Original_stock_securite_produit, Original_stock_disponible_produit, Original_delai_approv_produit, Original_magasin_produit, Original_emplacement_produit, Original_duree_conservation, Original_prix_moyen_produit, Original_prix_vente_produit, Original_TVA_produit, Original_remise_produit);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private categorieTableAdapter _categorieTableAdapter;
        
        private clientTableAdapter _clientTableAdapter;
        
        private commandeachatTableAdapter _commandeachatTableAdapter;
        
        private commandeventeTableAdapter _commandeventeTableAdapter;
        
        private devisTableAdapter _devisTableAdapter;
        
        private factureTableAdapter _factureTableAdapter;
        
        private familleTableAdapter _familleTableAdapter;
        
        private fournisseurTableAdapter _fournisseurTableAdapter;
        
        private lignecommandeachatTableAdapter _lignecommandeachatTableAdapter;
        
        private lignecommandeventeTableAdapter _lignecommandeventeTableAdapter;
        
        private lignedevisTableAdapter _lignedevisTableAdapter;
        
        private lignefactureTableAdapter _lignefactureTableAdapter;
        
        private produitTableAdapter _produitTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public categorieTableAdapter categorieTableAdapter {
            get {
                return this._categorieTableAdapter;
            }
            set {
                this._categorieTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public clientTableAdapter clientTableAdapter {
            get {
                return this._clientTableAdapter;
            }
            set {
                this._clientTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public commandeachatTableAdapter commandeachatTableAdapter {
            get {
                return this._commandeachatTableAdapter;
            }
            set {
                this._commandeachatTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public commandeventeTableAdapter commandeventeTableAdapter {
            get {
                return this._commandeventeTableAdapter;
            }
            set {
                this._commandeventeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public devisTableAdapter devisTableAdapter {
            get {
                return this._devisTableAdapter;
            }
            set {
                this._devisTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public factureTableAdapter factureTableAdapter {
            get {
                return this._factureTableAdapter;
            }
            set {
                this._factureTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public familleTableAdapter familleTableAdapter {
            get {
                return this._familleTableAdapter;
            }
            set {
                this._familleTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public fournisseurTableAdapter fournisseurTableAdapter {
            get {
                return this._fournisseurTableAdapter;
            }
            set {
                this._fournisseurTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public lignecommandeachatTableAdapter lignecommandeachatTableAdapter {
            get {
                return this._lignecommandeachatTableAdapter;
            }
            set {
                this._lignecommandeachatTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public lignecommandeventeTableAdapter lignecommandeventeTableAdapter {
            get {
                return this._lignecommandeventeTableAdapter;
            }
            set {
                this._lignecommandeventeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public lignedevisTableAdapter lignedevisTableAdapter {
            get {
                return this._lignedevisTableAdapter;
            }
            set {
                this._lignedevisTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public lignefactureTableAdapter lignefactureTableAdapter {
            get {
                return this._lignefactureTableAdapter;
            }
            set {
                this._lignefactureTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public produitTableAdapter produitTableAdapter {
            get {
                return this._produitTableAdapter;
            }
            set {
                this._produitTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._categorieTableAdapter != null) 
                            && (this._categorieTableAdapter.Connection != null))) {
                    return this._categorieTableAdapter.Connection;
                }
                if (((this._clientTableAdapter != null) 
                            && (this._clientTableAdapter.Connection != null))) {
                    return this._clientTableAdapter.Connection;
                }
                if (((this._commandeachatTableAdapter != null) 
                            && (this._commandeachatTableAdapter.Connection != null))) {
                    return this._commandeachatTableAdapter.Connection;
                }
                if (((this._commandeventeTableAdapter != null) 
                            && (this._commandeventeTableAdapter.Connection != null))) {
                    return this._commandeventeTableAdapter.Connection;
                }
                if (((this._devisTableAdapter != null) 
                            && (this._devisTableAdapter.Connection != null))) {
                    return this._devisTableAdapter.Connection;
                }
                if (((this._factureTableAdapter != null) 
                            && (this._factureTableAdapter.Connection != null))) {
                    return this._factureTableAdapter.Connection;
                }
                if (((this._familleTableAdapter != null) 
                            && (this._familleTableAdapter.Connection != null))) {
                    return this._familleTableAdapter.Connection;
                }
                if (((this._fournisseurTableAdapter != null) 
                            && (this._fournisseurTableAdapter.Connection != null))) {
                    return this._fournisseurTableAdapter.Connection;
                }
                if (((this._lignecommandeachatTableAdapter != null) 
                            && (this._lignecommandeachatTableAdapter.Connection != null))) {
                    return this._lignecommandeachatTableAdapter.Connection;
                }
                if (((this._lignecommandeventeTableAdapter != null) 
                            && (this._lignecommandeventeTableAdapter.Connection != null))) {
                    return this._lignecommandeventeTableAdapter.Connection;
                }
                if (((this._lignedevisTableAdapter != null) 
                            && (this._lignedevisTableAdapter.Connection != null))) {
                    return this._lignedevisTableAdapter.Connection;
                }
                if (((this._lignefactureTableAdapter != null) 
                            && (this._lignefactureTableAdapter.Connection != null))) {
                    return this._lignefactureTableAdapter.Connection;
                }
                if (((this._produitTableAdapter != null) 
                            && (this._produitTableAdapter.Connection != null))) {
                    return this._produitTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._categorieTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clientTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._commandeachatTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._commandeventeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._devisTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._factureTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._familleTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fournisseurTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lignecommandeachatTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lignecommandeventeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lignedevisTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lignefactureTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._produitTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(gestioncommercialeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._familleTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.famille.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._familleTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fournisseurTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.fournisseur.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fournisseurTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clientTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.client.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clientTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._categorieTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.categorie.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._categorieTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._produitTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.produit.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._produitTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._commandeachatTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.commandeachat.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._commandeachatTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._commandeventeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.commandevente.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._commandeventeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._devisTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.devis.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._devisTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._factureTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.facture.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._factureTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lignefactureTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.lignefacture.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lignefactureTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lignecommandeventeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.lignecommandevente.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lignecommandeventeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lignecommandeachatTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.lignecommandeachat.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lignecommandeachatTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lignedevisTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.lignedevis.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lignedevisTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(gestioncommercialeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._familleTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.famille.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._familleTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fournisseurTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.fournisseur.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fournisseurTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clientTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.client.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clientTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._categorieTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.categorie.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._categorieTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._produitTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.produit.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._produitTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._commandeachatTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.commandeachat.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._commandeachatTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._commandeventeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.commandevente.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._commandeventeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._devisTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.devis.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._devisTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._factureTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.facture.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._factureTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lignefactureTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.lignefacture.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lignefactureTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lignecommandeventeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.lignecommandevente.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lignecommandeventeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lignecommandeachatTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.lignecommandeachat.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lignecommandeachatTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lignedevisTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.lignedevis.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lignedevisTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(gestioncommercialeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._lignedevisTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.lignedevis.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lignedevisTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lignecommandeachatTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.lignecommandeachat.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lignecommandeachatTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lignecommandeventeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.lignecommandevente.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lignecommandeventeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lignefactureTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.lignefacture.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lignefactureTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._factureTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.facture.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._factureTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._devisTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.devis.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._devisTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._commandeventeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.commandevente.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._commandeventeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._commandeachatTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.commandeachat.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._commandeachatTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._produitTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.produit.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._produitTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._categorieTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.categorie.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._categorieTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clientTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.client.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clientTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fournisseurTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.fournisseur.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fournisseurTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._familleTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.famille.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._familleTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(gestioncommercialeDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._categorieTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._categorieTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._clientTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clientTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._commandeachatTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._commandeachatTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._commandeventeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._commandeventeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._devisTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._devisTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._factureTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._factureTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._familleTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._familleTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._fournisseurTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fournisseurTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._lignecommandeachatTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lignecommandeachatTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._lignecommandeventeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lignecommandeventeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._lignedevisTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lignedevisTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._lignefactureTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lignefactureTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._produitTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._produitTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager ne contient pas d\'informations de connexion. Définissez chaqu" +
                        "e propriété TableAdapterManager TableAdapter à une instance valide de TableAdapt" +
                        "er.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transaction ne peut pas commencer. La connexion de données actuelle ne prend p" +
                        "as en charge les transactions ou l\'état actuel n\'autorise pas le début de la tra" +
                        "nsaction.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._categorieTableAdapter != null)) {
                    revertConnections.Add(this._categorieTableAdapter, this._categorieTableAdapter.Connection);
                    this._categorieTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._categorieTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._categorieTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._categorieTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._categorieTableAdapter.Adapter);
                    }
                }
                if ((this._clientTableAdapter != null)) {
                    revertConnections.Add(this._clientTableAdapter, this._clientTableAdapter.Connection);
                    this._clientTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._clientTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._clientTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clientTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clientTableAdapter.Adapter);
                    }
                }
                if ((this._commandeachatTableAdapter != null)) {
                    revertConnections.Add(this._commandeachatTableAdapter, this._commandeachatTableAdapter.Connection);
                    this._commandeachatTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._commandeachatTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._commandeachatTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._commandeachatTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._commandeachatTableAdapter.Adapter);
                    }
                }
                if ((this._commandeventeTableAdapter != null)) {
                    revertConnections.Add(this._commandeventeTableAdapter, this._commandeventeTableAdapter.Connection);
                    this._commandeventeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._commandeventeTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._commandeventeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._commandeventeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._commandeventeTableAdapter.Adapter);
                    }
                }
                if ((this._devisTableAdapter != null)) {
                    revertConnections.Add(this._devisTableAdapter, this._devisTableAdapter.Connection);
                    this._devisTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._devisTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._devisTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._devisTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._devisTableAdapter.Adapter);
                    }
                }
                if ((this._factureTableAdapter != null)) {
                    revertConnections.Add(this._factureTableAdapter, this._factureTableAdapter.Connection);
                    this._factureTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._factureTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._factureTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._factureTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._factureTableAdapter.Adapter);
                    }
                }
                if ((this._familleTableAdapter != null)) {
                    revertConnections.Add(this._familleTableAdapter, this._familleTableAdapter.Connection);
                    this._familleTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._familleTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._familleTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._familleTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._familleTableAdapter.Adapter);
                    }
                }
                if ((this._fournisseurTableAdapter != null)) {
                    revertConnections.Add(this._fournisseurTableAdapter, this._fournisseurTableAdapter.Connection);
                    this._fournisseurTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._fournisseurTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._fournisseurTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fournisseurTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fournisseurTableAdapter.Adapter);
                    }
                }
                if ((this._lignecommandeachatTableAdapter != null)) {
                    revertConnections.Add(this._lignecommandeachatTableAdapter, this._lignecommandeachatTableAdapter.Connection);
                    this._lignecommandeachatTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._lignecommandeachatTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._lignecommandeachatTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lignecommandeachatTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lignecommandeachatTableAdapter.Adapter);
                    }
                }
                if ((this._lignecommandeventeTableAdapter != null)) {
                    revertConnections.Add(this._lignecommandeventeTableAdapter, this._lignecommandeventeTableAdapter.Connection);
                    this._lignecommandeventeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._lignecommandeventeTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._lignecommandeventeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lignecommandeventeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lignecommandeventeTableAdapter.Adapter);
                    }
                }
                if ((this._lignedevisTableAdapter != null)) {
                    revertConnections.Add(this._lignedevisTableAdapter, this._lignedevisTableAdapter.Connection);
                    this._lignedevisTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._lignedevisTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._lignedevisTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lignedevisTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lignedevisTableAdapter.Adapter);
                    }
                }
                if ((this._lignefactureTableAdapter != null)) {
                    revertConnections.Add(this._lignefactureTableAdapter, this._lignefactureTableAdapter.Connection);
                    this._lignefactureTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._lignefactureTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._lignefactureTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lignefactureTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lignefactureTableAdapter.Adapter);
                    }
                }
                if ((this._produitTableAdapter != null)) {
                    revertConnections.Add(this._produitTableAdapter, this._produitTableAdapter.Connection);
                    this._produitTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._produitTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._produitTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._produitTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._produitTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._categorieTableAdapter != null)) {
                    this._categorieTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._categorieTableAdapter]));
                    this._categorieTableAdapter.Transaction = null;
                }
                if ((this._clientTableAdapter != null)) {
                    this._clientTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._clientTableAdapter]));
                    this._clientTableAdapter.Transaction = null;
                }
                if ((this._commandeachatTableAdapter != null)) {
                    this._commandeachatTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._commandeachatTableAdapter]));
                    this._commandeachatTableAdapter.Transaction = null;
                }
                if ((this._commandeventeTableAdapter != null)) {
                    this._commandeventeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._commandeventeTableAdapter]));
                    this._commandeventeTableAdapter.Transaction = null;
                }
                if ((this._devisTableAdapter != null)) {
                    this._devisTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._devisTableAdapter]));
                    this._devisTableAdapter.Transaction = null;
                }
                if ((this._factureTableAdapter != null)) {
                    this._factureTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._factureTableAdapter]));
                    this._factureTableAdapter.Transaction = null;
                }
                if ((this._familleTableAdapter != null)) {
                    this._familleTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._familleTableAdapter]));
                    this._familleTableAdapter.Transaction = null;
                }
                if ((this._fournisseurTableAdapter != null)) {
                    this._fournisseurTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._fournisseurTableAdapter]));
                    this._fournisseurTableAdapter.Transaction = null;
                }
                if ((this._lignecommandeachatTableAdapter != null)) {
                    this._lignecommandeachatTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._lignecommandeachatTableAdapter]));
                    this._lignecommandeachatTableAdapter.Transaction = null;
                }
                if ((this._lignecommandeventeTableAdapter != null)) {
                    this._lignecommandeventeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._lignecommandeventeTableAdapter]));
                    this._lignecommandeventeTableAdapter.Transaction = null;
                }
                if ((this._lignedevisTableAdapter != null)) {
                    this._lignedevisTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._lignedevisTableAdapter]));
                    this._lignedevisTableAdapter.Transaction = null;
                }
                if ((this._lignefactureTableAdapter != null)) {
                    this._lignefactureTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._lignefactureTableAdapter]));
                    this._lignefactureTableAdapter.Transaction = null;
                }
                if ((this._produitTableAdapter != null)) {
                    this._produitTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._produitTableAdapter]));
                    this._produitTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591